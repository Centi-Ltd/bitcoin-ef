{"version":3,"file":"typescript-npm-package.umd.js","sources":["../../node_modules/.pnpm/bn.js@4.11.9/node_modules/bn.js/lib/bn.js","../../node_modules/.pnpm/@vaionex+bsv@git+https+++git@gitlab.com+centipay+bsv.git#199a950328e7aa76322fb03a3e64ce8c0399e7e6/node_modules/@vaionex/bsv/lib/util/_.js","../../node_modules/.pnpm/@vaionex+bsv@git+https+++git@gitlab.com+centipay+bsv.git#199a950328e7aa76322fb03a3e64ce8c0399e7e6/node_modules/@vaionex/bsv/lib/errors/spec.js","../../node_modules/.pnpm/@vaionex+bsv@git+https+++git@gitlab.com+centipay+bsv.git#199a950328e7aa76322fb03a3e64ce8c0399e7e6/node_modules/@vaionex/bsv/lib/errors/index.js","../../node_modules/.pnpm/@vaionex+bsv@git+https+++git@gitlab.com+centipay+bsv.git#199a950328e7aa76322fb03a3e64ce8c0399e7e6/node_modules/@vaionex/bsv/lib/util/preconditions.js","../../node_modules/.pnpm/@vaionex+bsv@git+https+++git@gitlab.com+centipay+bsv.git#199a950328e7aa76322fb03a3e64ce8c0399e7e6/node_modules/@vaionex/bsv/lib/crypto/bn.js","../../node_modules/.pnpm/minimalistic-assert@1.0.1/node_modules/minimalistic-assert/index.js","../../node_modules/.pnpm/minimalistic-crypto-utils@1.0.1/node_modules/minimalistic-crypto-utils/lib/utils.js","../../node_modules/.pnpm/elliptic@6.5.4/node_modules/elliptic/lib/elliptic/utils.js","../../node_modules/.pnpm/brorand@1.1.0/node_modules/brorand/index.js","../../node_modules/.pnpm/elliptic@6.5.4/node_modules/elliptic/lib/elliptic/curve/base.js","../../node_modules/.pnpm/inherits@2.0.4/node_modules/inherits/inherits_browser.js","../../node_modules/.pnpm/inherits@2.0.4/node_modules/inherits/inherits.js","../../node_modules/.pnpm/elliptic@6.5.4/node_modules/elliptic/lib/elliptic/curve/short.js","../../node_modules/.pnpm/elliptic@6.5.4/node_modules/elliptic/lib/elliptic/curve/mont.js","../../node_modules/.pnpm/elliptic@6.5.4/node_modules/elliptic/lib/elliptic/curve/edwards.js","../../node_modules/.pnpm/elliptic@6.5.4/node_modules/elliptic/lib/elliptic/curve/index.js","../../node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/utils.js","../../node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/common.js","../../node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/sha/common.js","../../node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/sha/1.js","../../node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/sha/256.js","../../node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/sha/224.js","../../node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/sha/512.js","../../node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/sha/384.js","../../node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/sha.js","../../node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/ripemd.js","../../node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash/hmac.js","../../node_modules/.pnpm/hash.js@1.1.7/node_modules/hash.js/lib/hash.js","../../node_modules/.pnpm/elliptic@6.5.4/node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js","../../node_modules/.pnpm/elliptic@6.5.4/node_modules/elliptic/lib/elliptic/curves.js","../../node_modules/.pnpm/hmac-drbg@1.0.1/node_modules/hmac-drbg/lib/hmac-drbg.js","../../node_modules/.pnpm/elliptic@6.5.4/node_modules/elliptic/lib/elliptic/ec/key.js","../../node_modules/.pnpm/elliptic@6.5.4/node_modules/elliptic/lib/elliptic/ec/signature.js","../../node_modules/.pnpm/elliptic@6.5.4/node_modules/elliptic/lib/elliptic/ec/index.js","../../node_modules/.pnpm/elliptic@6.5.4/node_modules/elliptic/lib/elliptic/eddsa/key.js","../../node_modules/.pnpm/elliptic@6.5.4/node_modules/elliptic/lib/elliptic/eddsa/signature.js","../../node_modules/.pnpm/elliptic@6.5.4/node_modules/elliptic/lib/elliptic/eddsa/index.js","../../node_modules/.pnpm/elliptic@6.5.4/node_modules/elliptic/lib/elliptic.js","../../node_modules/.pnpm/@vaionex+bsv@git+https+++git@gitlab.com+centipay+bsv.git#199a950328e7aa76322fb03a3e64ce8c0399e7e6/node_modules/@vaionex/bsv/lib/crypto/point.js","../../node_modules/.pnpm/@vaionex+bsv@git+https+++git@gitlab.com+centipay+bsv.git#199a950328e7aa76322fb03a3e64ce8c0399e7e6/node_modules/@vaionex/bsv/lib/util/js.js","../../node_modules/.pnpm/@vaionex+bsv@git+https+++git@gitlab.com+centipay+bsv.git#199a950328e7aa76322fb03a3e64ce8c0399e7e6/node_modules/@vaionex/bsv/lib/crypto/signature.js","../../node_modules/.pnpm/@vaionex+bsv@git+https+++git@gitlab.com+centipay+bsv.git#199a950328e7aa76322fb03a3e64ce8c0399e7e6/node_modules/@vaionex/bsv/lib/crypto/hash.browser.js","../../node_modules/.pnpm/@vaionex+bsv@git+https+++git@gitlab.com+centipay+bsv.git#199a950328e7aa76322fb03a3e64ce8c0399e7e6/node_modules/@vaionex/bsv/lib/crypto/hash.node.js","../../node_modules/.pnpm/@vaionex+bsv@git+https+++git@gitlab.com+centipay+bsv.git#199a950328e7aa76322fb03a3e64ce8c0399e7e6/node_modules/@vaionex/bsv/lib/crypto/hash.js","../../node_modules/.pnpm/@vaionex+bsv@git+https+++git@gitlab.com+centipay+bsv.git#199a950328e7aa76322fb03a3e64ce8c0399e7e6/node_modules/@vaionex/bsv/lib/networks.js","../../node_modules/.pnpm/safe-buffer@5.2.1/node_modules/safe-buffer/index.js","../../node_modules/.pnpm/base-x@3.0.10/node_modules/base-x/src/index.js","../../node_modules/.pnpm/bs58@4.0.1/node_modules/bs58/index.js","../../node_modules/.pnpm/@vaionex+bsv@git+https+++git@gitlab.com+centipay+bsv.git#199a950328e7aa76322fb03a3e64ce8c0399e7e6/node_modules/@vaionex/bsv/lib/encoding/base58.js","../../node_modules/.pnpm/@vaionex+bsv@git+https+++git@gitlab.com+centipay+bsv.git#199a950328e7aa76322fb03a3e64ce8c0399e7e6/node_modules/@vaionex/bsv/lib/encoding/base58check.js","../../node_modules/.pnpm/@vaionex+bsv@git+https+++git@gitlab.com+centipay+bsv.git#199a950328e7aa76322fb03a3e64ce8c0399e7e6/node_modules/@vaionex/bsv/lib/encoding/bufferreader.js","../../node_modules/.pnpm/@vaionex+bsv@git+https+++git@gitlab.com+centipay+bsv.git#199a950328e7aa76322fb03a3e64ce8c0399e7e6/node_modules/@vaionex/bsv/lib/encoding/bufferwriter.js","../../node_modules/.pnpm/@vaionex+bsv@git+https+++git@gitlab.com+centipay+bsv.git#199a950328e7aa76322fb03a3e64ce8c0399e7e6/node_modules/@vaionex/bsv/lib/opcode.js","../../node_modules/.pnpm/@vaionex+bsv@git+https+++git@gitlab.com+centipay+bsv.git#199a950328e7aa76322fb03a3e64ce8c0399e7e6/node_modules/@vaionex/bsv/lib/script/script.js","../../node_modules/.pnpm/@vaionex+bsv@git+https+++git@gitlab.com+centipay+bsv.git#199a950328e7aa76322fb03a3e64ce8c0399e7e6/node_modules/@vaionex/bsv/lib/script/stack.js","../../node_modules/.pnpm/@vaionex+bsv@git+https+++git@gitlab.com+centipay+bsv.git#199a950328e7aa76322fb03a3e64ce8c0399e7e6/node_modules/@vaionex/bsv/lib/encoding/varint.js","../../node_modules/.pnpm/@vaionex+bsv@git+https+++git@gitlab.com+centipay+bsv.git#199a950328e7aa76322fb03a3e64ce8c0399e7e6/node_modules/@vaionex/bsv/lib/transaction/output.js","../../node_modules/.pnpm/@vaionex+bsv@git+https+++git@gitlab.com+centipay+bsv.git#199a950328e7aa76322fb03a3e64ce8c0399e7e6/node_modules/@vaionex/bsv/lib/transaction/input/input.js","../../node_modules/.pnpm/inherits@2.0.3/node_modules/inherits/inherits_browser.js","../../node_modules/.pnpm/inherits@2.0.3/node_modules/inherits/inherits.js","../../node_modules/.pnpm/@vaionex+bsv@git+https+++git@gitlab.com+centipay+bsv.git#199a950328e7aa76322fb03a3e64ce8c0399e7e6/node_modules/@vaionex/bsv/lib/transaction/signature.js","../../node_modules/.pnpm/@vaionex+bsv@git+https+++git@gitlab.com+centipay+bsv.git#199a950328e7aa76322fb03a3e64ce8c0399e7e6/node_modules/@vaionex/bsv/lib/transaction/input/publickey.js","../../node_modules/.pnpm/@vaionex+bsv@git+https+++git@gitlab.com+centipay+bsv.git#199a950328e7aa76322fb03a3e64ce8c0399e7e6/node_modules/@vaionex/bsv/lib/transaction/input/publickeyhash.js","../../node_modules/.pnpm/@vaionex+bsv@git+https+++git@gitlab.com+centipay+bsv.git#199a950328e7aa76322fb03a3e64ce8c0399e7e6/node_modules/@vaionex/bsv/lib/transaction/input/multisig.js","../../node_modules/.pnpm/@vaionex+bsv@git+https+++git@gitlab.com+centipay+bsv.git#199a950328e7aa76322fb03a3e64ce8c0399e7e6/node_modules/@vaionex/bsv/lib/transaction/input/multisigscripthash.js","../../node_modules/.pnpm/@vaionex+bsv@git+https+++git@gitlab.com+centipay+bsv.git#199a950328e7aa76322fb03a3e64ce8c0399e7e6/node_modules/@vaionex/bsv/lib/transaction/input/index.js","../../node_modules/.pnpm/@vaionex+bsv@git+https+++git@gitlab.com+centipay+bsv.git#199a950328e7aa76322fb03a3e64ce8c0399e7e6/node_modules/@vaionex/bsv/lib/transaction/sighash.js","../../node_modules/.pnpm/@vaionex+bsv@git+https+++git@gitlab.com+centipay+bsv.git#199a950328e7aa76322fb03a3e64ce8c0399e7e6/node_modules/@vaionex/bsv/lib/transaction/unspentoutput.js","../../node_modules/.pnpm/@vaionex+bsv@git+https+++git@gitlab.com+centipay+bsv.git#199a950328e7aa76322fb03a3e64ce8c0399e7e6/node_modules/@vaionex/bsv/lib/transaction/transaction.js","../../node_modules/.pnpm/@vaionex+bsv@git+https+++git@gitlab.com+centipay+bsv.git#199a950328e7aa76322fb03a3e64ce8c0399e7e6/node_modules/@vaionex/bsv/lib/transaction/index.js","../../node_modules/.pnpm/@vaionex+bsv@git+https+++git@gitlab.com+centipay+bsv.git#199a950328e7aa76322fb03a3e64ce8c0399e7e6/node_modules/@vaionex/bsv/lib/script/interpreter.js","../../node_modules/.pnpm/@vaionex+bsv@git+https+++git@gitlab.com+centipay+bsv.git#199a950328e7aa76322fb03a3e64ce8c0399e7e6/node_modules/@vaionex/bsv/lib/script/index.js","../../node_modules/.pnpm/@vaionex+bsv@git+https+++git@gitlab.com+centipay+bsv.git#199a950328e7aa76322fb03a3e64ce8c0399e7e6/node_modules/@vaionex/bsv/lib/address.js","../../node_modules/.pnpm/@vaionex+bsv@git+https+++git@gitlab.com+centipay+bsv.git#199a950328e7aa76322fb03a3e64ce8c0399e7e6/node_modules/@vaionex/bsv/lib/crypto/random.js","../../node_modules/.pnpm/@vaionex+bsv@git+https+++git@gitlab.com+centipay+bsv.git#199a950328e7aa76322fb03a3e64ce8c0399e7e6/node_modules/@vaionex/bsv/lib/privatekey.js","../../node_modules/.pnpm/@vaionex+bsv@git+https+++git@gitlab.com+centipay+bsv.git#199a950328e7aa76322fb03a3e64ce8c0399e7e6/node_modules/@vaionex/bsv/lib/publickey.js","../../node_modules/.pnpm/@vaionex+bsv@git+https+++git@gitlab.com+centipay+bsv.git#199a950328e7aa76322fb03a3e64ce8c0399e7e6/node_modules/@vaionex/bsv/lib/crypto/ecdsa.js","../../node_modules/.pnpm/@vaionex+bsv@git+https+++git@gitlab.com+centipay+bsv.git#199a950328e7aa76322fb03a3e64ce8c0399e7e6/node_modules/@vaionex/bsv/lib/block/blockheader.js","../../node_modules/.pnpm/@vaionex+bsv@git+https+++git@gitlab.com+centipay+bsv.git#199a950328e7aa76322fb03a3e64ce8c0399e7e6/node_modules/@vaionex/bsv/lib/block/block.js","../../node_modules/.pnpm/@vaionex+bsv@git+https+++git@gitlab.com+centipay+bsv.git#199a950328e7aa76322fb03a3e64ce8c0399e7e6/node_modules/@vaionex/bsv/lib/block/merkleblock.js","../../node_modules/.pnpm/@vaionex+bsv@git+https+++git@gitlab.com+centipay+bsv.git#199a950328e7aa76322fb03a3e64ce8c0399e7e6/node_modules/@vaionex/bsv/lib/block/index.js","../../node_modules/.pnpm/@vaionex+bsv@git+https+++git@gitlab.com+centipay+bsv.git#199a950328e7aa76322fb03a3e64ce8c0399e7e6/node_modules/@vaionex/bsv/lib/hdpublickey.js","../../node_modules/.pnpm/@vaionex+bsv@git+https+++git@gitlab.com+centipay+bsv.git#199a950328e7aa76322fb03a3e64ce8c0399e7e6/node_modules/@vaionex/bsv/lib/hdprivatekey.js","../../node_modules/.pnpm/@vaionex+bsv@git+https+++git@gitlab.com+centipay+bsv.git#199a950328e7aa76322fb03a3e64ce8c0399e7e6/node_modules/@vaionex/bsv/index.js","../../node_modules/.pnpm/bn.js@5.2.1/node_modules/bn.js/lib/bn.js","../../src/bufferreader.ts","../../src/bufferwriter.ts","../../src/helpers.ts","../../src/standard-to-extended.ts","../../src/bsv/index.ts"],"sourcesContent":["(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","'use strict'\n\nvar _ = {}\n\n_.isArray = t => Array.isArray(t)\n_.isNumber = t => typeof t === 'number'\n_.isObject = t => t && typeof t === 'object'\n_.isString = t => typeof t === 'string'\n_.isUndefined = t => typeof t === 'undefined'\n_.isFunction = t => typeof t === 'function'\n_.isNull = t => t === null\n_.isDate = t => t instanceof Date\n_.extend = (a, b) => Object.assign(a, b)\n_.noop = () => { }\n_.every = (a, f) => a.every(f || (t => t))\n_.map = (a, f) => Array.from(a).map(f || (t => t))\n_.includes = (a, e) => a.includes(e)\n_.each = (a, f) => a.forEach(f)\n_.clone = o => Object.assign({}, o)\n_.pick = (object, keys) => {\n  const obj = {}\n  keys.forEach(key => {\n    if (typeof object[key] !== 'undefined') { obj[key] = object[key] }\n  })\n  return obj\n}\n_.values = o => Object.values(o)\n_.filter = (a, f) => a.filter(f)\n_.reduce = (a, f, s) => a.reduce(f, s)\n_.without = (a, n) => a.filter(t => t !== n)\n_.shuffle = a => {\n  const result = a.slice(0)\n  for (let i = result.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [result[i], result[j]] = [result[j], result[i]]\n  }\n  return result\n}\n_.difference = (a, b) => a.filter(t => !b.includes(t))\n_.findIndex = (a, f) => a.findIndex(f)\n_.some = (a, f) => a.some(f)\n_.range = n => [...Array(n).keys()]\n\nmodule.exports = _\n","'use strict'\n\nvar docsURL = 'https://docs.moneybutton.com/'\n\nmodule.exports = [{\n  name: 'InvalidB58Char',\n  message: 'Invalid Base58 character: {0} in {1}'\n}, {\n  name: 'InvalidB58Checksum',\n  message: 'Invalid Base58 checksum for {0}'\n}, {\n  name: 'InvalidNetwork',\n  message: 'Invalid version for network: got {0}'\n}, {\n  name: 'InvalidState',\n  message: 'Invalid state: {0}'\n}, {\n  name: 'NotImplemented',\n  message: 'Function {0} was not implemented yet'\n}, {\n  name: 'InvalidNetworkArgument',\n  message: 'Invalid network: must be \"livenet\" or \"testnet\", got {0}'\n}, {\n  name: 'InvalidArgument',\n  message: function () {\n    return 'Invalid Argument' + (arguments[0] ? (': ' + arguments[0]) : '') +\n      (arguments[1] ? (' Documentation: ' + docsURL + arguments[1]) : '')\n  }\n}, {\n  name: 'AbstractMethodInvoked',\n  message: 'Abstract Method Invocation: {0}'\n}, {\n  name: 'InvalidArgumentType',\n  message: function () {\n    return 'Invalid Argument for ' + arguments[2] + ', expected ' + arguments[1] + ' but got ' + typeof arguments[0]\n  }\n}, {\n  name: 'Unit',\n  message: 'Internal Error on Unit {0}',\n  errors: [{\n    'name': 'UnknownCode',\n    'message': 'Unrecognized unit code: {0}'\n  }, {\n    'name': 'InvalidRate',\n    'message': 'Invalid exchange rate: {0}'\n  }]\n}, {\n  name: 'MerkleBlock',\n  message: 'Internal Error on MerkleBlock {0}',\n  errors: [{\n    'name': 'InvalidMerkleTree',\n    'message': 'This MerkleBlock contain an invalid Merkle Tree'\n  }]\n}, {\n  name: 'Transaction',\n  message: 'Internal Error on Transaction {0}',\n  errors: [{\n    name: 'Input',\n    message: 'Internal Error on Input {0}',\n    errors: [{\n      name: 'MissingScript',\n      message: 'Need a script to create an input'\n    }, {\n      name: 'UnsupportedScript',\n      message: 'Unsupported input script type: {0}'\n    }, {\n      name: 'MissingPreviousOutput',\n      message: 'No previous output information.'\n    }]\n  }, {\n    name: 'NeedMoreInfo',\n    message: '{0}'\n  }, {\n    name: 'InvalidSorting',\n    message: 'The sorting function provided did not return the change output as one of the array elements'\n  }, {\n    name: 'InvalidOutputAmountSum',\n    message: '{0}'\n  }, {\n    name: 'MissingSignatures',\n    message: 'Some inputs have not been fully signed'\n  }, {\n    name: 'InvalidIndex',\n    message: 'Invalid index: {0} is not between 0, {1}'\n  }, {\n    name: 'UnableToVerifySignature',\n    message: 'Unable to verify signature: {0}'\n  }, {\n    name: 'DustOutputs',\n    message: 'Dust amount detected in one output'\n  }, {\n    name: 'InvalidSatoshis',\n    message: 'Output satoshis are invalid'\n  }, {\n    name: 'FeeError',\n    message: 'Internal Error on Fee {0}',\n    errors: [{\n      name: 'TooSmall',\n      message: 'Fee is too small: {0}'\n    }, {\n      name: 'TooLarge',\n      message: 'Fee is too large: {0}'\n    }, {\n      name: 'Different',\n      message: 'Unspent value is different from specified fee: {0}'\n    }]\n  }, {\n    name: 'ChangeAddressMissing',\n    message: 'Change address is missing'\n  }, {\n    name: 'BlockHeightTooHigh',\n    message: 'Block Height can be at most 2^32 -1'\n  }, {\n    name: 'NLockTimeOutOfRange',\n    message: 'Block Height can only be between 0 and 499 999 999'\n  }, {\n    name: 'LockTimeTooEarly',\n    message: 'Lock Time can\\'t be earlier than UNIX date 500 000 000'\n  }, {\n    name: 'TransactionAlreadySealed',\n    message: 'Cannot update sealed transaction'\n  }]\n}, {\n  name: 'Script',\n  message: 'Internal Error on Script {0}',\n  errors: [{\n    name: 'UnrecognizedAddress',\n    message: 'Expected argument {0} to be an address'\n  }, {\n    name: 'CantDeriveAddress',\n    message: 'Can\\'t derive address associated with script {0}, needs to be p2pkh in, p2pkh out, p2sh in, or p2sh out.'\n  }, {\n    name: 'InvalidBuffer',\n    message: 'Invalid script buffer: can\\'t parse valid script from given buffer {0}'\n  }]\n}, {\n  name: 'HDPrivateKey',\n  message: 'Internal Error on HDPrivateKey {0}',\n  errors: [{\n    name: 'InvalidDerivationArgument',\n    message: 'Invalid derivation argument {0}, expected string, or number and boolean'\n  }, {\n    name: 'InvalidEntropyArgument',\n    message: 'Invalid entropy: must be an hexa string or binary buffer, got {0}',\n    errors: [{\n      name: 'TooMuchEntropy',\n      message: 'Invalid entropy: more than 512 bits is non standard, got \"{0}\"'\n    }, {\n      name: 'NotEnoughEntropy',\n      message: 'Invalid entropy: at least 128 bits needed, got \"{0}\"'\n    }]\n  }, {\n    name: 'InvalidLength',\n    message: 'Invalid length for xprivkey string in {0}'\n  }, {\n    name: 'InvalidPath',\n    message: 'Invalid derivation path: {0}'\n  }, {\n    name: 'UnrecognizedArgument',\n    message: 'Invalid argument: creating a HDPrivateKey requires a string, buffer, json or object, got \"{0}\"'\n  }]\n}, {\n  name: 'HDPublicKey',\n  message: 'Internal Error on HDPublicKey {0}',\n  errors: [{\n    name: 'ArgumentIsPrivateExtended',\n    message: 'Argument is an extended private key: {0}'\n  }, {\n    name: 'InvalidDerivationArgument',\n    message: 'Invalid derivation argument: got {0}'\n  }, {\n    name: 'InvalidLength',\n    message: 'Invalid length for xpubkey: got \"{0}\"'\n  }, {\n    name: 'InvalidPath',\n    message: 'Invalid derivation path, it should look like: \"m/1/100\", got \"{0}\"'\n  }, {\n    name: 'InvalidIndexCantDeriveHardened',\n    message: 'Invalid argument: creating a hardened path requires an HDPrivateKey'\n  }, {\n    name: 'MustSupplyArgument',\n    message: 'Must supply an argument to create a HDPublicKey'\n  }, {\n    name: 'UnrecognizedArgument',\n    message: 'Invalid argument for creation, must be string, json, buffer, or object'\n  }]\n}]\n","'use strict'\n\nvar _ = require('../util/_')\n\nfunction format (message, args) {\n  return message\n    .replace('{0}', args[0])\n    .replace('{1}', args[1])\n    .replace('{2}', args[2])\n}\nvar traverseNode = function (parent, errorDefinition) {\n  var NodeError = function () {\n    if (_.isString(errorDefinition.message)) {\n      this.message = format(errorDefinition.message, arguments)\n    } else if (_.isFunction(errorDefinition.message)) {\n      this.message = errorDefinition.message.apply(null, arguments)\n    } else {\n      throw new Error('Invalid error definition for ' + errorDefinition.name)\n    }\n    this.stack = this.message + '\\n' + (new Error()).stack\n  }\n  NodeError.prototype = Object.create(parent.prototype)\n  NodeError.prototype.name = parent.prototype.name + errorDefinition.name\n  parent[errorDefinition.name] = NodeError\n  if (errorDefinition.errors) {\n    childDefinitions(NodeError, errorDefinition.errors)\n  }\n  return NodeError\n}\n\nvar childDefinitions = function (parent, childDefinitions) {\n  _.each(childDefinitions, function (childDefinition) {\n    traverseNode(parent, childDefinition)\n  })\n}\n\nvar traverseRoot = function (parent, errorsDefinition) {\n  childDefinitions(parent, errorsDefinition)\n  return parent\n}\n\nvar bsv = {}\nbsv.Error = function () {\n  this.message = 'Internal error'\n  this.stack = this.message + '\\n' + (new Error()).stack\n}\nbsv.Error.prototype = Object.create(Error.prototype)\nbsv.Error.prototype.name = 'bsv.Error'\n\nvar data = require('./spec')\ntraverseRoot(bsv.Error, data)\n\nmodule.exports = bsv.Error\n\nmodule.exports.extend = function (spec) {\n  return traverseNode(bsv.Error, spec)\n}\n","'use strict'\n\nvar errors = require('../errors')\nvar _ = require('../util/_')\n\nmodule.exports = {\n  checkState: function (condition, message) {\n    if (!condition) {\n      throw new errors.InvalidState(message)\n    }\n  },\n  checkArgument: function (condition, argumentName, message, docsPath) {\n    if (!condition) {\n      throw new errors.InvalidArgument(argumentName, message, docsPath)\n    }\n  },\n  checkArgumentType: function (argument, type, argumentName) {\n    argumentName = argumentName || '(unknown name)'\n    if (_.isString(type)) {\n      if (type === 'Buffer') {\n        var buffer = require('buffer') // './buffer' fails on cordova & RN\n        if (!buffer.Buffer.isBuffer(argument)) {\n          throw new errors.InvalidArgumentType(argument, type, argumentName)\n        }\n      } else if (typeof argument !== type) { // eslint-disable-line\n        throw new errors.InvalidArgumentType(argument, type, argumentName)\n      }\n    } else {\n      if (!(argument instanceof type)) {\n        throw new errors.InvalidArgumentType(argument, type.name, argumentName)\n      }\n    }\n  }\n}\n","'use strict'\n\nvar BN = require('bn.js')\nvar $ = require('../util/preconditions')\nvar _ = require('../util/_')\n\nvar reversebuf = function (buf) {\n  var buf2 = Buffer.alloc(buf.length)\n  for (var i = 0; i < buf.length; i++) {\n    buf2[i] = buf[buf.length - 1 - i]\n  }\n  return buf2\n}\n\nBN.Zero = new BN(0)\nBN.One = new BN(1)\nBN.Minus1 = new BN(-1)\n\n/**\n * Convert a number into a big number.\n *\n * @param {number} n Any positive or negative integer.\n */\nBN.fromNumber = function (n) {\n  $.checkArgument(_.isNumber(n))\n  return new BN(n)\n}\n\n/**\n * Convert a string number into a big number.\n *\n * @param {string} str Any positive or negative integer formatted as a string.\n * @param {number} base The base of the number, defaults to 10.\n */\nBN.fromString = function (str, base) {\n  $.checkArgument(_.isString(str))\n  return new BN(str, base)\n}\n\n/**\n * Convert a buffer (such as a 256 bit binary private key) into a big number.\n * Sometimes these numbers can be formatted either as 'big endian' or 'little\n * endian', and so there is an opts parameter that lets you specify which\n * endianness is specified.\n *\n * @param {Buffer} buf A buffer number, such as a 256 bit hash or key.\n * @param {Object} opts With a property 'endian' that can be either 'big' or 'little'. Defaults big endian (most significant digit first).\n */\nBN.fromBuffer = function (buf, opts) {\n  if (typeof opts !== 'undefined' && opts.endian === 'little') {\n    buf = reversebuf(buf)\n  }\n  var hex = buf.toString('hex')\n  var bn = new BN(hex, 16)\n  return bn\n}\n\n/**\n * Instantiate a BigNumber from a \"signed magnitude buffer\". (a buffer where the\n * most significant bit represents the sign (0 = positive, 1 = negative)\n *\n * @param {Buffer} buf A buffer number, such as a 256 bit hash or key.\n * @param {Object} opts With a property 'endian' that can be either 'big' or 'little'. Defaults big endian (most significant digit first).\n */\nBN.fromSM = function (buf, opts) {\n  var ret\n  if (buf.length === 0) {\n    return BN.fromBuffer(Buffer.from([0]))\n  }\n\n  var endian = 'big'\n  if (opts) {\n    endian = opts.endian\n  }\n  if (endian === 'little') {\n    buf = reversebuf(buf)\n  }\n\n  if (buf[0] & 0x80) {\n    buf[0] = buf[0] & 0x7f\n    ret = BN.fromBuffer(buf)\n    ret.neg().copy(ret)\n  } else {\n    ret = BN.fromBuffer(buf)\n  }\n  return ret\n}\n\n/**\n * Convert a big number into a number.\n */\nBN.prototype.toNumber = function () {\n  return parseInt(this.toString(10), 10)\n}\n\n/**\n * Convert a big number into a buffer. This is somewhat ambiguous, so there is\n * an opts parameter that let's you specify the endianness or the size.\n * opts.endian can be either 'big' or 'little' and opts.size can be any\n * sufficiently large number of bytes. If you always want to create a 32 byte\n * big endian number, then specify opts = { endian: 'big', size: 32 }\n *\n * @param {Object} opts Defaults to { endian: 'big', size: 32 }\n */\nBN.prototype.toBuffer = function (opts) {\n  var buf, hex\n  if (opts && opts.size) {\n    hex = this.toString(16, 2)\n    var natlen = hex.length / 2\n    buf = Buffer.from(hex, 'hex')\n\n    if (natlen === opts.size) {\n      // buf = buf\n    } else if (natlen > opts.size) {\n      buf = BN.trim(buf, natlen)\n    } else if (natlen < opts.size) {\n      buf = BN.pad(buf, natlen, opts.size)\n    }\n  } else {\n    hex = this.toString(16, 2)\n    buf = Buffer.from(hex, 'hex')\n  }\n\n  if (typeof opts !== 'undefined' && opts.endian === 'little') {\n    buf = reversebuf(buf)\n  }\n\n  return buf\n}\n\n/**\n * For big numbers that are either positive or negative, you can convert to\n * \"sign magnitude\" format whereby the first bit specifies whether the number is\n * positive or negative.\n */\nBN.prototype.toSMBigEndian = function () {\n  var buf\n  if (this.cmp(BN.Zero) === -1) {\n    buf = this.neg().toBuffer()\n    if (buf[0] & 0x80) {\n      buf = Buffer.concat([Buffer.from([0x80]), buf])\n    } else {\n      buf[0] = buf[0] | 0x80\n    }\n  } else {\n    buf = this.toBuffer()\n    if (buf[0] & 0x80) {\n      buf = Buffer.concat([Buffer.from([0x00]), buf])\n    }\n  }\n\n  if (buf.length === 1 & buf[0] === 0) {\n    buf = Buffer.from([])\n  }\n  return buf\n}\n\n/**\n * For big numbers that are either positive or negative, you can convert to\n * \"sign magnitude\" format whereby the first bit specifies whether the number is\n * positive or negative.\n *\n * @param {Object} opts Defaults to { endian: 'big' }\n */\nBN.prototype.toSM = function (opts) {\n  var endian = opts ? opts.endian : 'big'\n  var buf = this.toSMBigEndian()\n\n  if (endian === 'little') {\n    buf = reversebuf(buf)\n  }\n  return buf\n}\n\n/**\n * Create a BN from a \"ScriptNum\": This is analogous to the constructor for\n * CScriptNum in bitcoind. Many ops in bitcoind's script interpreter use\n * CScriptNum, which is not really a proper bignum. Instead, an error is thrown\n * if trying to input a number bigger than 4 bytes. We copy that behavior here.\n * A third argument, `size`, is provided to extend the hard limit of 4 bytes, as\n * some usages require more than 4 bytes.\n *\n * @param {Buffer} buf A buffer of a number.\n * @param {boolean} fRequireMinimal Whether to require minimal size encoding.\n * @param {number} size The maximum size.\n */\nBN.fromScriptNumBuffer = function (buf, fRequireMinimal, size) {\n  // don't limit numSize default\n  var nMaxNumSize = size || Number.MAX_SAFE_INTEGER\n  $.checkArgument(buf.length <= nMaxNumSize, new Error('script number overflow'))\n  if (fRequireMinimal && buf.length > 0) {\n    // Check that the number is encoded with the minimum possible\n    // number of bytes.\n    //\n    // If the most-significant-byte - excluding the sign bit - is zero\n    // then we're not minimal. Note how this test also rejects the\n    // negative-zero encoding, 0x80.\n    if ((buf[buf.length - 1] & 0x7f) === 0) {\n      // One exception: if there's more than one byte and the most\n      // significant bit of the second-most-significant-byte is set\n      // it would conflict with the sign bit. An example of this case\n      // is +-255, which encode to 0xff00 and 0xff80 respectively.\n      // (big-endian).\n      if (buf.length <= 1 || (buf[buf.length - 2] & 0x80) === 0) {\n        throw new Error('non-minimally encoded script number')\n      }\n    }\n  }\n  return BN.fromSM(buf, {\n    endian: 'little'\n  })\n}\n\n/**\n * The corollary to the above, with the notable exception that we do not throw\n * an error if the output is larger than four bytes. (Which can happen if\n * performing a numerical operation that results in an overflow to more than 4\n * bytes).\n */\nBN.prototype.toScriptNumBuffer = function () {\n  return this.toSM({\n    endian: 'little'\n  })\n}\n\n/**\n * Trims a buffer if it starts with zeros.\n *\n * @param {Buffer} buf A buffer formatted number.\n * @param {number} natlen The natural length of the number.\n */\nBN.trim = function (buf, natlen) {\n  return buf.slice(natlen - buf.length, buf.length)\n}\n\n/**\n * Adds extra zeros to the start of a number.\n *\n * @param {Buffer} buf A buffer formatted number.\n * @param {number} natlen The natural length of the number.\n * @param {number} size How big to pad the number in bytes.\n */\nBN.pad = function (buf, natlen, size) {\n  var rbuf = Buffer.alloc(size)\n  for (var i = 0; i < buf.length; i++) {\n    rbuf[rbuf.length - 1 - i] = buf[buf.length - 1 - i]\n  }\n  for (i = 0; i < size - natlen; i++) {\n    rbuf[i] = 0\n  }\n  return rbuf\n}\n/**\n * Convert a big number into a hex string. This is somewhat ambiguous, so there\n * is an opts parameter that let's you specify the endianness or the size.\n * opts.endian can be either 'big' or 'little' and opts.size can be any\n * sufficiently large number of bytes. If you always want to create a 32 byte\n * big endian number, then specify opts = { endian: 'big', size: 32 }\n *\n * @param {Object} opts Defaults to { endian: 'big', size: 32 }\n */\nBN.prototype.toHex = function (...args) {\n  return this.toBuffer(...args).toString('hex')\n}\n\n/**\n * Convert a hex string (such as a 256 bit binary private key) into a big\n * number. Sometimes these numbers can be formatted either as 'big endian' or\n * 'little endian', and so there is an opts parameter that lets you specify\n * which endianness is specified.\n *\n * @param {Buffer} buf A buffer number, such as a 256 bit hash or key.\n * @param {Object} opts With a property 'endian' that can be either 'big' or 'little'. Defaults big endian (most significant digit first).\n */\nBN.fromHex = function (hex, ...args) {\n  return BN.fromBuffer(Buffer.from(hex, 'hex'), ...args)\n}\n\nmodule.exports = BN\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n","'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  naf.fill(0);\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (var i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n","var r;\n\nmodule.exports = function rand(len) {\n  if (!r)\n    r = new Rand(null);\n\n  return r.generate(len);\n};\n\nfunction Rand(rand) {\n  this.rand = rand;\n}\nmodule.exports.Rand = Rand;\n\nRand.prototype.generate = function generate(len) {\n  return this._rand(len);\n};\n\n// Emulate crypto API using randy\nRand.prototype._rand = function _rand(n) {\n  if (this.rand.getBytes)\n    return this.rand.getBytes(n);\n\n  var res = new Uint8Array(n);\n  for (var i = 0; i < res.length; i++)\n    res[i] = this.rand.getByte();\n  return res;\n};\n\nif (typeof self === 'object') {\n  if (self.crypto && self.crypto.getRandomValues) {\n    // Modern browsers\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.crypto.getRandomValues(arr);\n      return arr;\n    };\n  } else if (self.msCrypto && self.msCrypto.getRandomValues) {\n    // IE\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.msCrypto.getRandomValues(arr);\n      return arr;\n    };\n\n  // Safari's WebWorkers do not have `crypto`\n  } else if (typeof window === 'object') {\n    // Old junk\n    Rand.prototype._rand = function() {\n      throw new Error('Not implemented yet');\n    };\n  }\n} else {\n  // Node.js or Web worker with no crypto support\n  try {\n    var crypto = require('crypto');\n    if (typeof crypto.randomBytes !== 'function')\n      throw new Error('Not supported');\n\n    Rand.prototype._rand = function _rand(n) {\n      return crypto.randomBytes(n);\n    };\n  } catch (e) {\n  }\n}\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","try {\n  var util = require('util');\n  /* istanbul ignore next */\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  /* istanbul ignore next */\n  module.exports = require('./inherits_browser.js');\n}\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar utils = require('../utils');\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.i4 = new BN(4).toRed(this.red).redInvm();\n  this.two = new BN(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new BN(x, 16);\n    this.z = new BN(z, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n  }\n}\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  return this.point(utils.toArray(bytes, enc), 1);\n};\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {\n  // No-op\n};\n\nPoint.prototype._encode = function _encode() {\n  return this.getX().toArray('be', this.curve.p.byteLength());\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z);\n  // AA = A^2\n  var aa = a.redSqr();\n  // B = X1 - Z1\n  var b = this.x.redSub(this.z);\n  // BB = B^2\n  var bb = b.redSqr();\n  // C = AA - BB\n  var c = aa.redSub(bb);\n  // X3 = AA * BB\n  var nx = aa.redMul(bb);\n  // Z3 = C * (BB + A24 * C)\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z);\n  // B = X2 - Z2\n  var b = this.x.redSub(this.z);\n  // C = X3 + Z3\n  var c = p.x.redAdd(p.z);\n  // D = X3 - Z3\n  var d = p.x.redSub(p.z);\n  // DA = D * A\n  var da = d.redMul(a);\n  // CB = C * B\n  var cb = c.redMul(b);\n  // X5 = Z1 * (DA + CB)^2\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n  // Z5 = X1 * (DA - CB)^2\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n  var b = this.curve.point(null, null); // (N / 2) * Q\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))\n    bits.push(t.andln(1));\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c);\n      // N * Q = 2 * ((N / 2) * Q + Q))\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c);\n      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n      a = a.dbl();\n    }\n  }\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.jumlAdd = function jumlAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this.getX().cmp(other.getX()) === 0;\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n\n  return this.x.fromRed();\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction EdwardsCurve(conf) {\n  // NOTE: Important as we are creating point in Base.call()\n  this.twisted = (conf.a | 0) !== 1;\n  this.mOneA = this.twisted && (conf.a | 0) === -1;\n  this.extended = this.mOneA;\n\n  Base.call(this, 'edwards', conf);\n\n  this.a = new BN(conf.a, 16).umod(this.red.m);\n  this.a = this.a.toRed(this.red);\n  this.c = new BN(conf.c, 16).toRed(this.red);\n  this.c2 = this.c.redSqr();\n  this.d = new BN(conf.d, 16).toRed(this.red);\n  this.dd = this.d.redAdd(this.d);\n\n  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n  this.oneC = (conf.c | 0) === 1;\n}\ninherits(EdwardsCurve, Base);\nmodule.exports = EdwardsCurve;\n\nEdwardsCurve.prototype._mulA = function _mulA(num) {\n  if (this.mOneA)\n    return num.redNeg();\n  else\n    return this.a.redMul(num);\n};\n\nEdwardsCurve.prototype._mulC = function _mulC(num) {\n  if (this.oneC)\n    return num;\n  else\n    return this.c.redMul(num);\n};\n\n// Just for compatibility with Short curve\nEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n  return this.point(x, y, z, t);\n};\n\nEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var x2 = x.redSqr();\n  var rhs = this.c2.redSub(this.a.redMul(x2));\n  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n\n  var y2 = rhs.redMul(lhs.redInvm());\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n  y = new BN(y, 16);\n  if (!y.red)\n    y = y.toRed(this.red);\n\n  // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)\n  var y2 = y.redSqr();\n  var lhs = y2.redSub(this.c2);\n  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);\n  var x2 = lhs.redMul(rhs.redInvm());\n\n  if (x2.cmp(this.zero) === 0) {\n    if (odd)\n      throw new Error('invalid point');\n    else\n      return this.point(this.zero, y);\n  }\n\n  var x = x2.redSqrt();\n  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  if (x.fromRed().isOdd() !== odd)\n    x = x.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.validate = function validate(point) {\n  if (point.isInfinity())\n    return true;\n\n  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n  point.normalize();\n\n  var x2 = point.x.redSqr();\n  var y2 = point.y.redSqr();\n  var lhs = x2.redMul(this.a).redAdd(y2);\n  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n\n  return lhs.cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, y, z, t) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = z ? new BN(z, 16) : this.curve.one;\n    this.t = t && new BN(t, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n    if (this.t && !this.t.red)\n      this.t = this.t.toRed(this.curve.red);\n    this.zOne = this.z === this.curve.one;\n\n    // Use extended coordinates\n    if (this.curve.extended && !this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne)\n        this.t = this.t.redMul(this.z.redInvm());\n    }\n  }\n}\ninherits(Point, Base.BasePoint);\n\nEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nEdwardsCurve.prototype.point = function point(x, y, z, t) {\n  return new Point(this, x, y, z, t);\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1], obj[2]);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.x.cmpn(0) === 0 &&\n    (this.y.cmp(this.z) === 0 ||\n    (this.zOne && this.y.cmp(this.curve.c) === 0));\n};\n\nPoint.prototype._extDbl = function _extDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #doubling-dbl-2008-hwcd\n  // 4M + 4S\n\n  // A = X1^2\n  var a = this.x.redSqr();\n  // B = Y1^2\n  var b = this.y.redSqr();\n  // C = 2 * Z1^2\n  var c = this.z.redSqr();\n  c = c.redIAdd(c);\n  // D = a * A\n  var d = this.curve._mulA(a);\n  // E = (X1 + Y1)^2 - A - B\n  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n  // G = D + B\n  var g = d.redAdd(b);\n  // F = G - C\n  var f = g.redSub(c);\n  // H = D - B\n  var h = d.redSub(b);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projDbl = function _projDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #doubling-dbl-2008-bbjlp\n  //     #doubling-dbl-2007-bl\n  // and others\n  // Generally 3M + 4S or 2M + 4S\n\n  // B = (X1 + Y1)^2\n  var b = this.x.redAdd(this.y).redSqr();\n  // C = X1^2\n  var c = this.x.redSqr();\n  // D = Y1^2\n  var d = this.y.redSqr();\n\n  var nx;\n  var ny;\n  var nz;\n  var e;\n  var h;\n  var j;\n  if (this.curve.twisted) {\n    // E = a * C\n    e = this.curve._mulA(c);\n    // F = E + D\n    var f = e.redAdd(d);\n    if (this.zOne) {\n      // X3 = (B - C - D) * (F - 2)\n      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F^2 - 2 * F\n      nz = f.redSqr().redSub(f).redSub(f);\n    } else {\n      // H = Z1^2\n      h = this.z.redSqr();\n      // J = F - 2 * H\n      j = f.redSub(h).redISub(h);\n      // X3 = (B-C-D)*J\n      nx = b.redSub(c).redISub(d).redMul(j);\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F * J\n      nz = f.redMul(j);\n    }\n  } else {\n    // E = C + D\n    e = c.redAdd(d);\n    // H = (c * Z1)^2\n    h = this.curve._mulC(this.z).redSqr();\n    // J = E - 2 * H\n    j = e.redSub(h).redSub(h);\n    // X3 = c * (B - E) * J\n    nx = this.curve._mulC(b.redISub(e)).redMul(j);\n    // Y3 = c * E * (C - D)\n    ny = this.curve._mulC(e).redMul(c.redISub(d));\n    // Z3 = E * J\n    nz = e.redMul(j);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  // Double in extended coordinates\n  if (this.curve.extended)\n    return this._extDbl();\n  else\n    return this._projDbl();\n};\n\nPoint.prototype._extAdd = function _extAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #addition-add-2008-hwcd-3\n  // 8M\n\n  // A = (Y1 - X1) * (Y2 - X2)\n  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n  // B = (Y1 + X1) * (Y2 + X2)\n  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n  // C = T1 * k * T2\n  var c = this.t.redMul(this.curve.dd).redMul(p.t);\n  // D = Z1 * 2 * Z2\n  var d = this.z.redMul(p.z.redAdd(p.z));\n  // E = B - A\n  var e = b.redSub(a);\n  // F = D - C\n  var f = d.redSub(c);\n  // G = D + C\n  var g = d.redAdd(c);\n  // H = B + A\n  var h = b.redAdd(a);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projAdd = function _projAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #addition-add-2008-bbjlp\n  //     #addition-add-2007-bl\n  // 10M + 1S\n\n  // A = Z1 * Z2\n  var a = this.z.redMul(p.z);\n  // B = A^2\n  var b = a.redSqr();\n  // C = X1 * X2\n  var c = this.x.redMul(p.x);\n  // D = Y1 * Y2\n  var d = this.y.redMul(p.y);\n  // E = d * C * D\n  var e = this.curve.d.redMul(c).redMul(d);\n  // F = B - E\n  var f = b.redSub(e);\n  // G = B + E\n  var g = b.redAdd(e);\n  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n  var nx = a.redMul(f).redMul(tmp);\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // Y3 = A * G * (D - a * C)\n    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n    // Z3 = F * G\n    nz = f.redMul(g);\n  } else {\n    // Y3 = A * G * (D - C)\n    ny = a.redMul(g).redMul(d.redSub(c));\n    // Z3 = c * F * G\n    nz = this.curve._mulC(f).redMul(g);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.add = function add(p) {\n  if (this.isInfinity())\n    return p;\n  if (p.isInfinity())\n    return this;\n\n  if (this.curve.extended)\n    return this._extAdd(p);\n  else\n    return this._projAdd(p);\n};\n\nPoint.prototype.mul = function mul(k) {\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);\n};\n\nPoint.prototype.normalize = function normalize() {\n  if (this.zOne)\n    return this;\n\n  // Normalize coordinates\n  var zi = this.z.redInvm();\n  this.x = this.x.redMul(zi);\n  this.y = this.y.redMul(zi);\n  if (this.t)\n    this.t = this.t.redMul(zi);\n  this.z = this.curve.one;\n  this.zOne = true;\n  return this;\n};\n\nPoint.prototype.neg = function neg() {\n  return this.curve.point(this.x.redNeg(),\n    this.y,\n    this.z,\n    this.t && this.t.redNeg());\n};\n\nPoint.prototype.getX = function getX() {\n  this.normalize();\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  this.normalize();\n  return this.y.fromRed();\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this === other ||\n         this.getX().cmp(other.getX()) === 0 &&\n         this.getY().cmp(other.getY()) === 0;\n};\n\nPoint.prototype.eqXToP = function eqXToP(x) {\n  var rx = x.toRed(this.curve.red).redMul(this.z);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(this.z);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\n// Compatibility with BaseCurve\nPoint.prototype.toP = Point.prototype.normalize;\nPoint.prototype.mixedAdd = Point.prototype.add;\n","'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","module.exports = {\n  doubles: {\n    step: 4,\n    points: [\n      [\n        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',\n        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821',\n      ],\n      [\n        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',\n        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf',\n      ],\n      [\n        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',\n        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695',\n      ],\n      [\n        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',\n        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9',\n      ],\n      [\n        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',\n        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36',\n      ],\n      [\n        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',\n        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f',\n      ],\n      [\n        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',\n        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999',\n      ],\n      [\n        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',\n        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09',\n      ],\n      [\n        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',\n        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d',\n      ],\n      [\n        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',\n        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088',\n      ],\n      [\n        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',\n        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d',\n      ],\n      [\n        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',\n        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8',\n      ],\n      [\n        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',\n        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a',\n      ],\n      [\n        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',\n        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453',\n      ],\n      [\n        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',\n        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160',\n      ],\n      [\n        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',\n        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0',\n      ],\n      [\n        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',\n        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6',\n      ],\n      [\n        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',\n        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589',\n      ],\n      [\n        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',\n        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17',\n      ],\n      [\n        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',\n        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda',\n      ],\n      [\n        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',\n        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd',\n      ],\n      [\n        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',\n        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2',\n      ],\n      [\n        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',\n        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6',\n      ],\n      [\n        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',\n        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f',\n      ],\n      [\n        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',\n        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01',\n      ],\n      [\n        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',\n        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3',\n      ],\n      [\n        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',\n        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f',\n      ],\n      [\n        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',\n        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7',\n      ],\n      [\n        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',\n        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78',\n      ],\n      [\n        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',\n        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1',\n      ],\n      [\n        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',\n        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150',\n      ],\n      [\n        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',\n        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82',\n      ],\n      [\n        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',\n        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc',\n      ],\n      [\n        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',\n        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b',\n      ],\n      [\n        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',\n        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51',\n      ],\n      [\n        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',\n        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45',\n      ],\n      [\n        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',\n        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120',\n      ],\n      [\n        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',\n        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84',\n      ],\n      [\n        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',\n        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d',\n      ],\n      [\n        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',\n        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d',\n      ],\n      [\n        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',\n        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8',\n      ],\n      [\n        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',\n        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8',\n      ],\n      [\n        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',\n        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac',\n      ],\n      [\n        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',\n        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f',\n      ],\n      [\n        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',\n        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962',\n      ],\n      [\n        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',\n        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907',\n      ],\n      [\n        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',\n        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec',\n      ],\n      [\n        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',\n        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d',\n      ],\n      [\n        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',\n        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414',\n      ],\n      [\n        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',\n        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd',\n      ],\n      [\n        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',\n        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0',\n      ],\n      [\n        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',\n        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811',\n      ],\n      [\n        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',\n        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1',\n      ],\n      [\n        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',\n        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c',\n      ],\n      [\n        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',\n        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73',\n      ],\n      [\n        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',\n        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd',\n      ],\n      [\n        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',\n        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405',\n      ],\n      [\n        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',\n        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589',\n      ],\n      [\n        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',\n        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e',\n      ],\n      [\n        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',\n        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27',\n      ],\n      [\n        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',\n        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1',\n      ],\n      [\n        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',\n        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482',\n      ],\n      [\n        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',\n        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945',\n      ],\n      [\n        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',\n        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573',\n      ],\n      [\n        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',\n        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82',\n      ],\n    ],\n  },\n  naf: {\n    wnd: 7,\n    points: [\n      [\n        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',\n        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672',\n      ],\n      [\n        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',\n        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6',\n      ],\n      [\n        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',\n        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da',\n      ],\n      [\n        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',\n        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37',\n      ],\n      [\n        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',\n        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b',\n      ],\n      [\n        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',\n        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81',\n      ],\n      [\n        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',\n        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58',\n      ],\n      [\n        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',\n        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77',\n      ],\n      [\n        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',\n        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a',\n      ],\n      [\n        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',\n        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c',\n      ],\n      [\n        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',\n        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67',\n      ],\n      [\n        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',\n        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402',\n      ],\n      [\n        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',\n        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55',\n      ],\n      [\n        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',\n        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482',\n      ],\n      [\n        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',\n        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82',\n      ],\n      [\n        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',\n        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396',\n      ],\n      [\n        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',\n        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49',\n      ],\n      [\n        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',\n        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf',\n      ],\n      [\n        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',\n        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a',\n      ],\n      [\n        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',\n        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7',\n      ],\n      [\n        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',\n        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933',\n      ],\n      [\n        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',\n        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a',\n      ],\n      [\n        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',\n        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6',\n      ],\n      [\n        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',\n        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37',\n      ],\n      [\n        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',\n        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e',\n      ],\n      [\n        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',\n        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6',\n      ],\n      [\n        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',\n        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476',\n      ],\n      [\n        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',\n        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40',\n      ],\n      [\n        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',\n        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61',\n      ],\n      [\n        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',\n        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683',\n      ],\n      [\n        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',\n        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5',\n      ],\n      [\n        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',\n        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b',\n      ],\n      [\n        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',\n        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417',\n      ],\n      [\n        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',\n        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868',\n      ],\n      [\n        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',\n        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a',\n      ],\n      [\n        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',\n        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6',\n      ],\n      [\n        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',\n        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996',\n      ],\n      [\n        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',\n        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e',\n      ],\n      [\n        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',\n        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d',\n      ],\n      [\n        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',\n        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2',\n      ],\n      [\n        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',\n        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e',\n      ],\n      [\n        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',\n        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437',\n      ],\n      [\n        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',\n        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311',\n      ],\n      [\n        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',\n        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4',\n      ],\n      [\n        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',\n        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575',\n      ],\n      [\n        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',\n        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d',\n      ],\n      [\n        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',\n        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d',\n      ],\n      [\n        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',\n        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629',\n      ],\n      [\n        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',\n        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06',\n      ],\n      [\n        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',\n        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374',\n      ],\n      [\n        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',\n        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee',\n      ],\n      [\n        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',\n        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1',\n      ],\n      [\n        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',\n        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b',\n      ],\n      [\n        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',\n        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661',\n      ],\n      [\n        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',\n        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6',\n      ],\n      [\n        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',\n        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e',\n      ],\n      [\n        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',\n        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d',\n      ],\n      [\n        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',\n        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc',\n      ],\n      [\n        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',\n        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4',\n      ],\n      [\n        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',\n        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c',\n      ],\n      [\n        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',\n        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b',\n      ],\n      [\n        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',\n        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913',\n      ],\n      [\n        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',\n        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154',\n      ],\n      [\n        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',\n        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865',\n      ],\n      [\n        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',\n        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc',\n      ],\n      [\n        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',\n        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224',\n      ],\n      [\n        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',\n        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e',\n      ],\n      [\n        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',\n        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6',\n      ],\n      [\n        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',\n        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511',\n      ],\n      [\n        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',\n        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b',\n      ],\n      [\n        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',\n        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2',\n      ],\n      [\n        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',\n        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c',\n      ],\n      [\n        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',\n        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3',\n      ],\n      [\n        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',\n        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d',\n      ],\n      [\n        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',\n        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700',\n      ],\n      [\n        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',\n        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4',\n      ],\n      [\n        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',\n        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196',\n      ],\n      [\n        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',\n        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4',\n      ],\n      [\n        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',\n        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257',\n      ],\n      [\n        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',\n        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13',\n      ],\n      [\n        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',\n        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096',\n      ],\n      [\n        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',\n        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38',\n      ],\n      [\n        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',\n        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f',\n      ],\n      [\n        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',\n        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448',\n      ],\n      [\n        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',\n        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a',\n      ],\n      [\n        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',\n        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4',\n      ],\n      [\n        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',\n        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437',\n      ],\n      [\n        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',\n        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7',\n      ],\n      [\n        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',\n        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d',\n      ],\n      [\n        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',\n        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a',\n      ],\n      [\n        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',\n        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54',\n      ],\n      [\n        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',\n        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77',\n      ],\n      [\n        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',\n        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517',\n      ],\n      [\n        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',\n        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10',\n      ],\n      [\n        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',\n        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125',\n      ],\n      [\n        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',\n        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e',\n      ],\n      [\n        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',\n        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1',\n      ],\n      [\n        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',\n        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2',\n      ],\n      [\n        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',\n        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423',\n      ],\n      [\n        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',\n        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8',\n      ],\n      [\n        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',\n        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758',\n      ],\n      [\n        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',\n        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375',\n      ],\n      [\n        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',\n        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d',\n      ],\n      [\n        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',\n        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec',\n      ],\n      [\n        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',\n        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0',\n      ],\n      [\n        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',\n        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c',\n      ],\n      [\n        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',\n        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4',\n      ],\n      [\n        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',\n        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f',\n      ],\n      [\n        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',\n        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649',\n      ],\n      [\n        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',\n        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826',\n      ],\n      [\n        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',\n        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5',\n      ],\n      [\n        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',\n        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87',\n      ],\n      [\n        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',\n        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b',\n      ],\n      [\n        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',\n        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc',\n      ],\n      [\n        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',\n        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c',\n      ],\n      [\n        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',\n        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f',\n      ],\n      [\n        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',\n        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a',\n      ],\n      [\n        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',\n        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46',\n      ],\n      [\n        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',\n        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f',\n      ],\n      [\n        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',\n        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03',\n      ],\n      [\n        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',\n        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08',\n      ],\n      [\n        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',\n        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8',\n      ],\n      [\n        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',\n        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373',\n      ],\n      [\n        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',\n        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3',\n      ],\n      [\n        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',\n        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8',\n      ],\n      [\n        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',\n        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1',\n      ],\n      [\n        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',\n        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9',\n      ],\n    ],\n  },\n};\n","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n","'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n","'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(Object.prototype.hasOwnProperty.call(curves, options),\n      'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar cachedProperty = utils.cachedProperty;\n\n/**\n* @param {EDDSA} eddsa - instance\n* @param {Object} params - public/private key parameters\n*\n* @param {Array<Byte>} [params.secret] - secret seed bytes\n* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n*\n*/\nfunction KeyPair(eddsa, params) {\n  this.eddsa = eddsa;\n  this._secret = parseBytes(params.secret);\n  if (eddsa.isPoint(params.pub))\n    this._pub = params.pub;\n  else\n    this._pubBytes = parseBytes(params.pub);\n}\n\nKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n  if (pub instanceof KeyPair)\n    return pub;\n  return new KeyPair(eddsa, { pub: pub });\n};\n\nKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n  if (secret instanceof KeyPair)\n    return secret;\n  return new KeyPair(eddsa, { secret: secret });\n};\n\nKeyPair.prototype.secret = function secret() {\n  return this._secret;\n};\n\ncachedProperty(KeyPair, 'pubBytes', function pubBytes() {\n  return this.eddsa.encodePoint(this.pub());\n});\n\ncachedProperty(KeyPair, 'pub', function pub() {\n  if (this._pubBytes)\n    return this.eddsa.decodePoint(this._pubBytes);\n  return this.eddsa.g.mul(this.priv());\n});\n\ncachedProperty(KeyPair, 'privBytes', function privBytes() {\n  var eddsa = this.eddsa;\n  var hash = this.hash();\n  var lastIx = eddsa.encodingLength - 1;\n\n  var a = hash.slice(0, eddsa.encodingLength);\n  a[0] &= 248;\n  a[lastIx] &= 127;\n  a[lastIx] |= 64;\n\n  return a;\n});\n\ncachedProperty(KeyPair, 'priv', function priv() {\n  return this.eddsa.decodeInt(this.privBytes());\n});\n\ncachedProperty(KeyPair, 'hash', function hash() {\n  return this.eddsa.hash().update(this.secret()).digest();\n});\n\ncachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {\n  return this.hash().slice(this.eddsa.encodingLength);\n});\n\nKeyPair.prototype.sign = function sign(message) {\n  assert(this._secret, 'KeyPair can only verify');\n  return this.eddsa.sign(message, this);\n};\n\nKeyPair.prototype.verify = function verify(message, sig) {\n  return this.eddsa.verify(message, sig, this);\n};\n\nKeyPair.prototype.getSecret = function getSecret(enc) {\n  assert(this._secret, 'KeyPair is public only');\n  return utils.encode(this.secret(), enc);\n};\n\nKeyPair.prototype.getPublic = function getPublic(enc) {\n  return utils.encode(this.pubBytes(), enc);\n};\n\nmodule.exports = KeyPair;\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar cachedProperty = utils.cachedProperty;\nvar parseBytes = utils.parseBytes;\n\n/**\n* @param {EDDSA} eddsa - eddsa instance\n* @param {Array<Bytes>|Object} sig -\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n*/\nfunction Signature(eddsa, sig) {\n  this.eddsa = eddsa;\n\n  if (typeof sig !== 'object')\n    sig = parseBytes(sig);\n\n  if (Array.isArray(sig)) {\n    sig = {\n      R: sig.slice(0, eddsa.encodingLength),\n      S: sig.slice(eddsa.encodingLength),\n    };\n  }\n\n  assert(sig.R && sig.S, 'Signature without R or S');\n\n  if (eddsa.isPoint(sig.R))\n    this._R = sig.R;\n  if (sig.S instanceof BN)\n    this._S = sig.S;\n\n  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n}\n\ncachedProperty(Signature, 'S', function S() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\n\ncachedProperty(Signature, 'R', function R() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\n\ncachedProperty(Signature, 'Rencoded', function Rencoded() {\n  return this.eddsa.encodePoint(this.R());\n});\n\ncachedProperty(Signature, 'Sencoded', function Sencoded() {\n  return this.eddsa.encodeInt(this.S());\n});\n\nSignature.prototype.toBytes = function toBytes() {\n  return this.Rencoded().concat(this.Sencoded());\n};\n\nSignature.prototype.toHex = function toHex() {\n  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n};\n\nmodule.exports = Signature;\n","'use strict';\n\nvar hash = require('hash.js');\nvar curves = require('../curves');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EDDSA(curve) {\n  assert(curve === 'ed25519', 'only tested with ed25519 so far');\n\n  if (!(this instanceof EDDSA))\n    return new EDDSA(curve);\n\n  curve = curves[curve].curve;\n  this.curve = curve;\n  this.g = curve.g;\n  this.g.precompute(curve.n.bitLength() + 1);\n\n  this.pointClass = curve.point().constructor;\n  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);\n  this.hash = hash.sha512;\n}\n\nmodule.exports = EDDSA;\n\n/**\n* @param {Array|String} message - message bytes\n* @param {Array|String|KeyPair} secret - secret bytes or a keypair\n* @returns {Signature} - signature\n*/\nEDDSA.prototype.sign = function sign(message, secret) {\n  message = parseBytes(message);\n  var key = this.keyFromSecret(secret);\n  var r = this.hashInt(key.messagePrefix(), message);\n  var R = this.g.mul(r);\n  var Rencoded = this.encodePoint(R);\n  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)\n    .mul(key.priv());\n  var S = r.add(s_).umod(this.curve.n);\n  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });\n};\n\n/**\n* @param {Array} message - message bytes\n* @param {Array|String|Signature} sig - sig bytes\n* @param {Array|String|Point|KeyPair} pub - public key\n* @returns {Boolean} - true if public key matches sig of message\n*/\nEDDSA.prototype.verify = function verify(message, sig, pub) {\n  message = parseBytes(message);\n  sig = this.makeSignature(sig);\n  var key = this.keyFromPublic(pub);\n  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);\n  var SG = this.g.mul(sig.S());\n  var RplusAh = sig.R().add(key.pub().mul(h));\n  return RplusAh.eq(SG);\n};\n\nEDDSA.prototype.hashInt = function hashInt() {\n  var hash = this.hash();\n  for (var i = 0; i < arguments.length; i++)\n    hash.update(arguments[i]);\n  return utils.intFromLE(hash.digest()).umod(this.curve.n);\n};\n\nEDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {\n  return KeyPair.fromPublic(this, pub);\n};\n\nEDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {\n  return KeyPair.fromSecret(this, secret);\n};\n\nEDDSA.prototype.makeSignature = function makeSignature(sig) {\n  if (sig instanceof Signature)\n    return sig;\n  return new Signature(this, sig);\n};\n\n/**\n* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2\n*\n* EDDSA defines methods for encoding and decoding points and integers. These are\n* helper convenience methods, that pass along to utility functions implied\n* parameters.\n*\n*/\nEDDSA.prototype.encodePoint = function encodePoint(point) {\n  var enc = point.getY().toArray('le', this.encodingLength);\n  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;\n  return enc;\n};\n\nEDDSA.prototype.decodePoint = function decodePoint(bytes) {\n  bytes = utils.parseBytes(bytes);\n\n  var lastIx = bytes.length - 1;\n  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);\n  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;\n\n  var y = utils.intFromLE(normed);\n  return this.curve.pointFromY(y, xIsOdd);\n};\n\nEDDSA.prototype.encodeInt = function encodeInt(num) {\n  return num.toArray('le', this.encodingLength);\n};\n\nEDDSA.prototype.decodeInt = function decodeInt(bytes) {\n  return utils.intFromLE(bytes);\n};\n\nEDDSA.prototype.isPoint = function isPoint(val) {\n  return val instanceof this.pointClass;\n};\n","'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n","'use strict'\n\nvar BN = require('./bn')\n\nvar EC = require('elliptic').ec\nvar ec = new EC('secp256k1')\nvar ecPoint = ec.curve.point.bind(ec.curve)\nvar ecPointFromX = ec.curve.pointFromX.bind(ec.curve)\n\n/**\n * Instantiate a valid secp256k1 Point from the X and Y coordinates. This class\n * is just an extension of the secp256k1 code from the library \"elliptic\" by\n * Fedor Indutny. It includes a few extra features that are useful in Bitcoin.\n *\n * @param {BN|String} x - The X coordinate\n * @param {BN|String} y - The Y coordinate\n * @link https://github.com/indutny/elliptic\n * @augments elliptic.curve.point\n * @throws {Error} A validation error if exists\n * @returns {Point} An instance of Point\n * @constructor\n */\nvar Point = function Point (x, y, isRed) {\n  try {\n    var point = ecPoint(x, y, isRed)\n  } catch (e) {\n    throw new Error('Invalid Point')\n  }\n  point.validate()\n  return point\n}\n\nPoint.prototype = Object.getPrototypeOf(ec.curve.point())\n\n/**\n *\n * Instantiate a valid secp256k1 Point from only the X coordinate. This is\n * useful to rederive a full point from the compressed form of a point.\n *\n * @param {boolean} odd - If the Y coordinate is odd\n * @param {BN|String} x - The X coordinate\n * @throws {Error} A validation error if exists\n * @returns {Point} An instance of Point\n */\nPoint.fromX = function fromX (odd, x) {\n  try {\n    var point = ecPointFromX(x, odd)\n  } catch (e) {\n    throw new Error('Invalid X')\n  }\n  point.validate()\n  return point\n}\n\n/**\n *\n * Will return a secp256k1 ECDSA base point.\n *\n * @link https://en.bitcoin.it/wiki/Secp256k1\n * @returns {Point} An instance of the base point.\n */\nPoint.getG = function getG () {\n  return ec.curve.g\n}\n\n/**\n *\n * Will return the max of range of valid private keys as governed by the\n * secp256k1 ECDSA standard.\n *\n * @link https://en.bitcoin.it/wiki/Private_key#Range_of_valid_ECDSA_private_keys\n * @returns {BN} A BN instance of the number of points on the curve\n */\nPoint.getN = function getN () {\n  return new BN(ec.curve.n.toArray())\n}\n\nif (!Point.prototype._getX) { Point.prototype._getX = Point.prototype.getX }\n\n/**\n * Will return the X coordinate of the Point.\n *\n * @returns {BN} A BN instance of the X coordinate\n */\nPoint.prototype.getX = function getX () {\n  return new BN(this._getX().toArray())\n}\n\nif (!Point.prototype._getY) { Point.prototype._getY = Point.prototype.getY }\n\n/**\n * Will return the Y coordinate of the Point.\n *\n * @returns {BN} A BN instance of the Y coordinate\n */\nPoint.prototype.getY = function getY () {\n  return new BN(this._getY().toArray())\n}\n\n/**\n * Will determine if the point is valid.\n *\n * @link https://www.iacr.org/archive/pkc2003/25670211/25670211.pdf\n * @throws {Error} A validation error if exists\n * @returns {Point} An instance of the same Point\n */\nPoint.prototype.validate = function validate () {\n  if (this.isInfinity()) {\n    throw new Error('Point cannot be equal to Infinity')\n  }\n\n  var p2\n  try {\n    p2 = ecPointFromX(this.getX(), this.getY().isOdd())\n  } catch (e) {\n    throw new Error('Point does not lie on the curve')\n  }\n\n  if (p2.y.cmp(this.y) !== 0) {\n    throw new Error('Invalid y value for curve.')\n  }\n\n  // todo: needs test case\n  if (!(this.mul(Point.getN()).isInfinity())) {\n    throw new Error('Point times N must be infinity')\n  }\n\n  return this\n}\n\n/**\n * A \"compressed\" format point is the X part of the (X, Y) point plus an extra\n * bit (which takes an entire byte) to indicate whether the Y value is odd or\n * not. Storing points this way takes a bit less space, but requires a bit more\n * computation to rederive the full point.\n *\n * @param {Point} point An instance of Point.\n * @returns {Buffer} A compressed point in the form of a buffer.\n */\nPoint.pointToCompressed = function pointToCompressed (point) {\n  var xbuf = point.getX().toBuffer({ size: 32 })\n  var ybuf = point.getY().toBuffer({ size: 32 })\n\n  var prefix\n  var odd = ybuf[ybuf.length - 1] % 2\n  if (odd) {\n    prefix = Buffer.from([0x03])\n  } else {\n    prefix = Buffer.from([0x02])\n  }\n  return Buffer.concat([prefix, xbuf])\n}\n\n/**\n * Converts a compressed buffer into a point.\n *\n * @param {Buffer} buf A compressed point.\n * @returns {Point} A Point.\n */\nPoint.pointFromCompressed = function (buf) {\n  if (buf.length !== 33) {\n    throw new Error('invalid buffer length')\n  }\n  let prefix = buf[0]\n  let odd\n  if (prefix === 0x03) {\n    odd = true\n  } else if (prefix === 0x02) {\n    odd = false\n  } else {\n    throw new Error('invalid value of compressed prefix')\n  }\n\n  let xbuf = buf.slice(1, 33)\n  let x = BN.fromBuffer(xbuf)\n  return Point.fromX(odd, x)\n}\n\n/**\n * Convert point to a compressed buffer.\n *\n * @returns {Buffer} A compressed point.\n */\nPoint.prototype.toBuffer = function () {\n  return Point.pointToCompressed(this)\n}\n\n/**\n * Convert point to a compressed hex string.\n *\n * @returns {string} A compressed point as a hex string.\n */\nPoint.prototype.toHex = function () {\n  return this.toBuffer().toString('hex')\n}\n\n/**\n * Converts a compressed buffer into a point.\n *\n * @param {Buffer} buf A compressed point.\n * @returns {Point} A Point.\n */\nPoint.fromBuffer = function (buf) {\n  return Point.pointFromCompressed(buf)\n}\n\n/**\n * Converts a compressed buffer into a point.\n *\n * @param {Buffer} hex A compressed point as a hex string.\n * @returns {Point} A Point.\n */\nPoint.fromHex = function (hex) {\n  return Point.fromBuffer(Buffer.from(hex, 'hex'))\n}\n\nmodule.exports = Point\n","'use strict'\n\nvar _ = require('../util/_')\nvar $ = require('./preconditions')\n\n/**\n * Determines whether a string contains only hexadecimal values\n *\n * @name JSUtil.isHexa\n * @param {string} value\n * @return {boolean} true if the string is the hexa representation of a number\n */\nvar isHexa = function isHexa (value) {\n  if (!_.isString(value)) {\n    return false\n  }\n  return /^[0-9a-fA-F]+$/.test(value)\n}\n\n/**\n * @namespace JSUtil\n */\nmodule.exports = {\n  /**\n   * Test if an argument is a valid JSON object. If it is, returns a truthy\n   * value (the json object decoded), so no double JSON.parse call is necessary\n   *\n   * @param {string} arg\n   * @return {Object|boolean} false if the argument is not a JSON string.\n   */\n  isValidJSON: function isValidJSON (arg) {\n    var parsed\n    if (!_.isString(arg)) {\n      return false\n    }\n    try {\n      parsed = JSON.parse(arg)\n    } catch (e) {\n      return false\n    }\n    if (typeof (parsed) === 'object') {\n      return true\n    }\n    return false\n  },\n  isHexa: isHexa,\n  isHexaString: isHexa,\n\n  /**\n   * Define immutable properties on a target object\n   *\n   * @param {Object} target - An object to be extended\n   * @param {Object} values - An object of properties\n   * @return {Object} The target object\n   */\n  defineImmutable: function defineImmutable (target, values) {\n    Object.keys(values).forEach(function (key) {\n      Object.defineProperty(target, key, {\n        configurable: false,\n        enumerable: true,\n        value: values[key]\n      })\n    })\n    return target\n  },\n  /**\n   * Checks that a value is a natural number, a positive integer or zero.\n   *\n   * @param {*} value\n   * @return {Boolean}\n   */\n  isNaturalNumber: function isNaturalNumber (value) {\n    return typeof value === 'number' &&\n      isFinite(value) &&\n      Math.floor(value) === value &&\n      value >= 0\n  },\n\n  /**\n   * Transform a 4-byte integer (unsigned value) into a Buffer of length 4 (Big Endian Byte Order)\n   *\n   * @param {number} integer\n   * @return {Buffer}\n   */\n  integerAsBuffer: function integerAsBuffer (integer) {\n    $.checkArgumentType(integer, 'number', 'integer')\n    const buf = Buffer.allocUnsafe(4)\n    buf.writeUInt32BE(integer, 0)\n    return buf\n  }\n}\n","'use strict'\n\nvar BN = require('./bn')\nvar _ = require('../util/_')\nvar $ = require('../util/preconditions')\nvar JSUtil = require('../util/js')\n\nvar Signature = function Signature (r, s) {\n  if (!(this instanceof Signature)) {\n    return new Signature(r, s)\n  }\n  if (r instanceof BN) {\n    this.set({\n      r: r,\n      s: s\n    })\n  } else if (r) {\n    var obj = r\n    this.set(obj)\n  }\n}\n\nSignature.prototype.set = function (obj) {\n  this.r = obj.r || this.r || undefined\n  this.s = obj.s || this.s || undefined\n\n  this.i = typeof obj.i !== 'undefined' ? obj.i : this.i // public key recovery parameter in range [0, 3]\n  this.compressed = typeof obj.compressed !== 'undefined'\n    ? obj.compressed : this.compressed // whether the recovered pubkey is compressed\n  this.nhashtype = obj.nhashtype || this.nhashtype || undefined\n  return this\n}\n\nSignature.fromCompact = function (buf) {\n  $.checkArgument(Buffer.isBuffer(buf), 'Argument is expected to be a Buffer')\n\n  var sig = new Signature()\n\n  var compressed = true\n  var i = buf.slice(0, 1)[0] - 27 - 4\n  if (i < 0) {\n    compressed = false\n    i = i + 4\n  }\n\n  var b2 = buf.slice(1, 33)\n  var b3 = buf.slice(33, 65)\n\n  $.checkArgument(i === 0 || i === 1 || i === 2 || i === 3, new Error('i must be 0, 1, 2, or 3'))\n  $.checkArgument(b2.length === 32, new Error('r must be 32 bytes'))\n  $.checkArgument(b3.length === 32, new Error('s must be 32 bytes'))\n\n  sig.compressed = compressed\n  sig.i = i\n  sig.r = BN.fromBuffer(b2)\n  sig.s = BN.fromBuffer(b3)\n\n  return sig\n}\n\nSignature.fromDER = Signature.fromBuffer = function (buf, strict) {\n  var obj = Signature.parseDER(buf, strict)\n  var sig = new Signature()\n\n  sig.r = obj.r\n  sig.s = obj.s\n\n  return sig\n}\n\n// The format used in a tx\nSignature.fromTxFormat = function (buf) {\n  var nhashtype = buf.readUInt8(buf.length - 1)\n  var derbuf = buf.slice(0, buf.length - 1)\n  var sig = Signature.fromDER(derbuf, false)\n  sig.nhashtype = nhashtype\n  return sig\n}\n\nSignature.fromString = function (str) {\n  var buf = Buffer.from(str, 'hex')\n  return Signature.fromDER(buf)\n}\n\n/**\n * In order to mimic the non-strict DER encoding of OpenSSL, set strict = false.\n */\nSignature.parseDER = function (buf, strict) {\n  $.checkArgument(Buffer.isBuffer(buf), new Error('DER formatted signature should be a buffer'))\n  if (_.isUndefined(strict)) {\n    strict = true\n  }\n\n  var header = buf[0]\n  $.checkArgument(header === 0x30, new Error('Header byte should be 0x30'))\n\n  var length = buf[1]\n  var buflength = buf.slice(2).length\n  $.checkArgument(!strict || length === buflength, new Error('Length byte should length of what follows'))\n\n  length = length < buflength ? length : buflength\n\n  var rheader = buf[2 + 0]\n  $.checkArgument(rheader === 0x02, new Error('Integer byte for r should be 0x02'))\n\n  var rlength = buf[2 + 1]\n  var rbuf = buf.slice(2 + 2, 2 + 2 + rlength)\n  var r = BN.fromBuffer(rbuf)\n  var rneg = buf[2 + 1 + 1] === 0x00\n  $.checkArgument(rlength === rbuf.length, new Error('Length of r incorrect'))\n\n  var sheader = buf[2 + 2 + rlength + 0]\n  $.checkArgument(sheader === 0x02, new Error('Integer byte for s should be 0x02'))\n\n  var slength = buf[2 + 2 + rlength + 1]\n  var sbuf = buf.slice(2 + 2 + rlength + 2, 2 + 2 + rlength + 2 + slength)\n  var s = BN.fromBuffer(sbuf)\n  var sneg = buf[2 + 2 + rlength + 2 + 2] === 0x00\n  $.checkArgument(slength === sbuf.length, new Error('Length of s incorrect'))\n\n  var sumlength = 2 + 2 + rlength + 2 + slength\n  $.checkArgument(length === sumlength - 2, new Error('Length of signature incorrect'))\n\n  var obj = {\n    header: header,\n    length: length,\n    rheader: rheader,\n    rlength: rlength,\n    rneg: rneg,\n    rbuf: rbuf,\n    r: r,\n    sheader: sheader,\n    slength: slength,\n    sneg: sneg,\n    sbuf: sbuf,\n    s: s\n  }\n\n  return obj\n}\n\nSignature.prototype.toCompact = function (i, compressed) {\n  i = typeof i === 'number' ? i : this.i\n  compressed = typeof compressed === 'boolean' ? compressed : this.compressed\n\n  if (!(i === 0 || i === 1 || i === 2 || i === 3)) {\n    throw new Error('i must be equal to 0, 1, 2, or 3')\n  }\n\n  var val = i + 27 + 4\n  if (compressed === false) {\n    val = val - 4\n  }\n  var b1 = Buffer.from([val])\n  var b2 = this.r.toBuffer({\n    size: 32\n  })\n  var b3 = this.s.toBuffer({\n    size: 32\n  })\n  return Buffer.concat([b1, b2, b3])\n}\n\nSignature.prototype.toBuffer = Signature.prototype.toDER = function () {\n  var rnbuf = this.r.toBuffer()\n  var snbuf = this.s.toBuffer()\n\n  var rneg = !!(rnbuf[0] & 0x80)\n  var sneg = !!(snbuf[0] & 0x80)\n\n  var rbuf = rneg ? Buffer.concat([Buffer.from([0x00]), rnbuf]) : rnbuf\n  var sbuf = sneg ? Buffer.concat([Buffer.from([0x00]), snbuf]) : snbuf\n\n  var rlength = rbuf.length\n  var slength = sbuf.length\n  var length = 2 + rlength + 2 + slength\n  var rheader = 0x02\n  var sheader = 0x02\n  var header = 0x30\n\n  var der = Buffer.concat([Buffer.from([header, length, rheader, rlength]), rbuf, Buffer.from([sheader, slength]), sbuf])\n  return der\n}\n\nSignature.prototype.toString = function () {\n  var buf = this.toDER()\n  return buf.toString('hex')\n}\n\n/**\n * This function is translated from bitcoind's IsDERSignature and is used in\n * the script interpreter.  This \"DER\" format actually includes an extra byte,\n * the nhashtype, at the end. It is really the tx format, not DER format.\n *\n * A canonical signature exists of: [30] [total len] [02] [len R] [R] [02] [len S] [S] [hashtype]\n * Where R and S are not negative (their first byte has its highest bit not set), and not\n * excessively padded (do not start with a 0 byte, unless an otherwise negative number follows,\n * in which case a single 0 byte is necessary and even required).\n *\n * See https://bitcointalk.org/index.php?topic=8392.msg127623#msg127623\n */\nSignature.isTxDER = function (buf) {\n  if (buf.length < 9) {\n    //  Non-canonical signature: too short\n    return false\n  }\n  if (buf.length > 73) {\n    // Non-canonical signature: too long\n    return false\n  }\n  if (buf[0] !== 0x30) {\n    //  Non-canonical signature: wrong type\n    return false\n  }\n  if (buf[1] !== buf.length - 3) {\n    //  Non-canonical signature: wrong length marker\n    return false\n  }\n  var nLenR = buf[3]\n  if (5 + nLenR >= buf.length) {\n    //  Non-canonical signature: S length misplaced\n    return false\n  }\n  var nLenS = buf[5 + nLenR]\n  if ((nLenR + nLenS + 7) !== buf.length) {\n    //  Non-canonical signature: R+S length mismatch\n    return false\n  }\n\n  var R = buf.slice(4)\n  if (buf[4 - 2] !== 0x02) {\n    //  Non-canonical signature: R value type mismatch\n    return false\n  }\n  if (nLenR === 0) {\n    //  Non-canonical signature: R length is zero\n    return false\n  }\n  if (R[0] & 0x80) {\n    //  Non-canonical signature: R value negative\n    return false\n  }\n  if (nLenR > 1 && (R[0] === 0x00) && !(R[1] & 0x80)) {\n    //  Non-canonical signature: R value excessively padded\n    return false\n  }\n\n  var S = buf.slice(6 + nLenR)\n  if (buf[6 + nLenR - 2] !== 0x02) {\n    //  Non-canonical signature: S value type mismatch\n    return false\n  }\n  if (nLenS === 0) {\n    //  Non-canonical signature: S length is zero\n    return false\n  }\n  if (S[0] & 0x80) {\n    //  Non-canonical signature: S value negative\n    return false\n  }\n  if (nLenS > 1 && (S[0] === 0x00) && !(S[1] & 0x80)) {\n    //  Non-canonical signature: S value excessively padded\n    return false\n  }\n  return true\n}\n\n/**\n * Compares to bitcoind's IsLowDERSignature\n * See also ECDSA signature algorithm which enforces this.\n * See also BIP 62, \"low S values in signatures\"\n */\nSignature.prototype.hasLowS = function () {\n  if (this.s.lt(new BN(1)) ||\n    this.s.gt(new BN('7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0', 'hex'))) {\n    return false\n  }\n  return true\n}\n\n/**\n * @returns true if the nhashtype is exactly equal to one of the standard options or combinations thereof.\n * Translated from bitcoind's IsDefinedHashtypeSignature\n */\nSignature.prototype.hasDefinedHashtype = function () {\n  if (!JSUtil.isNaturalNumber(this.nhashtype)) {\n    return false\n  }\n  // accept with or without Signature.SIGHASH_ANYONECANPAY by ignoring the bit\n  var temp = this.nhashtype & 0x1F\n  if (temp < Signature.SIGHASH_ALL || temp > Signature.SIGHASH_SINGLE) {\n    return false\n  }\n  return true\n}\n\nSignature.prototype.toTxFormat = function () {\n  var derbuf = this.toDER()\n  var buf = Buffer.alloc(1)\n  buf.writeUInt8(this.nhashtype, 0)\n  return Buffer.concat([derbuf, buf])\n}\n\nSignature.SIGHASH_ALL = 0x01\nSignature.SIGHASH_NONE = 0x02\nSignature.SIGHASH_SINGLE = 0x03\nSignature.SIGHASH_FORKID = 0x40\nSignature.SIGHASH_ANYONECANPAY = 0x80\n\nmodule.exports = Signature\n","'use strict'\n\nvar hash = require('hash.js')\nvar $ = require('../util/preconditions')\n\nvar Hash = module.exports\n\n/**\n * A SHA or SHA1 hash, which is always 160 bits or 20 bytes long.\n *\n * See:\n * https://en.wikipedia.org/wiki/SHA-1\n *\n * @param {Buffer} buf Data, a.k.a. pre-image, which can be any size.\n * @returns {Buffer} The hash in the form of a buffer.\n */\nHash.sha1 = function (buf) {\n  $.checkArgument(Buffer.isBuffer(buf))\n  return Buffer.from(hash.sha1().update(buf).digest('hex'), 'hex')\n}\n\nHash.sha1.blocksize = 512\n\n/**\n * A SHA256 hash, which is always 256 bits or 32 bytes long.\n *\n * See:\n * https://www.movable-type.co.uk/scripts/sha256.html\n *\n * @param {Buffer} buf Data, a.k.a. pre-image, which can be any size.\n * @returns {Buffer} The hash in the form of a buffer.\n */\nHash.sha256 = function (buf) {\n  $.checkArgument(Buffer.isBuffer(buf))\n  return Buffer.from(hash.sha256().update(buf).digest('hex'), 'hex')\n}\n\nHash.sha256.blocksize = 512\n\n/**\n * A double SHA256 hash, which is always 256 bits or 32 bytes bytes long. This\n * hash function is commonly used inside Bitcoin, particularly for the hash of a\n * block and the hash of a transaction.\n *\n * See:\n * https://www.movable-type.co.uk/scripts/sha256.html\n *\n * @param {Buffer} buf Data, a.k.a. pre-image, which can be any size.\n * @returns {Buffer} The hash in the form of a buffer.\n */\nHash.sha256sha256 = function (buf) {\n  $.checkArgument(Buffer.isBuffer(buf))\n  return Hash.sha256(Hash.sha256(buf))\n}\n\n/**\n * A RIPEMD160 hash, which is always 160 bits or 20 bytes long.\n *\n * See:\n * https://en.wikipedia.org/wiki/RIPEMD\n *\n * @param {Buffer} buf Data, a.k.a. pre-image, which can be any size.\n * @returns {Buffer} The hash in the form of a buffer.\n */\nHash.ripemd160 = function (buf) {\n  $.checkArgument(Buffer.isBuffer(buf))\n  return Buffer.from(hash.ripemd160().update(buf).digest('hex'), 'hex')\n}\n/**\n * A RIPEMD160 hash of a SHA256 hash, which is always 160 bits or 20 bytes long.\n * This value is commonly used inside Bitcoin, particularly for Bitcoin\n * addresses.\n *\n * See:\n * https://en.wikipedia.org/wiki/RIPEMD\n *\n * @param {Buffer} buf Data, a.k.a. pre-image, which can be any size.\n * @returns {Buffer} The hash in the form of a buffer.\n */\nHash.sha256ripemd160 = function (buf) {\n  $.checkArgument(Buffer.isBuffer(buf))\n  return Hash.ripemd160(Hash.sha256(buf))\n}\n\n/**\n * A SHA512 hash, which is always 512 bits or 64 bytes long.\n *\n * See:\n * https://en.wikipedia.org/wiki/SHA-2\n *\n * @param {Buffer} buf Data, a.k.a. pre-image, which can be any size.\n * @returns {Buffer} The hash in the form of a buffer.\n */\nHash.sha512 = function (buf) {\n  $.checkArgument(Buffer.isBuffer(buf))\n  return Buffer.from(hash.sha512().update(buf).digest('hex'), 'hex')\n}\n\nHash.sha512.blocksize = 1024\n\n/**\n * A way to do HMAC using any underlying hash function. If you ever find that\n * you want to hash two pieces of data together, you should use HMAC instead of\n * just using a hash function. Rather than doing hash(data1 + data2) you should\n * do HMAC(data1, data2). Actually, rather than use HMAC directly, we recommend\n * you use either sha256hmac or sha515hmac provided below.\n *\n * See:\n * https://en.wikipedia.org/wiki/Length_extension_attack\n * https://blog.skullsecurity.org/2012/everything-you-need-to-know-about-hash-length-extension-attacks\n *\n * @param {function} hashf Which hash function to use.\n * @param {Buffer} data Data, which can be any size.\n * @param {Buffer} key Key, which can be any size.\n * @returns {Buffer} The HMAC in the form of a buffer.\n */\nHash.hmac = function (hashf, data, key) {\n  // http://en.wikipedia.org/wiki/Hash-based_message_authentication_code\n  // http://tools.ietf.org/html/rfc4868#section-2\n  $.checkArgument(Buffer.isBuffer(data))\n  $.checkArgument(Buffer.isBuffer(key))\n  $.checkArgument(hashf.blocksize)\n\n  var blocksize = hashf.blocksize / 8\n\n  if (key.length > blocksize) {\n    key = hashf(key)\n  } else if (key < blocksize) {\n    var fill = Buffer.alloc(blocksize)\n    fill.fill(0)\n    key.copy(fill)\n    key = fill\n  }\n\n  var oKey = Buffer.alloc(blocksize)\n  oKey.fill(0x5c)\n\n  var iKey = Buffer.alloc(blocksize)\n  iKey.fill(0x36)\n\n  var oKeyPad = Buffer.alloc(blocksize)\n  var iKeyPad = Buffer.alloc(blocksize)\n  for (var i = 0; i < blocksize; i++) {\n    oKeyPad[i] = oKey[i] ^ key[i]\n    iKeyPad[i] = iKey[i] ^ key[i]\n  }\n\n  return hashf(Buffer.concat([oKeyPad, hashf(Buffer.concat([iKeyPad, data]))]))\n}\n\n/**\n * A SHA256 HMAC.\n *\n * @param {Buffer} data Data, which can be any size.\n * @param {Buffer} key Key, which can be any size.\n * @returns {Buffer} The HMAC in the form of a buffer.\n */\nHash.sha256hmac = function (data, key) {\n  return Hash.hmac(Hash.sha256, data, key)\n}\n\n/**\n * A SHA512 HMAC.\n *\n * @param {Buffer} data Data, which can be any size.\n * @param {Buffer} key Key, which can be any size.\n * @returns {Buffer} The HMAC in the form of a buffer.\n */\nHash.sha512hmac = function (data, key) {\n  return Hash.hmac(Hash.sha512, data, key)\n}\n","'use strict'\n\nvar crypto = require('crypto')\nvar $ = require('../util/preconditions')\n\nvar Hash = module.exports\n\n/**\n * A SHA or SHA1 hash, which is always 160 bits or 20 bytes long.\n *\n * See:\n * https://en.wikipedia.org/wiki/SHA-1\n *\n * @param {Buffer} buf Data, a.k.a. pre-image, which can be any size.\n * @returns {Buffer} The hash in the form of a buffer.\n */\nHash.sha1 = function (buf) {\n  $.checkArgument(Buffer.isBuffer(buf))\n  return crypto.createHash('sha1').update(buf).digest()\n}\n\nHash.sha1.blocksize = 512\n\n/**\n * A SHA256 hash, which is always 256 bits or 32 bytes long.\n *\n * See:\n * https://www.movable-type.co.uk/scripts/sha256.html\n *\n * @param {Buffer} buf Data, a.k.a. pre-image, which can be any size.\n * @returns {Buffer} The hash in the form of a buffer.\n */\nHash.sha256 = function (buf) {\n  $.checkArgument(Buffer.isBuffer(buf))\n  return crypto.createHash('sha256').update(buf).digest()\n}\n\nHash.sha256.blocksize = 512\n\n/**\n * A double SHA256 hash, which is always 256 bits or 32 bytes bytes long. This\n * hash function is commonly used inside Bitcoin, particularly for the hash of a\n * block and the hash of a transaction.\n *\n * See:\n * https://www.movable-type.co.uk/scripts/sha256.html\n *\n * @param {Buffer} buf Data, a.k.a. pre-image, which can be any size.\n * @returns {Buffer} The hash in the form of a buffer.\n */\nHash.sha256sha256 = function (buf) {\n  $.checkArgument(Buffer.isBuffer(buf))\n  return Hash.sha256(Hash.sha256(buf))\n}\n\n/**\n * A RIPEMD160 hash, which is always 160 bits or 20 bytes long.\n *\n * See:\n * https://en.wikipedia.org/wiki/RIPEMD\n *\n * @param {Buffer} buf Data, a.k.a. pre-image, which can be any size.\n * @returns {Buffer} The hash in the form of a buffer.\n */\nHash.ripemd160 = function (buf) {\n  $.checkArgument(Buffer.isBuffer(buf))\n  return crypto.createHash('ripemd160').update(buf).digest()\n}\n/**\n * A RIPEMD160 hash of a SHA256 hash, which is always 160 bits or 20 bytes long.\n * This value is commonly used inside Bitcoin, particularly for Bitcoin\n * addresses.\n *\n * See:\n * https://en.wikipedia.org/wiki/RIPEMD\n *\n * @param {Buffer} buf Data, a.k.a. pre-image, which can be any size.\n * @returns {Buffer} The hash in the form of a buffer.\n */\nHash.sha256ripemd160 = function (buf) {\n  $.checkArgument(Buffer.isBuffer(buf))\n  return Hash.ripemd160(Hash.sha256(buf))\n}\n\n/**\n * A SHA512 hash, which is always 512 bits or 64 bytes long.\n *\n * See:\n * https://en.wikipedia.org/wiki/SHA-2\n *\n * @param {Buffer} buf Data, a.k.a. pre-image, which can be any size.\n * @returns {Buffer} The hash in the form of a buffer.\n */\nHash.sha512 = function (buf) {\n  $.checkArgument(Buffer.isBuffer(buf))\n  return crypto.createHash('sha512').update(buf).digest()\n}\n\nHash.sha512.blocksize = 1024\n\n/**\n * A way to do HMAC using any underlying hash function. If you ever find that\n * you want to hash two pieces of data together, you should use HMAC instead of\n * just using a hash function. Rather than doing hash(data1 + data2) you should\n * do HMAC(data1, data2). Actually, rather than use HMAC directly, we recommend\n * you use either sha256hmac or sha515hmac provided below.\n *\n * See:\n * https://en.wikipedia.org/wiki/Length_extension_attack\n * https://blog.skullsecurity.org/2012/everything-you-need-to-know-about-hash-length-extension-attacks\n *\n * @param {function} hashf Which hash function to use.\n * @param {Buffer} data Data, which can be any size.\n * @param {Buffer} key Key, which can be any size.\n * @returns {Buffer} The HMAC in the form of a buffer.\n */\nHash.hmac = function (hashf, data, key) {\n  // http://en.wikipedia.org/wiki/Hash-based_message_authentication_code\n  // http://tools.ietf.org/html/rfc4868#section-2\n  $.checkArgument(Buffer.isBuffer(data))\n  $.checkArgument(Buffer.isBuffer(key))\n  $.checkArgument(hashf.blocksize)\n\n  var blocksize = hashf.blocksize / 8\n\n  if (key.length > blocksize) {\n    key = hashf(key)\n  } else if (key < blocksize) {\n    var fill = Buffer.alloc(blocksize)\n    fill.fill(0)\n    key.copy(fill)\n    key = fill\n  }\n\n  var oKey = Buffer.alloc(blocksize)\n  oKey.fill(0x5c)\n\n  var iKey = Buffer.alloc(blocksize)\n  iKey.fill(0x36)\n\n  var oKeyPad = Buffer.alloc(blocksize)\n  var iKeyPad = Buffer.alloc(blocksize)\n  for (var i = 0; i < blocksize; i++) {\n    oKeyPad[i] = oKey[i] ^ key[i]\n    iKeyPad[i] = iKey[i] ^ key[i]\n  }\n\n  return hashf(Buffer.concat([oKeyPad, hashf(Buffer.concat([iKeyPad, data]))]))\n}\n\n/**\n * A SHA256 HMAC.\n *\n * @param {Buffer} data Data, which can be any size.\n * @param {Buffer} key Key, which can be any size.\n * @returns {Buffer} The HMAC in the form of a buffer.\n */\nHash.sha256hmac = function (data, key) {\n  return Hash.hmac(Hash.sha256, data, key)\n}\n\n/**\n * A SHA512 HMAC.\n *\n * @param {Buffer} data Data, which can be any size.\n * @param {Buffer} key Key, which can be any size.\n * @returns {Buffer} The HMAC in the form of a buffer.\n */\nHash.sha512hmac = function (data, key) {\n  return Hash.hmac(Hash.sha512, data, key)\n}\n","if (process.browser) module.exports = require('./hash.browser')\nelse module.exports = require('./hash.node')\n","'use strict'\nvar _ = require('./util/_')\n\nvar JSUtil = require('./util/js')\nvar networks = []\nvar networkMaps = {}\n\n/**\n * A network is merely a map containing values that correspond to version\n * numbers for each bitcoin network. Currently only supporting \"livenet\"\n * (a.k.a. \"mainnet\"), \"testnet\", \"regtest\" and \"stn\".\n * @constructor\n */\nfunction Network () {}\n\nNetwork.prototype.toString = function toString () {\n  return this.name\n}\n\n/**\n * @function\n * @member Networks#get\n * Retrieves the network associated with a magic number or string.\n * @param {string|number|Network} arg\n * @param {string|Array} keys - if set, only check if the magic number associated with this name matches\n * @return Network\n */\nfunction get (arg, keys) {\n  if (~networks.indexOf(arg)) {\n    return arg\n  }\n  if (keys) {\n    if (!_.isArray(keys)) {\n      keys = [keys]\n    }\n    for (var i = 0; i < networks.length; i++) {\n      var network = networks[i]\n      var filteredNet = _.pick(network, keys)\n      var netValues = _.values(filteredNet)\n      if (~netValues.indexOf(arg)) {\n        return network\n      }\n    }\n    return undefined\n  }\n  return networkMaps[arg]\n}\n\n/***\n * Derives an array from the given cashAddrPrefix to be used in the computation\n * of the address' checksum.\n *\n * @param {string} cashAddrPrefix Network cashAddrPrefix. E.g.: 'bitcoincash'.\n */\nfunction cashAddrPrefixToArray (cashAddrPrefix) {\n  var result = []\n  for (var i = 0; i < cashAddrPrefix.length; i++) {\n    result.push(cashAddrPrefix.charCodeAt(i) & 31)\n  }\n  return result\n}\n\n/**\n * @function\n * @member Networks#add\n * Will add a custom Network\n * @param {Object} data\n * @param {string} data.name - The name of the network\n * @param {string} data.alias - The aliased name of the network\n * @param {Number} data.pubkeyhash - The publickey hash cashAddrPrefix\n * @param {Number} data.privatekey - The privatekey cashAddrPrefix\n * @param {Number} data.scripthash - The scripthash cashAddrPrefix\n * @param {Number} data.xpubkey - The extended public key magic\n * @param {Number} data.xprivkey - The extended private key magic\n * @param {Number} data.networkMagic - The network magic number\n * @param {Number} data.port - The network port\n * @param {Array}  data.dnsSeeds - An array of dns seeds\n * @return Network\n */\nfunction addNetwork (data) {\n  var network = new Network()\n\n  JSUtil.defineImmutable(network, {\n    name: data.name,\n    alias: data.alias,\n    pubkeyhash: data.pubkeyhash,\n    privatekey: data.privatekey,\n    scripthash: data.scripthash,\n    xpubkey: data.xpubkey,\n    xprivkey: data.xprivkey\n  })\n\n  var indexBy = data.indexBy || Object.keys(data)\n\n  if (data.cashAddrPrefix) {\n    _.extend(network, {\n      cashAddrPrefix: data.cashAddrPrefix,\n      cashAddrPrefixArray: cashAddrPrefixToArray(data.cashAddrPrefix)\n    })\n  }\n\n  if (data.networkMagic) {\n    _.extend(network, {\n      networkMagic: JSUtil.integerAsBuffer(data.networkMagic)\n    })\n  }\n\n  if (data.port) {\n    _.extend(network, {\n      port: data.port\n    })\n  }\n\n  if (data.dnsSeeds) {\n    _.extend(network, {\n      dnsSeeds: data.dnsSeeds\n    })\n  }\n  networks.push(network)\n  indexNetworkBy(network, indexBy)\n  return network\n}\n\nfunction indexNetworkBy (network, keys) {\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    var networkValue = network[key]\n    if (!_.isUndefined(networkValue) && !_.isObject(networkValue)) {\n      networkMaps[networkValue] = network\n    }\n  }\n}\n\nfunction unindexNetworkBy (network, values) {\n  for (var index = 0; index < values.length; index++) {\n    var value = values[index]\n    if (networkMaps[value] === network) {\n      delete networkMaps[value]\n    }\n  }\n}\n\n/**\n * @function\n * @member Networks#remove\n * Will remove a custom network\n * @param {Network} network\n */\nfunction removeNetwork (network) {\n  for (var i = 0; i < networks.length; i++) {\n    if (networks[i] === network) {\n      networks.splice(i, 1)\n    }\n  }\n  unindexNetworkBy(network, Object.keys(networkMaps))\n}\n\nvar networkMagic = {\n  livenet: 0xe3e1f3e8,\n  testnet: 0xf4e5f3f4,\n  regtest: 0xdab5bffa,\n  stn: 0xfbcec4f9\n}\n\nvar dnsSeeds = [\n  'seed.bitcoinsv.org',\n  'seed.bitcoinunlimited.info'\n]\n\nvar TESTNET = {\n  PORT: 18333,\n  NETWORK_MAGIC: networkMagic.testnet,\n  DNS_SEEDS: dnsSeeds,\n  PREFIX: 'testnet',\n  CASHADDRPREFIX: 'bchtest'\n}\n\nvar REGTEST = {\n  PORT: 18444,\n  NETWORK_MAGIC: networkMagic.regtest,\n  DNS_SEEDS: [],\n  PREFIX: 'regtest',\n  CASHADDRPREFIX: 'bchreg'\n}\n\nvar STN = {\n  PORT: 9333,\n  NETWORK_MAGIC: networkMagic.stn,\n  DNS_SEEDS: ['stn-seed.bitcoinsv.io'],\n  PREFIX: 'stn',\n  CASHADDRPREFIX: 'bsvstn'\n}\n\nvar liveNetwork = {\n  name: 'livenet',\n  alias: 'mainnet',\n  prefix: 'bitcoin',\n  cashAddrPrefix: 'bitcoincash',\n  pubkeyhash: 0x00,\n  privatekey: 0x80,\n  scripthash: 0x05,\n  xpubkey: 0x0488b21e,\n  xprivkey: 0x0488ade4,\n  networkMagic: networkMagic.livenet,\n  port: 8333,\n  dnsSeeds: dnsSeeds\n}\n\n// network magic, port, cashAddrPrefix, and dnsSeeds are overloaded by enableRegtest\nvar testNetwork = {\n  name: 'testnet',\n  prefix: TESTNET.PREFIX,\n  cashAddrPrefix: TESTNET.CASHADDRPREFIX,\n  pubkeyhash: 0x6f,\n  privatekey: 0xef,\n  scripthash: 0xc4,\n  xpubkey: 0x043587cf,\n  xprivkey: 0x04358394,\n  networkMagic: TESTNET.NETWORK_MAGIC\n}\n\nvar regtestNetwork = {\n  name: 'regtest',\n  prefix: REGTEST.PREFIX,\n  cashAddrPrefix: REGTEST.CASHADDRPREFIX,\n  pubkeyhash: 0x6f,\n  privatekey: 0xef,\n  scripthash: 0xc4,\n  xpubkey: 0x043587cf,\n  xprivkey: 0x04358394,\n  networkMagic: REGTEST.NETWORK_MAGIC,\n  port: REGTEST.PORT,\n  dnsSeeds: [],\n  indexBy: [\n    'port',\n    'name',\n    'cashAddrPrefix',\n    'networkMagic'\n  ]\n}\nvar stnNetwork = {\n  name: 'stn',\n  prefix: STN.PREFIX,\n  cashAddrPrefix: STN.CASHADDRPREFIX,\n  pubkeyhash: 0x6f,\n  privatekey: 0xef,\n  scripthash: 0xc4,\n  xpubkey: 0x043587cf,\n  xprivkey: 0x04358394,\n  networkMagic: STN.NETWORK_MAGIC,\n  indexBy: [\n    'port',\n    'name',\n    'cashAddrPrefix',\n    'networkMagic'\n  ]\n}\n// Add configurable values for testnet/regtest\n\naddNetwork(testNetwork)\naddNetwork(stnNetwork)\naddNetwork(regtestNetwork)\naddNetwork(liveNetwork)\n\nvar livenet = get('livenet')\nvar regtest = get('regtest')\nvar testnet = get('testnet')\nvar stn = get('stn')\n\nObject.defineProperty(testnet, 'port', {\n  enumerable: true,\n  configurable: false,\n  get: function () {\n    if (this.regtestEnabled) {\n      return REGTEST.PORT\n    } else if (this.stnEnabled) {\n      return STN.PORT\n    } else {\n      return TESTNET.PORT\n    }\n  }\n})\n\nObject.defineProperty(testnet, 'networkMagic', {\n  enumerable: true,\n  configurable: false,\n  get: function () {\n    if (this.regtestEnabled) {\n      return JSUtil.integerAsBuffer(REGTEST.NETWORK_MAGIC)\n    } else if (this.stnEnabled) {\n      return JSUtil.integerAsBuffer(STN.NETWORK_MAGIC)\n    } else {\n      return JSUtil.integerAsBuffer(TESTNET.NETWORK_MAGIC)\n    }\n  }\n})\n\nObject.defineProperty(testnet, 'dnsSeeds', {\n  enumerable: true,\n  configurable: false,\n  get: function () {\n    if (this.regtestEnabled) {\n      return REGTEST.DNS_SEEDS\n    } else if (this.stnEnabled) {\n      return STN.DNS_SEEDS\n    } else {\n      return TESTNET.DNS_SEEDS\n    }\n  }\n})\n\nObject.defineProperty(testnet, 'cashAddrPrefix', {\n  enumerable: true,\n  configurable: false,\n  get: function () {\n    if (this.regtestEnabled) {\n      return REGTEST.CASHADDRPREFIX\n    } else if (this.stnEnabled) {\n      return STN.CASHADDRPREFIX\n    } else {\n      return TESTNET.CASHADDRPREFIX\n    }\n  }\n})\n\nObject.defineProperty(testnet, 'cashAddrPrefixArray', {\n  enumerable: true,\n  configurable: false,\n  get: function () {\n    if (this.regtestEnabled) {\n      return cashAddrPrefixToArray(REGTEST.CASHADDRPREFIX)\n    } else if (this.stnEnabled) {\n      return STN.cashAddrPrefixToArray(STN.CASHADDRPREFIX)\n    } else {\n      return cashAddrPrefixToArray(TESTNET.CASHADDRPREFIX)\n    }\n  }\n})\n\n/**\n * @function\n * @member Networks#enableRegtest\n * Will enable regtest features for testnet\n */\nfunction enableRegtest () {\n  testnet.regtestEnabled = true\n}\n\n/**\n * @function\n * @member Networks#disableRegtest\n * Will disable regtest features for testnet\n */\nfunction disableRegtest () {\n  testnet.regtestEnabled = false\n}\n/**\n * @function\n * @member Networks#enableStn\n * Will enable stn features for testnet\n */\nfunction enableStn () {\n  testnet.stnEnabled = true\n}\n\n/**\n * @function\n * @member Networks#disableStn\n * Will disable stn features for testnet\n */\nfunction disableStn () {\n  testnet.stnEnabled = false\n}\n\n/**\n * @namespace Networks\n */\nmodule.exports = {\n  add: addNetwork,\n  remove: removeNetwork,\n  defaultNetwork: livenet,\n  livenet: livenet,\n  mainnet: livenet,\n  testnet: testnet,\n  regtest: regtest,\n  stn: stn,\n  get: get,\n  enableRegtest: enableRegtest,\n  disableRegtest: disableRegtest,\n  enableStn: enableStn,\n  disableStn: disableStn\n}\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (psz < source.length) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","'use strict'\n\nvar _ = require('../util/_')\nvar bs58 = require('bs58')\nvar buffer = require('buffer')\n\n/**\n * The alphabet for the Bitcoin-specific Base 58 encoding distinguishes between\n * lower case L and upper case i - neither of those characters are allowed to\n * prevent accidentaly miscopying of letters.\n */\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'.split('')\n\n/**\n * A Base58 object can encode/decoded Base 58, which is used primarily for\n * string-formatted Bitcoin addresses and private keys. Addresses and private\n * keys actually use an additional checksum, and so they actually use the\n * Base58Check class.\n *\n * @param {object} obj Can be a string or buffer.\n */\nvar Base58 = function Base58 (obj) {\n  if (!(this instanceof Base58)) {\n    return new Base58(obj)\n  }\n  if (Buffer.isBuffer(obj)) {\n    var buf = obj\n    this.fromBuffer(buf)\n  } else if (typeof obj === 'string') {\n    var str = obj\n    this.fromString(str)\n  }\n}\n\nBase58.validCharacters = function validCharacters (chars) {\n  if (buffer.Buffer.isBuffer(chars)) {\n    chars = chars.toString()\n  }\n  return _.every(_.map(chars, function (char) { return _.includes(ALPHABET, char) }))\n}\n\nBase58.prototype.set = function (obj) {\n  this.buf = obj.buf || this.buf || undefined\n  return this\n}\n\n/**\n * Encode a buffer to Bsae 58.\n *\n * @param {Buffer} buf Any buffer to be encoded.\n * @returns {string} A Base 58 encoded string.\n */\nBase58.encode = function (buf) {\n  if (!buffer.Buffer.isBuffer(buf)) {\n    throw new Error('Input should be a buffer')\n  }\n  return bs58.encode(buf)\n}\n\n/**\n * Decode a Base 58 string to a buffer.\n *\n * @param {string} str A Base 58 encoded string.\n * @returns {Buffer} The decoded buffer.\n */\nBase58.decode = function (str) {\n  if (typeof str !== 'string') {\n    throw new Error('Input should be a string')\n  }\n  return Buffer.from(bs58.decode(str))\n}\n\nBase58.prototype.fromBuffer = function (buf) {\n  this.buf = buf\n  return this\n}\n\nBase58.fromBuffer = function (buf) {\n  return new Base58().fromBuffer(buf)\n}\n\nBase58.fromHex = function (hex) {\n  return Base58.fromBuffer(Buffer.from(hex, 'hex'))\n}\n\nBase58.prototype.fromString = function (str) {\n  var buf = Base58.decode(str)\n  this.buf = buf\n  return this\n}\n\nBase58.fromString = function (str) {\n  return new Base58().fromString(str)\n}\n\nBase58.prototype.toBuffer = function () {\n  return this.buf\n}\n\nBase58.prototype.toHex = function () {\n  return this.toBuffer().toString('hex')\n}\n\nBase58.prototype.toString = function () {\n  return Base58.encode(this.buf)\n}\n\nmodule.exports = Base58\n","'use strict'\n\nvar _ = require('../util/_')\nvar Base58 = require('./base58')\nvar buffer = require('buffer')\nvar sha256sha256 = require('../crypto/hash').sha256sha256\n\n/**\n * A Base58check object can encode/decodd Base 58, which is used primarily for\n * string-formatted Bitcoin addresses and private keys. This is the same as\n * Base58, except that it includes a checksum to prevent accidental mistypings.\n *\n * @param {object} obj Can be a string or buffer.\n */\nvar Base58Check = function Base58Check (obj) {\n  if (!(this instanceof Base58Check)) { return new Base58Check(obj) }\n  if (Buffer.isBuffer(obj)) {\n    var buf = obj\n    this.fromBuffer(buf)\n  } else if (typeof obj === 'string') {\n    var str = obj\n    this.fromString(str)\n  }\n}\n\nBase58Check.prototype.set = function (obj) {\n  this.buf = obj.buf || this.buf || undefined\n  return this\n}\n\nBase58Check.validChecksum = function validChecksum (data, checksum) {\n  if (_.isString(data)) {\n    data = buffer.Buffer.from(Base58.decode(data))\n  }\n  if (_.isString(checksum)) {\n    checksum = buffer.Buffer.from(Base58.decode(checksum))\n  }\n  if (!checksum) {\n    checksum = data.slice(-4)\n    data = data.slice(0, -4)\n  }\n  return Base58Check.checksum(data).toString('hex') === checksum.toString('hex')\n}\n\nBase58Check.decode = function (s) {\n  if (typeof s !== 'string') { throw new Error('Input must be a string') }\n\n  var buf = Buffer.from(Base58.decode(s))\n\n  if (buf.length < 4) { throw new Error('Input string too short') }\n\n  var data = buf.slice(0, -4)\n  var csum = buf.slice(-4)\n\n  var hash = sha256sha256(data)\n  var hash4 = hash.slice(0, 4)\n\n  if (csum.toString('hex') !== hash4.toString('hex')) { throw new Error('Checksum mismatch') }\n\n  return data\n}\n\nBase58Check.checksum = function (buffer) {\n  return sha256sha256(buffer).slice(0, 4)\n}\n\nBase58Check.encode = function (buf) {\n  if (!Buffer.isBuffer(buf)) { throw new Error('Input must be a buffer') }\n  var checkedBuf = Buffer.alloc(buf.length + 4)\n  var hash = Base58Check.checksum(buf)\n  buf.copy(checkedBuf)\n  hash.copy(checkedBuf, buf.length)\n  return Base58.encode(checkedBuf)\n}\n\nBase58Check.prototype.fromBuffer = function (buf) {\n  this.buf = buf\n  return this\n}\n\nBase58Check.fromBuffer = function (buf) {\n  return new Base58Check().fromBuffer(buf)\n}\n\nBase58Check.fromHex = function (hex) {\n  return Base58Check.fromBuffer(Buffer.from(hex, 'hex'))\n}\n\nBase58Check.prototype.fromString = function (str) {\n  var buf = Base58Check.decode(str)\n  this.buf = buf\n  return this\n}\n\nBase58Check.fromString = function (str) {\n  var buf = Base58Check.decode(str)\n  return new Base58(buf)\n}\n\nBase58Check.prototype.toBuffer = function () {\n  return this.buf\n}\n\nBase58Check.prototype.toHex = function () {\n  return this.toBuffer().toString('hex')\n}\n\nBase58Check.prototype.toString = function () {\n  return Base58Check.encode(this.buf)\n}\n\nmodule.exports = Base58Check\n","'use strict'\n\nvar _ = require('../util/_')\nvar $ = require('../util/preconditions')\nvar BN = require('../crypto/bn')\n\nvar BufferReader = function BufferReader (buf) {\n  if (!(this instanceof BufferReader)) {\n    return new BufferReader(buf)\n  }\n  if (_.isUndefined(buf)) {\n    return\n  }\n  if (Buffer.isBuffer(buf)) {\n    this.set({\n      buf: buf\n    })\n  } else if (_.isString(buf)) {\n    var b = Buffer.from(buf, 'hex')\n    if (b.length * 2 !== buf.length) { throw new TypeError('Invalid hex string') }\n\n    this.set({\n      buf: b\n    })\n  } else if (_.isObject(buf)) {\n    var obj = buf\n    this.set(obj)\n  } else {\n    throw new TypeError('Unrecognized argument for BufferReader')\n  }\n}\n\nBufferReader.prototype.set = function (obj) {\n  this.buf = obj.buf || this.buf || undefined\n  this.pos = obj.pos || this.pos || 0\n  return this\n}\n\nBufferReader.prototype.eof = function () {\n  return this.pos >= this.buf.length\n}\n\nBufferReader.prototype.finished = BufferReader.prototype.eof\n\nBufferReader.prototype.read = function (len) {\n  $.checkArgument(!_.isUndefined(len), 'Must specify a length')\n  var buf = this.buf.slice(this.pos, this.pos + len)\n  this.pos = this.pos + len\n  return buf\n}\n\nBufferReader.prototype.readAll = function () {\n  var buf = this.buf.slice(this.pos, this.buf.length)\n  this.pos = this.buf.length\n  return buf\n}\n\nBufferReader.prototype.readUInt8 = function () {\n  var val = this.buf.readUInt8(this.pos)\n  this.pos = this.pos + 1\n  return val\n}\n\nBufferReader.prototype.readUInt16BE = function () {\n  var val = this.buf.readUInt16BE(this.pos)\n  this.pos = this.pos + 2\n  return val\n}\n\nBufferReader.prototype.readUInt16LE = function () {\n  var val = this.buf.readUInt16LE(this.pos)\n  this.pos = this.pos + 2\n  return val\n}\n\nBufferReader.prototype.readUInt32BE = function () {\n  var val = this.buf.readUInt32BE(this.pos)\n  this.pos = this.pos + 4\n  return val\n}\n\nBufferReader.prototype.readUInt32LE = function () {\n  var val = this.buf.readUInt32LE(this.pos)\n  this.pos = this.pos + 4\n  return val\n}\n\nBufferReader.prototype.readInt32LE = function () {\n  var val = this.buf.readInt32LE(this.pos)\n  this.pos = this.pos + 4\n  return val\n}\n\nBufferReader.prototype.readUInt64BEBN = function () {\n  var buf = this.buf.slice(this.pos, this.pos + 8)\n  var bn = BN.fromBuffer(buf)\n  this.pos = this.pos + 8\n  return bn\n}\n\nBufferReader.prototype.readUInt64LEBN = function () {\n  var second = this.buf.readUInt32LE(this.pos)\n  var first = this.buf.readUInt32LE(this.pos + 4)\n  var combined = (first * 0x100000000) + second\n  // Instantiating an instance of BN with a number is faster than with an\n  // array or string. However, the maximum safe number for a double precision\n  // floating point is 2 ^ 52 - 1 (0x1fffffffffffff), thus we can safely use\n  // non-floating point numbers less than this amount (52 bits). And in the case\n  // that the number is larger, we can instatiate an instance of BN by passing\n  // an array from the buffer (slower) and specifying the endianness.\n  var bn\n  if (combined <= 0x1fffffffffffff) {\n    bn = new BN(combined)\n  } else {\n    var data = Array.prototype.slice.call(this.buf, this.pos, this.pos + 8)\n    bn = new BN(data, 10, 'le')\n  }\n  this.pos = this.pos + 8\n  return bn\n}\n\nBufferReader.prototype.readVarintNum = function () {\n  var first = this.readUInt8()\n  switch (first) {\n    case 0xFD:\n      return this.readUInt16LE()\n    case 0xFE:\n      return this.readUInt32LE()\n    case 0xFF:\n      var bn = this.readUInt64LEBN()\n      var n = bn.toNumber()\n      if (n <= Math.pow(2, 53)) {\n        return n\n      } else {\n        throw new Error('number too large to retain precision - use readVarintBN')\n      }\n      // break // unreachable\n    default:\n      return first\n  }\n}\n\n/**\n * reads a length prepended buffer\n */\nBufferReader.prototype.readVarLengthBuffer = function () {\n  var len = this.readVarintNum()\n  var buf = this.read(len)\n  $.checkState(buf.length === len, 'Invalid length while reading varlength buffer. ' +\n    'Expected to read: ' + len + ' and read ' + buf.length)\n  return buf\n}\n\nBufferReader.prototype.readVarintBuf = function () {\n  var first = this.buf.readUInt8(this.pos)\n  switch (first) {\n    case 0xFD:\n      return this.read(1 + 2)\n    case 0xFE:\n      return this.read(1 + 4)\n    case 0xFF:\n      return this.read(1 + 8)\n    default:\n      return this.read(1)\n  }\n}\n\nBufferReader.prototype.readVarintBN = function () {\n  var first = this.readUInt8()\n  switch (first) {\n    case 0xFD:\n      return new BN(this.readUInt16LE())\n    case 0xFE:\n      return new BN(this.readUInt32LE())\n    case 0xFF:\n      return this.readUInt64LEBN()\n    default:\n      return new BN(first)\n  }\n}\n\nBufferReader.prototype.reverse = function () {\n  var buf = Buffer.alloc(this.buf.length)\n  for (var i = 0; i < buf.length; i++) {\n    buf[i] = this.buf[this.buf.length - 1 - i]\n  }\n  this.buf = buf\n  return this\n}\n\nBufferReader.prototype.readReverse = function (len) {\n  if (_.isUndefined(len)) {\n    len = this.buf.length\n  }\n  var buf = this.buf.slice(this.pos, this.pos + len)\n  this.pos = this.pos + len\n  return Buffer.from(buf).reverse()\n}\n\nmodule.exports = BufferReader\n","'use strict'\n\nvar assert = require('assert')\n\nvar BufferWriter = function BufferWriter (obj) {\n  if (!(this instanceof BufferWriter)) { return new BufferWriter(obj) }\n  this.bufLen = 0\n  if (obj) { this.set(obj) } else { this.bufs = [] }\n}\n\nBufferWriter.prototype.set = function (obj) {\n  this.bufs = obj.bufs || this.bufs || []\n  this.bufLen = this.bufs.reduce(function (prev, buf) { return prev + buf.length }, 0)\n  return this\n}\n\nBufferWriter.prototype.toBuffer = function () {\n  return this.concat()\n}\n\nBufferWriter.prototype.concat = function () {\n  return Buffer.concat(this.bufs, this.bufLen)\n}\n\nBufferWriter.prototype.write = function (buf) {\n  assert(Buffer.isBuffer(buf))\n  this.bufs.push(buf)\n  this.bufLen += buf.length\n  return this\n}\n\nBufferWriter.prototype.writeReverse = function (buf) {\n  assert(Buffer.isBuffer(buf))\n  this.bufs.push(Buffer.from(buf).reverse())\n  this.bufLen += buf.length\n  return this\n}\n\nBufferWriter.prototype.writeUInt8 = function (n) {\n  var buf = Buffer.alloc(1)\n  buf.writeUInt8(n, 0)\n  this.write(buf)\n  return this\n}\n\nBufferWriter.prototype.writeUInt16BE = function (n) {\n  var buf = Buffer.alloc(2)\n  buf.writeUInt16BE(n, 0)\n  this.write(buf)\n  return this\n}\n\nBufferWriter.prototype.writeUInt16LE = function (n) {\n  var buf = Buffer.alloc(2)\n  buf.writeUInt16LE(n, 0)\n  this.write(buf)\n  return this\n}\n\nBufferWriter.prototype.writeUInt32BE = function (n) {\n  var buf = Buffer.alloc(4)\n  buf.writeUInt32BE(n, 0)\n  this.write(buf)\n  return this\n}\n\nBufferWriter.prototype.writeInt32LE = function (n) {\n  var buf = Buffer.alloc(4)\n  buf.writeInt32LE(n, 0)\n  this.write(buf)\n  return this\n}\n\nBufferWriter.prototype.writeUInt32LE = function (n) {\n  var buf = Buffer.alloc(4)\n  buf.writeUInt32LE(n, 0)\n  this.write(buf)\n  return this\n}\n\nBufferWriter.prototype.writeUInt64BEBN = function (bn) {\n  var buf = bn.toBuffer({ size: 8 })\n  this.write(buf)\n  return this\n}\n\nBufferWriter.prototype.writeUInt64LEBN = function (bn) {\n  var buf = bn.toBuffer({ size: 8 })\n  this.writeReverse(buf)\n  return this\n}\n\nBufferWriter.prototype.writeVarintNum = function (n) {\n  var buf = BufferWriter.varintBufNum(n)\n  this.write(buf)\n  return this\n}\n\nBufferWriter.prototype.writeVarintBN = function (bn) {\n  var buf = BufferWriter.varintBufBN(bn)\n  this.write(buf)\n  return this\n}\n\nBufferWriter.varintBufNum = function (n) {\n  var buf\n  if (n < 253) {\n    buf = Buffer.alloc(1)\n    buf.writeUInt8(n, 0)\n  } else if (n < 0x10000) {\n    buf = Buffer.alloc(1 + 2)\n    buf.writeUInt8(253, 0)\n    buf.writeUInt16LE(n, 1)\n  } else if (n < 0x100000000) {\n    buf = Buffer.alloc(1 + 4)\n    buf.writeUInt8(254, 0)\n    buf.writeUInt32LE(n, 1)\n  } else {\n    buf = Buffer.alloc(1 + 8)\n    buf.writeUInt8(255, 0)\n    buf.writeInt32LE(n & -1, 1)\n    buf.writeUInt32LE(Math.floor(n / 0x100000000), 5)\n  }\n  return buf\n}\n\nBufferWriter.varintBufBN = function (bn) {\n  var buf\n  var n = bn.toNumber()\n  if (n < 253) {\n    buf = Buffer.alloc(1)\n    buf.writeUInt8(n, 0)\n  } else if (n < 0x10000) {\n    buf = Buffer.alloc(1 + 2)\n    buf.writeUInt8(253, 0)\n    buf.writeUInt16LE(n, 1)\n  } else if (n < 0x100000000) {\n    buf = Buffer.alloc(1 + 4)\n    buf.writeUInt8(254, 0)\n    buf.writeUInt32LE(n, 1)\n  } else {\n    var bw = new BufferWriter()\n    bw.writeUInt8(255)\n    bw.writeUInt64LEBN(bn)\n    buf = bw.concat()\n  }\n  return buf\n}\n\nmodule.exports = BufferWriter\n","'use strict'\n\nvar _ = require('./util/_')\nvar $ = require('./util/preconditions')\nvar JSUtil = require('./util/js')\n\nfunction Opcode (num) {\n  if (!(this instanceof Opcode)) {\n    return new Opcode(num)\n  }\n\n  var value\n\n  if (_.isNumber(num)) {\n    value = num\n  } else if (_.isString(num)) {\n    value = Opcode.map[num]\n  } else {\n    throw new TypeError('Unrecognized num type: \"' + typeof (num) + '\" for Opcode')\n  }\n\n  JSUtil.defineImmutable(this, {\n    num: value\n  })\n\n  return this\n}\n\nOpcode.fromBuffer = function (buf) {\n  $.checkArgument(Buffer.isBuffer(buf))\n  return new Opcode(Number('0x' + buf.toString('hex')))\n}\n\nOpcode.fromNumber = function (num) {\n  $.checkArgument(_.isNumber(num))\n  return new Opcode(num)\n}\n\nOpcode.fromString = function (str) {\n  $.checkArgument(_.isString(str))\n  var value = Opcode.map[str]\n  if (typeof value === 'undefined') {\n    throw new TypeError('Invalid opcodestr')\n  }\n  return new Opcode(value)\n}\n\nOpcode.prototype.toHex = function () {\n  return this.num.toString(16)\n}\n\nOpcode.prototype.toBuffer = function () {\n  return Buffer.from(this.toHex(), 'hex')\n}\n\nOpcode.prototype.toNumber = function () {\n  return this.num\n}\n\nOpcode.prototype.toString = function () {\n  var str = Opcode.reverseMap[this.num]\n  if (typeof str === 'undefined') {\n    throw new Error('Opcode does not have a string representation')\n  }\n  return str\n}\n\nOpcode.smallInt = function (n) {\n  $.checkArgument(_.isNumber(n), 'Invalid Argument: n should be number')\n  $.checkArgument(n >= 0 && n <= 16, 'Invalid Argument: n must be between 0 and 16')\n  if (n === 0) {\n    return Opcode('OP_0')\n  }\n  return new Opcode(Opcode.map.OP_1 + n - 1)\n}\n\nOpcode.map = {\n  // push value\n  OP_FALSE: 0,\n  OP_0: 0,\n  OP_PUSHDATA1: 76,\n  OP_PUSHDATA2: 77,\n  OP_PUSHDATA4: 78,\n  OP_1NEGATE: 79,\n  OP_RESERVED: 80,\n  OP_TRUE: 81,\n  OP_1: 81,\n  OP_2: 82,\n  OP_3: 83,\n  OP_4: 84,\n  OP_5: 85,\n  OP_6: 86,\n  OP_7: 87,\n  OP_8: 88,\n  OP_9: 89,\n  OP_10: 90,\n  OP_11: 91,\n  OP_12: 92,\n  OP_13: 93,\n  OP_14: 94,\n  OP_15: 95,\n  OP_16: 96,\n\n  // control\n  OP_NOP: 97,\n  OP_VER: 98,\n  OP_IF: 99,\n  OP_NOTIF: 100,\n  OP_VERIF: 101,\n  OP_VERNOTIF: 102,\n  OP_ELSE: 103,\n  OP_ENDIF: 104,\n  OP_VERIFY: 105,\n  OP_RETURN: 106,\n\n  // stack ops\n  OP_TOALTSTACK: 107,\n  OP_FROMALTSTACK: 108,\n  OP_2DROP: 109,\n  OP_2DUP: 110,\n  OP_3DUP: 111,\n  OP_2OVER: 112,\n  OP_2ROT: 113,\n  OP_2SWAP: 114,\n  OP_IFDUP: 115,\n  OP_DEPTH: 116,\n  OP_DROP: 117,\n  OP_DUP: 118,\n  OP_NIP: 119,\n  OP_OVER: 120,\n  OP_PICK: 121,\n  OP_ROLL: 122,\n  OP_ROT: 123,\n  OP_SWAP: 124,\n  OP_TUCK: 125,\n\n  // splice ops\n  OP_CAT: 126,\n  OP_SPLIT: 127,\n  OP_NUM2BIN: 128,\n  OP_BIN2NUM: 129,\n  OP_SIZE: 130,\n\n  // bit logic\n  OP_INVERT: 131,\n  OP_AND: 132,\n  OP_OR: 133,\n  OP_XOR: 134,\n  OP_EQUAL: 135,\n  OP_EQUALVERIFY: 136,\n  OP_RESERVED1: 137,\n  OP_RESERVED2: 138,\n\n  // numeric\n  OP_1ADD: 139,\n  OP_1SUB: 140,\n  OP_2MUL: 141,\n  OP_2DIV: 142,\n  OP_NEGATE: 143,\n  OP_ABS: 144,\n  OP_NOT: 145,\n  OP_0NOTEQUAL: 146,\n\n  OP_ADD: 147,\n  OP_SUB: 148,\n  OP_MUL: 149,\n  OP_DIV: 150,\n  OP_MOD: 151,\n  OP_LSHIFT: 152,\n  OP_RSHIFT: 153,\n\n  OP_BOOLAND: 154,\n  OP_BOOLOR: 155,\n  OP_NUMEQUAL: 156,\n  OP_NUMEQUALVERIFY: 157,\n  OP_NUMNOTEQUAL: 158,\n  OP_LESSTHAN: 159,\n  OP_GREATERTHAN: 160,\n  OP_LESSTHANOREQUAL: 161,\n  OP_GREATERTHANOREQUAL: 162,\n  OP_MIN: 163,\n  OP_MAX: 164,\n\n  OP_WITHIN: 165,\n\n  // crypto\n  OP_RIPEMD160: 166,\n  OP_SHA1: 167,\n  OP_SHA256: 168,\n  OP_HASH160: 169,\n  OP_HASH256: 170,\n  OP_CODESEPARATOR: 171,\n  OP_CHECKSIG: 172,\n  OP_CHECKSIGVERIFY: 173,\n  OP_CHECKMULTISIG: 174,\n  OP_CHECKMULTISIGVERIFY: 175,\n\n  OP_CHECKLOCKTIMEVERIFY: 177,\n  OP_CHECKSEQUENCEVERIFY: 178,\n\n  // expansion\n  OP_NOP1: 176,\n  OP_NOP2: 177,\n  OP_NOP3: 178,\n  OP_NOP4: 179,\n  OP_NOP5: 180,\n  OP_NOP6: 181,\n  OP_NOP7: 182,\n  OP_NOP8: 183,\n  OP_NOP9: 184,\n  OP_NOP10: 185,\n\n  // template matching params\n  OP_PUBKEYHASH: 253,\n  OP_PUBKEY: 254,\n  OP_INVALIDOPCODE: 255\n}\n\nOpcode.reverseMap = []\n\nfor (var k in Opcode.map) {\n  Opcode.reverseMap[Opcode.map[k]] = k\n}\n\n// Easier access to opcodes\n_.extend(Opcode, Opcode.map)\n\n/**\n * @returns true if opcode is one of OP_0, OP_1, ..., OP_16\n */\nOpcode.isSmallIntOp = function (opcode) {\n  if (opcode instanceof Opcode) {\n    opcode = opcode.toNumber()\n  }\n  return ((opcode === Opcode.map.OP_0) ||\n    ((opcode >= Opcode.map.OP_1) && (opcode <= Opcode.map.OP_16)))\n}\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Script opcode\n */\nOpcode.prototype.inspect = function () {\n  return '<Opcode: ' + this.toString() + ', hex: ' + this.toHex() + ', decimal: ' + this.num + '>'\n}\n\nmodule.exports = Opcode\n","'use strict'\n\nvar Address = require('../address')\nvar BufferReader = require('../encoding/bufferreader')\nvar BufferWriter = require('../encoding/bufferwriter')\nvar Hash = require('../crypto/hash')\nvar Opcode = require('../opcode')\nvar PublicKey = require('../publickey')\nvar Signature = require('../crypto/signature')\nvar Networks = require('../networks')\nvar $ = require('../util/preconditions')\nvar _ = require('../util/_')\nvar errors = require('../errors')\nvar buffer = require('buffer')\nvar JSUtil = require('../util/js')\n\n/**\n * A bitcoin transaction script. Each transaction's inputs and outputs\n * has a script that is evaluated to validate it's spending.\n *\n * See https://en.bitcoin.it/wiki/Script\n *\n * @constructor\n * @param {Object|string|Buffer=} from optional data to populate script\n */\nvar Script = function Script (from) {\n  if (!(this instanceof Script)) {\n    return new Script(from)\n  }\n  this.chunks = []\n\n  if (Buffer.isBuffer(from)) {\n    return Script.fromBuffer(from)\n  } else if (from instanceof Address) {\n    return Script.fromAddress(from)\n  } else if (from instanceof Script) {\n    return Script.fromBuffer(from.toBuffer())\n  } else if (_.isString(from)) {\n    return Script.fromString(from)\n  } else if (_.isObject(from) && _.isArray(from.chunks)) {\n    this.set(from)\n  }\n}\n\nScript.prototype.set = function (obj) {\n  $.checkArgument(_.isObject(obj))\n  $.checkArgument(_.isArray(obj.chunks))\n  this.chunks = obj.chunks\n  return this\n}\n\nScript.fromBuffer = function (buffer) {\n  var script = new Script()\n  script.chunks = []\n\n  var br = new BufferReader(buffer)\n  while (!br.finished()) {\n    try {\n      var opcodenum = br.readUInt8()\n\n      var len, buf\n      if (opcodenum > 0 && opcodenum < Opcode.OP_PUSHDATA1) {\n        len = opcodenum\n        script.chunks.push({\n          buf: br.read(len),\n          len: len,\n          opcodenum: opcodenum\n        })\n      } else if (opcodenum === Opcode.OP_PUSHDATA1) {\n        len = br.readUInt8()\n        buf = br.read(len)\n        script.chunks.push({\n          buf: buf,\n          len: len,\n          opcodenum: opcodenum\n        })\n      } else if (opcodenum === Opcode.OP_PUSHDATA2) {\n        len = br.readUInt16LE()\n        buf = br.read(len)\n        script.chunks.push({\n          buf: buf,\n          len: len,\n          opcodenum: opcodenum\n        })\n      } else if (opcodenum === Opcode.OP_PUSHDATA4) {\n        len = br.readUInt32LE()\n        buf = br.read(len)\n        script.chunks.push({\n          buf: buf,\n          len: len,\n          opcodenum: opcodenum\n        })\n      } else {\n        script.chunks.push({\n          opcodenum: opcodenum\n        })\n      }\n    } catch (e) {\n      if (e instanceof RangeError) {\n        throw new errors.Script.InvalidBuffer(buffer.toString('hex'))\n      }\n      throw e\n    }\n  }\n\n  return script\n}\n\nScript.prototype.toBuffer = function () {\n  var bw = new BufferWriter()\n\n  for (var i = 0; i < this.chunks.length; i++) {\n    var chunk = this.chunks[i]\n    var opcodenum = chunk.opcodenum\n    bw.writeUInt8(chunk.opcodenum)\n    if (chunk.buf) {\n      if (opcodenum < Opcode.OP_PUSHDATA1) {\n        bw.write(chunk.buf)\n      } else if (opcodenum === Opcode.OP_PUSHDATA1) {\n        bw.writeUInt8(chunk.len)\n        bw.write(chunk.buf)\n      } else if (opcodenum === Opcode.OP_PUSHDATA2) {\n        bw.writeUInt16LE(chunk.len)\n        bw.write(chunk.buf)\n      } else if (opcodenum === Opcode.OP_PUSHDATA4) {\n        bw.writeUInt32LE(chunk.len)\n        bw.write(chunk.buf)\n      }\n    }\n  }\n\n  return bw.concat()\n}\n\nScript.fromASM = function (str) {\n  var script = new Script()\n  script.chunks = []\n\n  var tokens = str.split(' ')\n  var i = 0\n  while (i < tokens.length) {\n    var token = tokens[i]\n    var opcode = Opcode(token)\n    var opcodenum = opcode.toNumber()\n\n    // we start with two special cases, 0 and -1, which are handled specially in\n    // toASM. see _chunkToString.\n    if (token === '0') {\n      opcodenum = 0\n      script.chunks.push({\n        opcodenum: opcodenum\n      })\n      i = i + 1\n    } else if (token === '-1') {\n      opcodenum = Opcode.OP_1NEGATE\n      script.chunks.push({\n        opcodenum: opcodenum\n      })\n      i = i + 1\n    } else if (_.isUndefined(opcodenum)) {\n      var buf = Buffer.from(tokens[i], 'hex')\n      if (buf.toString('hex') !== tokens[i]) {\n        throw new Error('invalid hex string in script')\n      }\n      var len = buf.length\n      if (len >= 0 && len < Opcode.OP_PUSHDATA1) {\n        opcodenum = len\n      } else if (len < Math.pow(2, 8)) {\n        opcodenum = Opcode.OP_PUSHDATA1\n      } else if (len < Math.pow(2, 16)) {\n        opcodenum = Opcode.OP_PUSHDATA2\n      } else if (len < Math.pow(2, 32)) {\n        opcodenum = Opcode.OP_PUSHDATA4\n      }\n      script.chunks.push({\n        buf: buf,\n        len: buf.length,\n        opcodenum: opcodenum\n      })\n      i = i + 1\n    } else {\n      script.chunks.push({\n        opcodenum: opcodenum\n      })\n      i = i + 1\n    }\n  }\n  return script\n}\n\nScript.fromHex = function (str) {\n  return new Script(buffer.Buffer.from(str, 'hex'))\n}\n\nScript.fromString = function (str) {\n  if (JSUtil.isHexa(str) || str.length === 0) {\n    return new Script(buffer.Buffer.from(str, 'hex'))\n  }\n  var script = new Script()\n  script.chunks = []\n\n  var tokens = str.split(' ')\n  var i = 0\n  while (i < tokens.length) {\n    var token = tokens[i]\n    var opcode = Opcode(token)\n    var opcodenum = opcode.toNumber()\n\n    if (_.isUndefined(opcodenum)) {\n      opcodenum = parseInt(token)\n      if (opcodenum > 0 && opcodenum < Opcode.OP_PUSHDATA1) {\n        script.chunks.push({\n          buf: Buffer.from(tokens[i + 1].slice(2), 'hex'),\n          len: opcodenum,\n          opcodenum: opcodenum\n        })\n        i = i + 2\n      } else {\n        throw new Error('Invalid script: ' + JSON.stringify(str))\n      }\n    } else if (opcodenum === Opcode.OP_PUSHDATA1 ||\n      opcodenum === Opcode.OP_PUSHDATA2 ||\n      opcodenum === Opcode.OP_PUSHDATA4) {\n      if (tokens[i + 2].slice(0, 2) !== '0x') {\n        throw new Error('Pushdata data must start with 0x')\n      }\n      script.chunks.push({\n        buf: Buffer.from(tokens[i + 2].slice(2), 'hex'),\n        len: parseInt(tokens[i + 1]),\n        opcodenum: opcodenum\n      })\n      i = i + 3\n    } else {\n      script.chunks.push({\n        opcodenum: opcodenum\n      })\n      i = i + 1\n    }\n  }\n  return script\n}\n\nScript.prototype._chunkToString = function (chunk, type) {\n  var opcodenum = chunk.opcodenum\n  var asm = (type === 'asm')\n  var str = ''\n  if (!chunk.buf) {\n    // no data chunk\n    if (typeof Opcode.reverseMap[opcodenum] !== 'undefined') {\n      if (asm) {\n        // A few cases where the opcode name differs from reverseMap\n        // aside from 1 to 16 data pushes.\n        if (opcodenum === 0) {\n          // OP_0 -> 0\n          str = str + ' 0'\n        } else if (opcodenum === 79) {\n          // OP_1NEGATE -> 1\n          str = str + ' -1'\n        } else {\n          str = str + ' ' + Opcode(opcodenum).toString()\n        }\n      } else {\n        str = str + ' ' + Opcode(opcodenum).toString()\n      }\n    } else {\n      var numstr = opcodenum.toString(16)\n      if (numstr.length % 2 !== 0) {\n        numstr = '0' + numstr\n      }\n      if (asm) {\n        str = str + ' ' + numstr\n      } else {\n        str = str + ' ' + '0x' + numstr\n      }\n    }\n  } else {\n    // data chunk\n    if (!asm && (opcodenum === Opcode.OP_PUSHDATA1 ||\n      opcodenum === Opcode.OP_PUSHDATA2 ||\n      opcodenum === Opcode.OP_PUSHDATA4)) {\n      str = str + ' ' + Opcode(opcodenum).toString()\n    }\n    if (chunk.len > 0) {\n      if (asm) {\n        str = str + ' ' + chunk.buf.toString('hex')\n      } else {\n        str = str + ' ' + chunk.len + ' ' + '0x' + chunk.buf.toString('hex')\n      }\n    }\n  }\n  return str\n}\n\nScript.prototype.toASM = function () {\n  var str = ''\n  for (var i = 0; i < this.chunks.length; i++) {\n    var chunk = this.chunks[i]\n    str += this._chunkToString(chunk, 'asm')\n  }\n\n  return str.substr(1)\n}\n\nScript.prototype.toString = function () {\n  var str = ''\n  for (var i = 0; i < this.chunks.length; i++) {\n    var chunk = this.chunks[i]\n    str += this._chunkToString(chunk)\n  }\n\n  return str.substr(1)\n}\n\nScript.prototype.toHex = function () {\n  return this.toBuffer().toString('hex')\n}\n\nScript.prototype.inspect = function () {\n  return '<Script: ' + this.toString() + '>'\n}\n\n// script classification methods\n\n/**\n * @returns {boolean} if this is a pay to pubkey hash output script\n */\nScript.prototype.isPublicKeyHashOut = function () {\n  return !!(this.chunks.length === 5 &&\n    this.chunks[0].opcodenum === Opcode.OP_DUP &&\n    this.chunks[1].opcodenum === Opcode.OP_HASH160 &&\n    this.chunks[2].buf &&\n    this.chunks[2].buf.length === 20 &&\n    this.chunks[3].opcodenum === Opcode.OP_EQUALVERIFY &&\n    this.chunks[4].opcodenum === Opcode.OP_CHECKSIG)\n}\n\n/**\n * @returns {boolean} if this is a pay to public key hash input script\n */\nScript.prototype.isPublicKeyHashIn = function () {\n  if (this.chunks.length === 2) {\n    var signatureBuf = this.chunks[0].buf\n    var pubkeyBuf = this.chunks[1].buf\n    if (signatureBuf &&\n      signatureBuf.length &&\n      signatureBuf[0] === 0x30 &&\n      pubkeyBuf &&\n      pubkeyBuf.length\n    ) {\n      var version = pubkeyBuf[0]\n      if ((version === 0x04 ||\n        version === 0x06 ||\n        version === 0x07) && pubkeyBuf.length === 65) {\n        return true\n      } else if ((version === 0x03 || version === 0x02) && pubkeyBuf.length === 33) {\n        return true\n      }\n    }\n  }\n  return false\n}\n\nScript.prototype.getPublicKey = function () {\n  $.checkState(this.isPublicKeyOut(), 'Can\\'t retrieve PublicKey from a non-PK output')\n  return this.chunks[0].buf\n}\n\nScript.prototype.getPublicKeyHash = function () {\n  $.checkState(this.isPublicKeyHashOut(), 'Can\\'t retrieve PublicKeyHash from a non-PKH output')\n  return this.chunks[2].buf\n}\n\n/**\n * @returns {boolean} if this is a public key output script\n */\nScript.prototype.isPublicKeyOut = function () {\n  if (this.chunks.length === 2 &&\n    this.chunks[0].buf &&\n    this.chunks[0].buf.length &&\n    this.chunks[1].opcodenum === Opcode.OP_CHECKSIG) {\n    var pubkeyBuf = this.chunks[0].buf\n    var version = pubkeyBuf[0]\n    var isVersion = false\n    if ((version === 0x04 ||\n      version === 0x06 ||\n      version === 0x07) && pubkeyBuf.length === 65) {\n      isVersion = true\n    } else if ((version === 0x03 || version === 0x02) && pubkeyBuf.length === 33) {\n      isVersion = true\n    }\n    if (isVersion) {\n      return PublicKey.isValid(pubkeyBuf)\n    }\n  }\n  return false\n}\n\n/**\n * @returns {boolean} if this is a pay to public key input script\n */\nScript.prototype.isPublicKeyIn = function () {\n  if (this.chunks.length === 1) {\n    var signatureBuf = this.chunks[0].buf\n    if (signatureBuf &&\n      signatureBuf.length &&\n      signatureBuf[0] === 0x30) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @returns {boolean} if this is a p2sh output script\n */\nScript.prototype.isScriptHashOut = function () {\n  var buf = this.toBuffer()\n  return (buf.length === 23 &&\n    buf[0] === Opcode.OP_HASH160 &&\n    buf[1] === 0x14 &&\n    buf[buf.length - 1] === Opcode.OP_EQUAL)\n}\n\n/**\n * @returns {boolean} if this is a p2sh input script\n * Note that these are frequently indistinguishable from pubkeyhashin\n */\nScript.prototype.isScriptHashIn = function () {\n  if (this.chunks.length <= 1) {\n    return false\n  }\n  var redeemChunk = this.chunks[this.chunks.length - 1]\n  var redeemBuf = redeemChunk.buf\n  if (!redeemBuf) {\n    return false\n  }\n\n  var redeemScript\n  try {\n    redeemScript = Script.fromBuffer(redeemBuf)\n  } catch (e) {\n    if (e instanceof errors.Script.InvalidBuffer) {\n      return false\n    }\n    throw e\n  }\n  var type = redeemScript.classify()\n  return type !== Script.types.UNKNOWN\n}\n\n/**\n * @returns {boolean} if this is a mutlsig output script\n */\nScript.prototype.isMultisigOut = function () {\n  return (this.chunks.length > 3 &&\n    Opcode.isSmallIntOp(this.chunks[0].opcodenum) &&\n    this.chunks.slice(1, this.chunks.length - 2).every(function (obj) {\n      return obj.buf && Buffer.isBuffer(obj.buf)\n    }) &&\n    Opcode.isSmallIntOp(this.chunks[this.chunks.length - 2].opcodenum) &&\n    this.chunks[this.chunks.length - 1].opcodenum === Opcode.OP_CHECKMULTISIG)\n}\n\n/**\n * @returns {boolean} if this is a multisig input script\n */\nScript.prototype.isMultisigIn = function () {\n  return this.chunks.length >= 2 &&\n    this.chunks[0].opcodenum === 0 &&\n    this.chunks.slice(1, this.chunks.length).every(function (obj) {\n      return obj.buf &&\n        Buffer.isBuffer(obj.buf) &&\n        Signature.isTxDER(obj.buf)\n    })\n}\n\n/**\n * @returns {boolean} true if this is a valid standard OP_RETURN output\n */\nScript.prototype.isDataOut = function () {\n  var step1 = this.chunks.length >= 1 &&\n    this.chunks[0].opcodenum === Opcode.OP_RETURN\n  if (!step1) return false\n  var chunks = this.chunks.slice(1)\n  var script2 = new Script({ chunks: chunks })\n  return script2.isPushOnly()\n}\n\nScript.prototype.isSafeDataOut = function () {\n  if (this.chunks.length < 2) {\n    return false\n  }\n  if (this.chunks[0].opcodenum !== Opcode.OP_FALSE) {\n    return false\n  }\n  var chunks = this.chunks.slice(1)\n  var script2 = new Script({ chunks })\n  return script2.isDataOut()\n}\n\n/**\n * Retrieve the associated data for this script.\n * In the case of a pay to public key hash or P2SH, return the hash.\n * In the case of safe OP_RETURN data, return an array of buffers\n * In the case of a standard deprecated OP_RETURN, return the data\n * @returns {Buffer}\n */\nScript.prototype.getData = function () {\n  if (this.isSafeDataOut()) {\n    var chunks = this.chunks.slice(2)\n    var buffers = chunks.map(chunk => chunk.buf)\n    return buffers\n  }\n  if (this.isDataOut() || this.isScriptHashOut()) {\n    if (_.isUndefined(this.chunks[1])) {\n      return Buffer.alloc(0)\n    } else {\n      return Buffer.from(this.chunks[1].buf)\n    }\n  }\n  if (this.isPublicKeyHashOut()) {\n    return Buffer.from(this.chunks[2].buf)\n  }\n  throw new Error('Unrecognized script type to get data from')\n}\n\n/**\n * @returns {boolean} if the script is only composed of data pushing\n * opcodes or small int opcodes (OP_0, OP_1, ..., OP_16)\n */\nScript.prototype.isPushOnly = function () {\n  return _.every(this.chunks, function (chunk) {\n    return chunk.opcodenum <= Opcode.OP_16 ||\n      chunk.opcodenum === Opcode.OP_PUSHDATA1 ||\n      chunk.opcodenum === Opcode.OP_PUSHDATA2 ||\n      chunk.opcodenum === Opcode.OP_PUSHDATA4\n  })\n}\n\nScript.types = {}\nScript.types.UNKNOWN = 'Unknown'\nScript.types.PUBKEY_OUT = 'Pay to public key'\nScript.types.PUBKEY_IN = 'Spend from public key'\nScript.types.PUBKEYHASH_OUT = 'Pay to public key hash'\nScript.types.PUBKEYHASH_IN = 'Spend from public key hash'\nScript.types.SCRIPTHASH_OUT = 'Pay to script hash'\nScript.types.SCRIPTHASH_IN = 'Spend from script hash'\nScript.types.MULTISIG_OUT = 'Pay to multisig'\nScript.types.MULTISIG_IN = 'Spend from multisig'\nScript.types.DATA_OUT = 'Data push'\nScript.types.SAFE_DATA_OUT = 'Safe data push'\n\nScript.OP_RETURN_STANDARD_SIZE = 220\n\n/**\n * @returns {object} The Script type if it is a known form,\n * or Script.UNKNOWN if it isn't\n */\nScript.prototype.classify = function () {\n  if (this._isInput) {\n    return this.classifyInput()\n  } else if (this._isOutput) {\n    return this.classifyOutput()\n  } else {\n    var outputType = this.classifyOutput()\n    return outputType !== Script.types.UNKNOWN ? outputType : this.classifyInput()\n  }\n}\n\nScript.outputIdentifiers = {}\nScript.outputIdentifiers.PUBKEY_OUT = Script.prototype.isPublicKeyOut\nScript.outputIdentifiers.PUBKEYHASH_OUT = Script.prototype.isPublicKeyHashOut\nScript.outputIdentifiers.MULTISIG_OUT = Script.prototype.isMultisigOut\nScript.outputIdentifiers.SCRIPTHASH_OUT = Script.prototype.isScriptHashOut\nScript.outputIdentifiers.DATA_OUT = Script.prototype.isDataOut\nScript.outputIdentifiers.SAFE_DATA_OUT = Script.prototype.isSafeDataOut\n\n/**\n * @returns {object} The Script type if it is a known form,\n * or Script.UNKNOWN if it isn't\n */\nScript.prototype.classifyOutput = function () {\n  for (var type in Script.outputIdentifiers) {\n    if (Script.outputIdentifiers[type].bind(this)()) {\n      return Script.types[type]\n    }\n  }\n  return Script.types.UNKNOWN\n}\n\nScript.inputIdentifiers = {}\nScript.inputIdentifiers.PUBKEY_IN = Script.prototype.isPublicKeyIn\nScript.inputIdentifiers.PUBKEYHASH_IN = Script.prototype.isPublicKeyHashIn\nScript.inputIdentifiers.MULTISIG_IN = Script.prototype.isMultisigIn\nScript.inputIdentifiers.SCRIPTHASH_IN = Script.prototype.isScriptHashIn\n\n/**\n * @returns {object} The Script type if it is a known form,\n * or Script.UNKNOWN if it isn't\n */\nScript.prototype.classifyInput = function () {\n  for (var type in Script.inputIdentifiers) {\n    if (Script.inputIdentifiers[type].bind(this)()) {\n      return Script.types[type]\n    }\n  }\n  return Script.types.UNKNOWN\n}\n\n/**\n * @returns {boolean} if script is one of the known types\n */\nScript.prototype.isStandard = function () {\n  // TODO: Add BIP62 compliance\n  return this.classify() !== Script.types.UNKNOWN\n}\n\n// Script construction methods\n\n/**\n * Adds a script element at the start of the script.\n * @param {*} obj a string, number, Opcode, Buffer, or object to add\n * @returns {Script} this script instance\n */\nScript.prototype.prepend = function (obj) {\n  this._addByType(obj, true)\n  return this\n}\n\n/**\n * Compares a script with another script\n */\nScript.prototype.equals = function (script) {\n  $.checkState(script instanceof Script, 'Must provide another script')\n  if (this.chunks.length !== script.chunks.length) {\n    return false\n  }\n  var i\n  for (i = 0; i < this.chunks.length; i++) {\n    if (Buffer.isBuffer(this.chunks[i].buf) && !Buffer.isBuffer(script.chunks[i].buf)) {\n      return false\n    }\n    if (Buffer.isBuffer(this.chunks[i].buf) && !this.chunks[i].buf.equals(script.chunks[i].buf)) {\n      return false\n    } else if (this.chunks[i].opcodenum !== script.chunks[i].opcodenum) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * Adds a script element to the end of the script.\n *\n * @param {*} obj a string, number, Opcode, Buffer, or object to add\n * @returns {Script} this script instance\n *\n */\nScript.prototype.add = function (obj) {\n  this._addByType(obj, false)\n  return this\n}\n\nScript.prototype._addByType = function (obj, prepend) {\n  if (typeof obj === 'string') {\n    this._addOpcode(obj, prepend)\n  } else if (typeof obj === 'number') {\n    this._addOpcode(obj, prepend)\n  } else if (obj instanceof Opcode) {\n    this._addOpcode(obj, prepend)\n  } else if (Buffer.isBuffer(obj)) {\n    this._addBuffer(obj, prepend)\n  } else if (obj instanceof Script) {\n    this.chunks = this.chunks.concat(obj.chunks)\n  } else if (typeof obj === 'object') {\n    this._insertAtPosition(obj, prepend)\n  } else {\n    throw new Error('Invalid script chunk')\n  }\n}\n\nScript.prototype._insertAtPosition = function (op, prepend) {\n  if (prepend) {\n    this.chunks.unshift(op)\n  } else {\n    this.chunks.push(op)\n  }\n}\n\nScript.prototype._addOpcode = function (opcode, prepend) {\n  var op\n  if (typeof opcode === 'number') {\n    op = opcode\n  } else if (opcode instanceof Opcode) {\n    op = opcode.toNumber()\n  } else {\n    op = Opcode(opcode).toNumber()\n  }\n  this._insertAtPosition({\n    opcodenum: op\n  }, prepend)\n  return this\n}\n\nScript.prototype._addBuffer = function (buf, prepend) {\n  var opcodenum\n  var len = buf.length\n  if (len >= 0 && len < Opcode.OP_PUSHDATA1) {\n    opcodenum = len\n  } else if (len < Math.pow(2, 8)) {\n    opcodenum = Opcode.OP_PUSHDATA1\n  } else if (len < Math.pow(2, 16)) {\n    opcodenum = Opcode.OP_PUSHDATA2\n  } else if (len < Math.pow(2, 32)) {\n    opcodenum = Opcode.OP_PUSHDATA4\n  } else {\n    throw new Error('You can\\'t push that much data')\n  }\n  this._insertAtPosition({\n    buf: buf,\n    len: len,\n    opcodenum: opcodenum\n  }, prepend)\n  return this\n}\n\nScript.prototype.removeCodeseparators = function () {\n  var chunks = []\n  for (var i = 0; i < this.chunks.length; i++) {\n    if (this.chunks[i].opcodenum !== Opcode.OP_CODESEPARATOR) {\n      chunks.push(this.chunks[i])\n    }\n  }\n  this.chunks = chunks\n  return this\n}\n\n/**\n * If the script does not contain any OP_CODESEPARATOR, Return all scripts\n * If the script contains any OP_CODESEPARATOR, the scriptCode is the script but removing everything up to and including the last executed OP_CODESEPARATOR before the signature checking opcode being executed\n * @param {n} The {n}th codeseparator in the script\n *\n * @returns {Script} Subset of script starting at the {n}th codeseparator\n */\nScript.prototype.subScript = function (n) {\n  var idx = 0\n\n  for (var i = 0; i < this.chunks.length; i++) {\n    if (this.chunks[i].opcodenum === Opcode.OP_CODESEPARATOR) {\n      if (idx === n) {\n        return new Script().set({\n          chunks: this.chunks.slice(i + 1)\n        })\n      } else {\n        idx++\n      }\n    }\n  }\n\n  return new Script().set({\n    chunks: this.chunks.slice(0)\n  })\n}\n\n// high level script builder methods\n\n/**\n * @returns {Script} a new Multisig output script for given public keys,\n * requiring m of those public keys to spend\n * @param {PublicKey[]} publicKeys - list of all public keys controlling the output\n * @param {number} threshold - amount of required signatures to spend the output\n * @param {Object=} opts - Several options:\n *        - noSorting: defaults to false, if true, don't sort the given\n *                      public keys before creating the script\n */\nScript.buildMultisigOut = function (publicKeys, threshold, opts) {\n  $.checkArgument(threshold <= publicKeys.length,\n    'Number of required signatures must be less than or equal to the number of public keys')\n  opts = opts || {}\n  var script = new Script()\n  script.add(Opcode.smallInt(threshold))\n  publicKeys = _.map(publicKeys, PublicKey)\n  var sorted = publicKeys\n  if (!opts.noSorting) {\n    sorted = publicKeys.map(k => k.toString('hex')).sort().map(k => new PublicKey(k))\n  }\n  for (var i = 0; i < sorted.length; i++) {\n    var publicKey = sorted[i]\n    script.add(publicKey.toBuffer())\n  }\n  script.add(Opcode.smallInt(publicKeys.length))\n  script.add(Opcode.OP_CHECKMULTISIG)\n  return script\n}\n\n/**\n * A new Multisig input script for the given public keys, requiring m of those public keys to spend\n *\n * @param {PublicKey[]} pubkeys list of all public keys controlling the output\n * @param {number} threshold amount of required signatures to spend the output\n * @param {Array} signatures and array of signature buffers to append to the script\n * @param {Object=} opts\n * @param {boolean=} opts.noSorting don't sort the given public keys before creating the script (false by default)\n * @param {Script=} opts.cachedMultisig don't recalculate the redeemScript\n *\n * @returns {Script}\n */\nScript.buildMultisigIn = function (pubkeys, threshold, signatures, opts) {\n  $.checkArgument(_.isArray(pubkeys))\n  $.checkArgument(_.isNumber(threshold))\n  $.checkArgument(_.isArray(signatures))\n  opts = opts || {}\n  var s = new Script()\n  s.add(Opcode.OP_0)\n  _.each(signatures, function (signature) {\n    $.checkArgument(Buffer.isBuffer(signature), 'Signatures must be an array of Buffers')\n    // TODO: allow signatures to be an array of Signature objects\n    s.add(signature)\n  })\n  return s\n}\n\n/**\n * A new P2SH Multisig input script for the given public keys, requiring m of those public keys to spend\n *\n * @param {PublicKey[]} pubkeys list of all public keys controlling the output\n * @param {number} threshold amount of required signatures to spend the output\n * @param {Array} signatures and array of signature buffers to append to the script\n * @param {Object=} opts\n * @param {boolean=} opts.noSorting don't sort the given public keys before creating the script (false by default)\n * @param {Script=} opts.cachedMultisig don't recalculate the redeemScript\n *\n * @returns {Script}\n */\nScript.buildP2SHMultisigIn = function (pubkeys, threshold, signatures, opts) {\n  $.checkArgument(_.isArray(pubkeys))\n  $.checkArgument(_.isNumber(threshold))\n  $.checkArgument(_.isArray(signatures))\n  opts = opts || {}\n  var s = new Script()\n  s.add(Opcode.OP_0)\n  _.each(signatures, function (signature) {\n    $.checkArgument(Buffer.isBuffer(signature), 'Signatures must be an array of Buffers')\n    // TODO: allow signatures to be an array of Signature objects\n    s.add(signature)\n  })\n  s.add((opts.cachedMultisig || Script.buildMultisigOut(pubkeys, threshold, opts)).toBuffer())\n  return s\n}\n\n/**\n * @returns {Script} a new pay to public key hash output for the given\n * address or public key\n * @param {(Address|PublicKey)} to - destination address or public key\n */\nScript.buildPublicKeyHashOut = function (to) {\n  $.checkArgument(!_.isUndefined(to))\n  $.checkArgument(to instanceof PublicKey || to instanceof Address || _.isString(to))\n  if (to instanceof PublicKey) {\n    to = to.toAddress()\n  } else if (_.isString(to)) {\n    to = new Address(to)\n  }\n  var s = new Script()\n  s.add(Opcode.OP_DUP)\n    .add(Opcode.OP_HASH160)\n    .add(to.hashBuffer)\n    .add(Opcode.OP_EQUALVERIFY)\n    .add(Opcode.OP_CHECKSIG)\n  s._network = to.network\n  return s\n}\n\n/**\n * @returns {Script} a new pay to public key output for the given\n *  public key\n */\nScript.buildPublicKeyOut = function (pubkey) {\n  $.checkArgument(pubkey instanceof PublicKey)\n  var s = new Script()\n  s.add(pubkey.toBuffer())\n    .add(Opcode.OP_CHECKSIG)\n  return s\n}\n\n/**\n * @returns {Script} a new OP_RETURN script with data\n * @param {(string|Buffer|Array)} data - the data to embed in the output - it is a string, buffer, or array of strings or buffers\n * @param {(string)} encoding - the type of encoding of the string(s)\n */\nScript.buildDataOut = function (data, encoding) {\n  $.checkArgument(_.isUndefined(data) || _.isString(data) || _.isArray(data) || Buffer.isBuffer(data))\n  var datas = data\n  if (!_.isArray(datas)) {\n    datas = [data]\n  }\n  var s = new Script()\n  s.add(Opcode.OP_RETURN)\n  for (let data of datas) {\n    $.checkArgument(_.isUndefined(data) || _.isString(data) || Buffer.isBuffer(data))\n    if (_.isString(data)) {\n      data = Buffer.from(data, encoding)\n    }\n    if (!_.isUndefined(data)) {\n      s.add(data)\n    }\n  }\n  return s\n}\n\n/**\n * @returns {Script} a new OP_RETURN script with data\n * @param {(string|Buffer|Array)} data - the data to embed in the output - it is a string, buffer, or array of strings or buffers\n * @param {(string)} encoding - the type of encoding of the string(s)\n */\nScript.buildSafeDataOut = function (data, encoding) {\n  var s2 = Script.buildDataOut(data, encoding)\n  var s1 = new Script()\n  s1.add(Opcode.OP_FALSE)\n  s1.add(s2)\n  return s1\n}\n\n/**\n * @param {Script|Address} script - the redeemScript for the new p2sh output.\n *    It can also be a p2sh address\n * @returns {Script} new pay to script hash script for given script\n */\nScript.buildScriptHashOut = function (script) {\n  $.checkArgument(script instanceof Script ||\n    (script instanceof Address && script.isPayToScriptHash()))\n  var s = new Script()\n  s.add(Opcode.OP_HASH160)\n    .add(script instanceof Address ? script.hashBuffer : Hash.sha256ripemd160(script.toBuffer()))\n    .add(Opcode.OP_EQUAL)\n\n  s._network = script._network || script.network\n  return s\n}\n\n/**\n * Builds a scriptSig (a script for an input) that signs a public key output script.\n *\n * @param {Signature|Buffer} signature - a Signature object, or the signature in DER canonical encoding\n * @param {number=} sigtype - the type of the signature (defaults to SIGHASH_ALL)\n */\nScript.buildPublicKeyIn = function (signature, sigtype) {\n  $.checkArgument(signature instanceof Signature || Buffer.isBuffer(signature))\n  $.checkArgument(_.isUndefined(sigtype) || _.isNumber(sigtype))\n  if (signature instanceof Signature) {\n    signature = signature.toBuffer()\n  }\n  var script = new Script()\n  script.add(Buffer.concat([\n    signature,\n    Buffer.from([(sigtype || Signature.SIGHASH_ALL) & 0xff])\n  ]))\n  return script\n}\n\n/**\n * Builds a scriptSig (a script for an input) that signs a public key hash\n * output script.\n *\n * @param {Buffer|string|PublicKey} publicKey\n * @param {Signature|Buffer} signature - a Signature object, or the signature in DER canonical encoding\n * @param {number=} sigtype - the type of the signature (defaults to SIGHASH_ALL)\n */\nScript.buildPublicKeyHashIn = function (publicKey, signature, sigtype) {\n  $.checkArgument(signature instanceof Signature || Buffer.isBuffer(signature))\n  $.checkArgument(_.isUndefined(sigtype) || _.isNumber(sigtype))\n  if (signature instanceof Signature) {\n    signature = signature.toBuffer()\n  }\n  var script = new Script()\n    .add(Buffer.concat([\n      signature,\n      Buffer.from([(sigtype || Signature.SIGHASH_ALL) & 0xff])\n    ]))\n    .add(new PublicKey(publicKey).toBuffer())\n  return script\n}\n\n/**\n * @returns {Script} an empty script\n */\nScript.empty = function () {\n  return new Script()\n}\n\n/**\n * @returns {Script} a new pay to script hash script that pays to this script\n */\nScript.prototype.toScriptHashOut = function () {\n  return Script.buildScriptHashOut(this)\n}\n\n/**\n * @return {Script} an output script built from the address\n */\nScript.fromAddress = function (address) {\n  address = Address(address)\n  if (address.isPayToScriptHash()) {\n    return Script.buildScriptHashOut(address)\n  } else if (address.isPayToPublicKeyHash()) {\n    return Script.buildPublicKeyHashOut(address)\n  }\n  throw new errors.Script.UnrecognizedAddress(address)\n}\n\n/**\n * Will return the associated address information object\n * @return {Address|boolean}\n */\nScript.prototype.getAddressInfo = function (opts) {\n  if (this._isInput) {\n    return this._getInputAddressInfo()\n  } else if (this._isOutput) {\n    return this._getOutputAddressInfo()\n  } else {\n    var info = this._getOutputAddressInfo()\n    if (!info) {\n      return this._getInputAddressInfo()\n    }\n    return info\n  }\n}\n\n/**\n * Will return the associated output scriptPubKey address information object\n * @return {Address|boolean}\n * @private\n */\nScript.prototype._getOutputAddressInfo = function () {\n  var info = {}\n  if (this.isScriptHashOut()) {\n    info.hashBuffer = this.getData()\n    info.type = Address.PayToScriptHash\n  } else if (this.isPublicKeyHashOut()) {\n    info.hashBuffer = this.getData()\n    info.type = Address.PayToPublicKeyHash\n  } else {\n    return false\n  }\n  return info\n}\n\n/**\n * Will return the associated input scriptSig address information object\n * @return {Address|boolean}\n * @private\n */\nScript.prototype._getInputAddressInfo = function () {\n  var info = {}\n  if (this.isPublicKeyHashIn()) {\n    // hash the publickey found in the scriptSig\n    info.hashBuffer = Hash.sha256ripemd160(this.chunks[1].buf)\n    info.type = Address.PayToPublicKeyHash\n  } else if (this.isScriptHashIn()) {\n    // hash the redeemscript found at the end of the scriptSig\n    info.hashBuffer = Hash.sha256ripemd160(this.chunks[this.chunks.length - 1].buf)\n    info.type = Address.PayToScriptHash\n  } else {\n    return false\n  }\n  return info\n}\n\n/**\n * @param {Network=} network\n * @return {Address|boolean} the associated address for this script if possible, or false\n */\nScript.prototype.toAddress = function (network) {\n  var info = this.getAddressInfo()\n  if (!info) {\n    return false\n  }\n  info.network = Networks.get(network) || this._network || Networks.defaultNetwork\n  return new Address(info)\n}\n\n/**\n * Analogous to bitcoind's FindAndDelete. Find and delete equivalent chunks,\n * typically used with push data chunks.  Note that this will find and delete\n * not just the same data, but the same data with the same push data op as\n * produced by default. i.e., if a pushdata in a tx does not use the minimal\n * pushdata op, then when you try to remove the data it is pushing, it will not\n * be removed, because they do not use the same pushdata op.\n */\nScript.prototype.findAndDelete = function (script) {\n  var buf = script.toBuffer()\n  var hex = buf.toString('hex')\n  for (var i = 0; i < this.chunks.length; i++) {\n    var script2 = Script({\n      chunks: [this.chunks[i]]\n    })\n    var buf2 = script2.toBuffer()\n    var hex2 = buf2.toString('hex')\n    if (hex === hex2) {\n      this.chunks.splice(i, 1)\n    }\n  }\n  return this\n}\n\n/**\n * Comes from bitcoind's script interpreter CheckMinimalPush function\n * @returns {boolean} if the chunk {i} is the smallest way to push that particular data.\n */\nScript.prototype.checkMinimalPush = function (i) {\n  var chunk = this.chunks[i]\n  var buf = chunk.buf\n  var opcodenum = chunk.opcodenum\n  if (!buf) {\n    return true\n  }\n  if (buf.length === 0) {\n    // Could have used OP_0.\n    return opcodenum === Opcode.OP_0\n  } else if (buf.length === 1 && buf[0] >= 1 && buf[0] <= 16) {\n    // Could have used OP_1 .. OP_16.\n    return opcodenum === Opcode.OP_1 + (buf[0] - 1)\n  } else if (buf.length === 1 && buf[0] === 0x81) {\n    // Could have used OP_1NEGATE\n    return opcodenum === Opcode.OP_1NEGATE\n  } else if (buf.length <= 75) {\n    // Could have used a direct push (opcode indicating number of bytes pushed + those bytes).\n    return opcodenum === buf.length\n  } else if (buf.length <= 255) {\n    // Could have used OP_PUSHDATA.\n    return opcodenum === Opcode.OP_PUSHDATA1\n  } else if (buf.length <= 65535) {\n    // Could have used OP_PUSHDATA2.\n    return opcodenum === Opcode.OP_PUSHDATA2\n  }\n  return true\n}\n\n/**\n * Comes from bitcoind's script DecodeOP_N function\n * @param {number} opcode\n * @returns {number} numeric value in range of 0 to 16\n */\nScript.prototype._decodeOP_N = function (opcode) {\n  if (opcode === Opcode.OP_0) {\n    return 0\n  } else if (opcode >= Opcode.OP_1 && opcode <= Opcode.OP_16) {\n    return opcode - (Opcode.OP_1 - 1)\n  } else {\n    throw new Error('Invalid opcode: ' + JSON.stringify(opcode))\n  }\n}\n\n/**\n * Comes from bitcoind's script GetSigOpCount(boolean) function\n * @param {boolean} use current (true) or pre-version-0.6 (false) logic\n * @returns {number} number of signature operations required by this script\n */\nScript.prototype.getSignatureOperationsCount = function (accurate) {\n  accurate = (_.isUndefined(accurate) ? true : accurate)\n  var self = this\n  var n = 0\n  var lastOpcode = Opcode.OP_INVALIDOPCODE\n  _.each(self.chunks, function getChunk (chunk) {\n    var opcode = chunk.opcodenum\n    if (opcode === Opcode.OP_CHECKSIG || opcode === Opcode.OP_CHECKSIGVERIFY) {\n      n++\n    } else if (opcode === Opcode.OP_CHECKMULTISIG || opcode === Opcode.OP_CHECKMULTISIGVERIFY) {\n      if (accurate && lastOpcode >= Opcode.OP_1 && lastOpcode <= Opcode.OP_16) {\n        n += self._decodeOP_N(lastOpcode)\n      } else {\n        n += 20\n      }\n    }\n    lastOpcode = opcode\n  })\n  return n\n}\n\nmodule.exports = Script\n","'use strict'\n\nvar Stack = function Stack (rawstack, varStack) {\n  this.stack = rawstack\n  this.varStack = varStack || []\n}\n\nmodule.exports = Stack\n\nStack.prototype.pushVar = function (varName) {\n  this.varStack.push(varName || '$tmp')\n}\n\nStack.prototype.popVar = function () {\n  this.varStack.pop()\n}\n\nStack.prototype.push = function (n, varName) {\n  this.pushVar(varName)\n  this.stack.push(n)\n  this.checkConsistency()\n}\n\nStack.prototype.pop = function () {\n  this.popVar()\n  let top = this.stack.pop()\n  this.checkConsistency()\n  return top\n}\n\nStack.prototype.updateTopVars = function (vars) {\n  if (vars.length > this.varStack.length) {\n    throw new Error(`updateTopVars fail, stack: ${this.stack.length},  varStack: ${this.varStack.length}, vars:${vars.length}`)\n  }\n  vars = vars.reverse()\n  this.varStack.splice(this.varStack.length - vars.length, vars.length, ...vars)\n}\n\nStack.prototype.stacktop = function (i) {\n  return this.stack[this.stack.length + i]\n}\n\nStack.prototype.vartop = function (i) {\n  return this.varStack[this.varStack.length + i]\n}\n\nStack.prototype.slice = function (start, end) {\n  return this.stack.slice(start, end)\n}\n\nStack.prototype.splice = function (start, deleteCount, ...items) {\n  this.varStack.splice(start, deleteCount, ...items)\n  return this.stack.splice(start, deleteCount, ...items)\n}\n\nStack.prototype.write = function (i, value) {\n  this.stack[this.stack.length + i] = value\n}\n\nStack.prototype.copy = function () {\n  return new Stack(this.stack.slice() || [], this.varStack.slice() || [])\n}\n\nfunction bytesToHexString (bytearray) {\n  /* eslint-disable no-return-assign */\n  return bytearray.reduce(function (o, c) { return o += ('0' + (c & 0xFF).toString(16)).slice(-2) }, '')\n}\n\nStack.prototype.printVarStack = function () {\n  let array = this.varStack.map((v, i) => ({\n    name: v,\n    value: bytesToHexString(this.rawstack[i].data)\n  }))\n  console.log(JSON.stringify(array, null, 4))\n}\n\nStack.prototype.checkConsistency = function () {\n  if (this.stack.length !== this.varStack.length) {\n    this.printVarStack()\n    throw new Error(`checkConsistency fail, stack: ${this.stack.length}, varStack:${this.varStack.length}`)\n  }\n}\n\nStack.prototype.checkConsistencyWithVars = function (varStack) {\n  if (this.stack.length < varStack.length) {\n    this.printVarStack()\n    throw new Error(`checkConsistencyWithVars fail, stack: ${this.stack.length}, varStack:${varStack.length}`)\n  }\n}\n\nObject.defineProperty(Stack.prototype, 'length', {\n  get: function () {\n    return this.stack.length\n  }\n})\n\nObject.defineProperty(Stack.prototype, 'rawstack', {\n  get: function () {\n    return this.stack\n  }\n})\n","'use strict'\n\nvar BufferWriter = require('./bufferwriter')\nvar BufferReader = require('./bufferreader')\nvar BN = require('../crypto/bn')\n\nvar Varint = function Varint (buf) {\n  if (!(this instanceof Varint)) { return new Varint(buf) }\n  if (Buffer.isBuffer(buf)) {\n    this.buf = buf\n  } else if (typeof buf === 'number') {\n    var num = buf\n    this.fromNumber(num)\n  } else if (buf instanceof BN) {\n    var bn = buf\n    this.fromBN(bn)\n  } else if (buf) {\n    var obj = buf\n    this.set(obj)\n  }\n}\n\nVarint.prototype.set = function (obj) {\n  this.buf = obj.buf || this.buf\n  return this\n}\n\nVarint.prototype.fromString = function (str) {\n  this.set({\n    buf: Buffer.from(str, 'hex')\n  })\n  return this\n}\n\nVarint.prototype.toString = function () {\n  return this.buf.toString('hex')\n}\n\nVarint.prototype.fromBuffer = function (buf) {\n  this.buf = buf\n  return this\n}\n\nVarint.prototype.fromBufferReader = function (br) {\n  this.buf = br.readVarintBuf()\n  return this\n}\n\nVarint.prototype.fromBN = function (bn) {\n  this.buf = BufferWriter().writeVarintBN(bn).concat()\n  return this\n}\n\nVarint.prototype.fromNumber = function (num) {\n  this.buf = BufferWriter().writeVarintNum(num).concat()\n  return this\n}\n\nVarint.prototype.toBuffer = function () {\n  return this.buf\n}\n\nVarint.prototype.toBN = function () {\n  return BufferReader(this.buf).readVarintBN()\n}\n\nVarint.prototype.toNumber = function () {\n  return BufferReader(this.buf).readVarintNum()\n}\n\nmodule.exports = Varint\n","'use strict'\n\nvar _ = require('../util/_')\nvar BN = require('../crypto/bn')\nvar buffer = require('buffer')\nvar JSUtil = require('../util/js')\nvar BufferWriter = require('../encoding/bufferwriter')\nvar Varint = require('../encoding/varint')\nvar Script = require('../script')\nvar $ = require('../util/preconditions')\nvar errors = require('../errors')\n\nvar MAX_SAFE_INTEGER = 0x1fffffffffffff\n\nfunction Output (args) {\n  if (!(this instanceof Output)) {\n    return new Output(args)\n  }\n  if (_.isObject(args)) {\n    this.satoshis = args.satoshis\n    if (Buffer.isBuffer(args.script)) {\n      this._scriptBuffer = args.script\n    } else {\n      var script\n      if (_.isString(args.script) && JSUtil.isHexa(args.script)) {\n        script = buffer.Buffer.from(args.script, 'hex')\n      } else {\n        script = args.script\n      }\n      this.setScript(script)\n    }\n  } else {\n    throw new TypeError('Unrecognized argument for Output')\n  }\n}\n\nObject.defineProperty(Output.prototype, 'script', {\n  configurable: false,\n  enumerable: true,\n  get: function () {\n    if (this._script) {\n      return this._script\n    } else {\n      this.setScriptFromBuffer(this._scriptBuffer)\n      return this._script\n    }\n  }\n})\n\nObject.defineProperty(Output.prototype, 'satoshis', {\n  configurable: false,\n  enumerable: true,\n  get: function () {\n    return this._satoshis\n  },\n  set: function (num) {\n    if (num instanceof BN) {\n      this._satoshisBN = num\n      this._satoshis = num.toNumber()\n    } else if (_.isString(num)) {\n      this._satoshis = parseInt(num)\n      this._satoshisBN = BN.fromNumber(this._satoshis)\n    } else {\n      $.checkArgument(\n        JSUtil.isNaturalNumber(num),\n        'Output satoshis is not a natural number'\n      )\n      this._satoshisBN = BN.fromNumber(num)\n      this._satoshis = num\n    }\n    $.checkState(\n      JSUtil.isNaturalNumber(this._satoshis),\n      'Output satoshis is not a natural number'\n    )\n  }\n})\n\nOutput.prototype.invalidSatoshis = function () {\n  if (this._satoshis > MAX_SAFE_INTEGER) {\n    return 'transaction txout satoshis greater than max safe integer'\n  }\n  if (this._satoshis !== this._satoshisBN.toNumber()) {\n    return 'transaction txout satoshis has corrupted value'\n  }\n  if (this._satoshis < 0) {\n    return 'transaction txout negative'\n  }\n  return false\n}\n\nObject.defineProperty(Output.prototype, 'satoshisBN', {\n  configurable: false,\n  enumerable: true,\n  get: function () {\n    return this._satoshisBN\n  },\n  set: function (num) {\n    this._satoshisBN = num\n    this._satoshis = num.toNumber()\n    $.checkState(\n      JSUtil.isNaturalNumber(this._satoshis),\n      'Output satoshis is not a natural number'\n    )\n  }\n})\n\nOutput.prototype.toObject = Output.prototype.toJSON = function toObject () {\n  var obj = {\n    satoshis: this.satoshis\n  }\n  obj.script = this._scriptBuffer.toString('hex')\n  return obj\n}\n\nOutput.fromObject = function (data) {\n  return new Output(data)\n}\n\nOutput.prototype.setScriptFromBuffer = function (buffer) {\n  this._scriptBuffer = buffer\n  try {\n    this._script = Script.fromBuffer(this._scriptBuffer)\n    this._script._isOutput = true\n  } catch (e) {\n    if (e instanceof errors.Script.InvalidBuffer) {\n      this._script = null\n    } else {\n      throw e\n    }\n  }\n}\n\nOutput.prototype.setScript = function (script) {\n  if (script instanceof Script) {\n    this._scriptBuffer = script.toBuffer()\n    this._script = script\n    this._script._isOutput = true\n  } else if (_.isString(script)) {\n    this._script = Script.fromString(script)\n    this._scriptBuffer = this._script.toBuffer()\n    this._script._isOutput = true\n  } else if (Buffer.isBuffer(script)) {\n    this.setScriptFromBuffer(script)\n  } else {\n    throw new TypeError('Invalid argument type: script')\n  }\n  return this\n}\n\nOutput.prototype.inspect = function () {\n  var scriptStr\n  if (this.script) {\n    scriptStr = this.script.inspect()\n  } else {\n    scriptStr = this._scriptBuffer.toString('hex')\n  }\n  return '<Output (' + this.satoshis + ' sats) ' + scriptStr + '>'\n}\n\nOutput.fromBufferReader = function (br) {\n  var obj = {}\n  obj.satoshis = br.readUInt64LEBN()\n  var size = br.readVarintNum()\n  if (size !== 0) {\n    obj.script = br.read(size)\n  } else {\n    obj.script = buffer.Buffer.from([])\n  }\n  return new Output(obj)\n}\n\nOutput.prototype.toBufferWriter = function (writer) {\n  if (!writer) {\n    writer = new BufferWriter()\n  }\n  writer.writeUInt64LEBN(this._satoshisBN)\n  var script = this._scriptBuffer\n  writer.writeVarintNum(script.length)\n  writer.write(script)\n  return writer\n}\n\n// 8    value\n// ???  script size (VARINT)\n// ???  script\nOutput.prototype.getSize = function () {\n  var scriptSize = this.script.toBuffer().length\n  var varintSize = Varint(scriptSize).toBuffer().length\n  return 8 + varintSize + scriptSize\n}\n\nmodule.exports = Output\n","'use strict'\n\nvar _ = require('../../util/_')\nvar $ = require('../../util/preconditions')\nvar errors = require('../../errors')\nvar BufferWriter = require('../../encoding/bufferwriter')\nvar buffer = require('buffer')\nvar JSUtil = require('../../util/js')\nvar Script = require('../../script')\nvar Sighash = require('../sighash')\nvar Output = require('../output')\n\nvar MAXINT = 0xffffffff // Math.pow(2, 32) - 1;\nvar DEFAULT_RBF_SEQNUMBER = MAXINT - 2\nvar DEFAULT_SEQNUMBER = MAXINT\nvar DEFAULT_LOCKTIME_SEQNUMBER = MAXINT - 1\n\nfunction Input (params) {\n  if (!(this instanceof Input)) {\n    return new Input(params)\n  }\n  if (params) {\n    return this._fromObject(params)\n  }\n}\n\nInput.MAXINT = MAXINT\nInput.DEFAULT_SEQNUMBER = DEFAULT_SEQNUMBER\nInput.DEFAULT_LOCKTIME_SEQNUMBER = DEFAULT_LOCKTIME_SEQNUMBER\nInput.DEFAULT_RBF_SEQNUMBER = DEFAULT_RBF_SEQNUMBER\n// txid + output index + sequence number\nInput.BASE_SIZE = 32 + 4 + 4\n\nObject.defineProperty(Input.prototype, 'script', {\n  configurable: false,\n  enumerable: true,\n  get: function () {\n    if (this.isNull()) {\n      return null\n    }\n    if (!this._script) {\n      this._script = new Script(this._scriptBuffer)\n      this._script._isInput = true\n    }\n    return this._script\n  }\n})\n\nInput.fromObject = function (obj) {\n  $.checkArgument(_.isObject(obj))\n  var input = new Input()\n  return input._fromObject(obj)\n}\n\nInput.prototype._fromObject = function (params) {\n  var prevTxId\n  if (_.isString(params.prevTxId) && JSUtil.isHexa(params.prevTxId)) {\n    prevTxId = buffer.Buffer.from(params.prevTxId, 'hex')\n  } else {\n    prevTxId = params.prevTxId\n  }\n  this.output = params.output\n    ? (params.output instanceof Output ? params.output : new Output(params.output)) : undefined\n  this.prevTxId = prevTxId || params.txidbuf\n  this.outputIndex = _.isUndefined(params.outputIndex) ? params.txoutnum : params.outputIndex\n  this.sequenceNumber = _.isUndefined(params.sequenceNumber)\n    ? (_.isUndefined(params.seqnum) ? DEFAULT_SEQNUMBER : params.seqnum) : params.sequenceNumber\n  if (_.isUndefined(params.script) && _.isUndefined(params.scriptBuffer)) {\n    throw new errors.Transaction.Input.MissingScript()\n  }\n  this.setScript(params.scriptBuffer || params.script)\n  return this\n}\n\nInput.prototype.toObject = Input.prototype.toJSON = function toObject () {\n  var obj = {\n    prevTxId: this.prevTxId.toString('hex'),\n    outputIndex: this.outputIndex,\n    sequenceNumber: this.sequenceNumber,\n    script: this._scriptBuffer.toString('hex')\n  }\n  // add human readable form if input contains valid script\n  if (this.script) {\n    obj.scriptString = this.script.toString()\n  }\n  if (this.output) {\n    obj.output = this.output.toObject()\n  }\n  return obj\n}\n\nInput.fromBufferReader = function (br) {\n  var input = new Input()\n  input.prevTxId = br.readReverse(32)\n  input.outputIndex = br.readUInt32LE()\n  input._scriptBuffer = br.readVarLengthBuffer()\n  input.sequenceNumber = br.readUInt32LE()\n  // TODO: return different classes according to which input it is\n  // e.g: CoinbaseInput, PublicKeyHashInput, MultiSigScriptHashInput, etc.\n  return input\n}\n\nInput.prototype.toBufferWriter = function (writer) {\n  if (!writer) {\n    writer = new BufferWriter()\n  }\n  writer.writeReverse(this.prevTxId)\n  writer.writeUInt32LE(this.outputIndex)\n  var script = this._scriptBuffer\n  writer.writeVarintNum(script.length)\n  writer.write(script)\n  writer.writeUInt32LE(this.sequenceNumber)\n  return writer\n}\n\nInput.prototype.setScript = function (script) {\n  this._script = null\n  if (script instanceof Script) {\n    this._script = script\n    this._script._isInput = true\n    this._scriptBuffer = script.toBuffer()\n  } else if (script === null) {\n    this._script = Script.empty()\n    this._script._isInput = true\n    this._scriptBuffer = this._script.toBuffer()\n  } else if (JSUtil.isHexa(script)) {\n    // hex string script\n    this._scriptBuffer = buffer.Buffer.from(script, 'hex')\n  } else if (_.isString(script)) {\n    // human readable string script\n    this._script = new Script(script)\n    this._script._isInput = true\n    this._scriptBuffer = this._script.toBuffer()\n  } else if (Buffer.isBuffer(script)) {\n    // buffer script\n    this._scriptBuffer = buffer.Buffer.from(script)\n  } else {\n    throw new TypeError('Invalid argument type: script')\n  }\n  return this\n}\n\n/**\n * Retrieve signatures for the provided PrivateKey.\n *\n * @param {Transaction} transaction - the transaction to be signed\n * @param {PrivateKey} privateKey - the private key to use when signing\n * @param {number} inputIndex - the index of this input in the provided transaction\n * @param {number} sigType - defaults to Signature.SIGHASH_ALL\n * @param {Buffer} addressHash - if provided, don't calculate the hash of the\n *     public key associated with the private key provided\n * @abstract\n */\nInput.prototype.getSignatures = function () {\n  // throw new errors.AbstractMethodInvoked(\n  //   'Trying to sign unsupported output type (only P2PKH and P2SH multisig inputs are supported)' +\n  //   ' for input: ' + JSON.stringify(this)\n  // )\n  return []\n}\n\nInput.prototype.isFullySigned = function () {\n  throw new errors.AbstractMethodInvoked('Input#isFullySigned')\n}\n\nInput.prototype.isFinal = function () {\n  return this.sequenceNumber === Input.MAXINT\n}\n\nInput.prototype.addSignature = function () {\n  // throw new errors.AbstractMethodInvoked('Input#addSignature')\n}\n\nInput.prototype.clearSignatures = function () {\n  // throw new errors.AbstractMethodInvoked('Input#clearSignatures')\n}\n\nInput.prototype.isValidSignature = function (transaction, signature) {\n  // FIXME: Refactor signature so this is not necessary\n  signature.signature.nhashtype = signature.sigtype\n  return Sighash.verify(\n    transaction,\n    signature.signature,\n    signature.publicKey,\n    signature.inputIndex,\n    this.output.script,\n    this.output.satoshisBN\n  )\n}\n\n/**\n * @returns true if this is a coinbase input (represents no input)\n */\nInput.prototype.isNull = function () {\n  return this.prevTxId.toString('hex') === '0000000000000000000000000000000000000000000000000000000000000000' &&\n    this.outputIndex === 0xffffffff\n}\n\nInput.prototype._estimateSize = function () {\n  return this.toBufferWriter().toBuffer().length\n}\n\nmodule.exports = Input\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","try {\n  var util = require('util');\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  module.exports = require('./inherits_browser.js');\n}\n","'use strict'\n\nvar _ = require('../util/_')\nvar $ = require('../util/preconditions')\nvar inherits = require('inherits')\nvar JSUtil = require('../util/js')\n\nvar PublicKey = require('../publickey')\nvar errors = require('../errors')\nvar Signature = require('../crypto/signature')\n\n/**\n * @desc\n * Wrapper around Signature with fields related to signing a transaction specifically\n *\n * @param {Object|string|TransactionSignature} arg\n * @constructor\n */\nfunction TransactionSignature (arg) {\n  if (!(this instanceof TransactionSignature)) {\n    return new TransactionSignature(arg)\n  }\n  if (arg instanceof TransactionSignature) {\n    return arg\n  }\n  if (_.isObject(arg)) {\n    return this._fromObject(arg)\n  }\n  throw new errors.InvalidArgument('TransactionSignatures must be instantiated from an object')\n}\ninherits(TransactionSignature, Signature)\n\nTransactionSignature.prototype._fromObject = function (arg) {\n  this._checkObjectArgs(arg)\n  this.publicKey = new PublicKey(arg.publicKey)\n  this.prevTxId = Buffer.isBuffer(arg.prevTxId) ? arg.prevTxId : Buffer.from(arg.prevTxId, 'hex')\n  this.outputIndex = arg.outputIndex\n  this.inputIndex = arg.inputIndex\n  this.signature = (arg.signature instanceof Signature) ? arg.signature\n    : Buffer.isBuffer(arg.signature) ? Signature.fromBuffer(arg.signature)\n      : Signature.fromString(arg.signature)\n  this.sigtype = arg.sigtype\n  return this\n}\n\nTransactionSignature.prototype._checkObjectArgs = function (arg) {\n  $.checkArgument(PublicKey(arg.publicKey), 'publicKey')\n  $.checkArgument(!_.isUndefined(arg.inputIndex), 'inputIndex')\n  $.checkArgument(!_.isUndefined(arg.outputIndex), 'outputIndex')\n  $.checkState(_.isNumber(arg.inputIndex), 'inputIndex must be a number')\n  $.checkState(_.isNumber(arg.outputIndex), 'outputIndex must be a number')\n  $.checkArgument(arg.signature, 'signature')\n  $.checkArgument(arg.prevTxId, 'prevTxId')\n  $.checkState(arg.signature instanceof Signature ||\n               Buffer.isBuffer(arg.signature) ||\n               JSUtil.isHexa(arg.signature), 'signature must be a buffer or hexa value')\n  $.checkState(Buffer.isBuffer(arg.prevTxId) ||\n               JSUtil.isHexa(arg.prevTxId), 'prevTxId must be a buffer or hexa value')\n  $.checkArgument(arg.sigtype, 'sigtype')\n  $.checkState(_.isNumber(arg.sigtype), 'sigtype must be a number')\n}\n\n/**\n * Serializes a transaction to a plain JS object\n * @return {Object}\n */\nTransactionSignature.prototype.toObject = TransactionSignature.prototype.toJSON = function toObject () {\n  return {\n    publicKey: this.publicKey.toString(),\n    prevTxId: this.prevTxId.toString('hex'),\n    outputIndex: this.outputIndex,\n    inputIndex: this.inputIndex,\n    signature: this.signature.toString(),\n    sigtype: this.sigtype\n  }\n}\n\n/**\n * Builds a TransactionSignature from an object\n * @param {Object} object\n * @return {TransactionSignature}\n */\nTransactionSignature.fromObject = function (object) {\n  $.checkArgument(object)\n  return new TransactionSignature(object)\n}\n\nmodule.exports = TransactionSignature\n","'use strict'\n\nvar inherits = require('inherits')\n\nvar $ = require('../../util/preconditions')\n\nvar Input = require('./input')\nvar Output = require('../output')\nvar Sighash = require('../sighash')\nvar Script = require('../../script')\nvar Signature = require('../../crypto/signature')\nvar TransactionSignature = require('../signature')\n\n/**\n * Represents a special kind of input of PayToPublicKey kind.\n * @constructor\n */\nfunction PublicKeyInput () {\n  Input.apply(this, arguments)\n}\ninherits(PublicKeyInput, Input)\n\n/**\n * @param {Transaction} transaction - the transaction to be signed\n * @param {PrivateKey} privateKey - the private key with which to sign the transaction\n * @param {number} index - the index of the input in the transaction input vector\n * @param {number=} sigtype - the type of signature, defaults to Signature.SIGHASH_ALL\n * @return {Array} of objects that can be\n */\nPublicKeyInput.prototype.getSignatures = function (transaction, privateKey, index, sigtype) {\n  $.checkState(this.output instanceof Output)\n  sigtype = sigtype || (Signature.SIGHASH_ALL | Signature.SIGHASH_FORKID)\n  var publicKey = privateKey.toPublicKey()\n  if (publicKey.toString() === this.output.script.getPublicKey().toString('hex')) {\n    return [new TransactionSignature({\n      publicKey: publicKey,\n      prevTxId: this.prevTxId,\n      outputIndex: this.outputIndex,\n      inputIndex: index,\n      signature: Sighash.sign(transaction, privateKey, sigtype, index, this.output.script, this.output.satoshisBN),\n      sigtype: sigtype\n    })]\n  }\n  return []\n}\n\n/**\n * Add the provided signature\n *\n * @param {Object} signature\n * @param {PublicKey} signature.publicKey\n * @param {Signature} signature.signature\n * @param {number=} signature.sigtype\n * @return {PublicKeyInput} this, for chaining\n */\nPublicKeyInput.prototype.addSignature = function (transaction, signature) {\n  $.checkState(this.isValidSignature(transaction, signature), 'Signature is invalid')\n  this.setScript(Script.buildPublicKeyIn(\n    signature.signature.toDER(),\n    signature.sigtype\n  ))\n  return this\n}\n\n/**\n * Clear the input's signature\n * @return {PublicKeyHashInput} this, for chaining\n */\nPublicKeyInput.prototype.clearSignatures = function () {\n  this.setScript(Script.empty())\n  return this\n}\n\n/**\n * Query whether the input is signed\n * @return {boolean}\n */\nPublicKeyInput.prototype.isFullySigned = function () {\n  return this.script.isPublicKeyIn()\n}\n\n// 32   txid\n// 4    output index\n// ---\n// 1    script size (VARINT)\n// 1    signature size (OP_PUSHDATA)\n// <=72 signature (DER + SIGHASH type)\n// ---\n// 4    sequence number\nPublicKeyInput.SCRIPT_MAX_SIZE = 74\n\nPublicKeyInput.prototype._estimateSize = function () {\n  return Input.BASE_SIZE + PublicKeyInput.SCRIPT_MAX_SIZE\n}\n\nmodule.exports = PublicKeyInput\n","'use strict'\n\nvar inherits = require('inherits')\n\nvar $ = require('../../util/preconditions')\n\nvar Hash = require('../../crypto/hash')\nvar Input = require('./input')\nvar Output = require('../output')\nvar Sighash = require('../sighash')\nvar Script = require('../../script')\nvar Signature = require('../../crypto/signature')\nvar TransactionSignature = require('../signature')\n\n/**\n * Represents a special kind of input of PayToPublicKeyHash kind.\n * @constructor\n */\nfunction PublicKeyHashInput () {\n  Input.apply(this, arguments)\n}\ninherits(PublicKeyHashInput, Input)\n\n/**\n * @param {Transaction} transaction - the transaction to be signed\n * @param {PrivateKey} privateKey - the private key with which to sign the transaction\n * @param {number} index - the index of the input in the transaction input vector\n * @param {number=} sigtype - the type of signature, defaults to Signature.SIGHASH_ALL\n * @param {Buffer=} hashData - the precalculated hash of the public key associated with the privateKey provided\n * @return {Array} of objects that can be\n */\nPublicKeyHashInput.prototype.getSignatures = function (transaction, privateKey, index, sigtype, hashData) {\n  $.checkState(this.output instanceof Output)\n  hashData = hashData || Hash.sha256ripemd160(privateKey.publicKey.toBuffer())\n  sigtype = sigtype || (Signature.SIGHASH_ALL | Signature.SIGHASH_FORKID)\n\n  if (hashData.equals(this.output.script.getPublicKeyHash())) {\n    return [new TransactionSignature({\n      publicKey: privateKey.publicKey,\n      prevTxId: this.prevTxId,\n      outputIndex: this.outputIndex,\n      inputIndex: index,\n      signature: Sighash.sign(transaction, privateKey, sigtype, index, this.output.script, this.output.satoshisBN),\n      sigtype: sigtype\n    })]\n  }\n  return []\n}\n\n/**\n * Add the provided signature\n *\n * @param {Object} signature\n * @param {PublicKey} signature.publicKey\n * @param {Signature} signature.signature\n * @param {number=} signature.sigtype\n * @return {PublicKeyHashInput} this, for chaining\n */\nPublicKeyHashInput.prototype.addSignature = function (transaction, signature) {\n  $.checkState(this.isValidSignature(transaction, signature), 'Signature is invalid')\n\n  this.setScript(Script.buildPublicKeyHashIn(\n    signature.publicKey,\n    signature.signature.toDER(),\n    signature.sigtype\n  ))\n  return this\n}\n\n/**\n * Clear the input's signature\n * @return {PublicKeyHashInput} this, for chaining\n */\nPublicKeyHashInput.prototype.clearSignatures = function () {\n  this.setScript(Script.empty())\n  return this\n}\n\n/**\n * Query whether the input is signed\n * @return {boolean}\n */\nPublicKeyHashInput.prototype.isFullySigned = function () {\n  return this.script.isPublicKeyHashIn()\n}\n\n// 32   txid\n// 4    output index\n// --- script ---\n// 1    script size (VARINT)\n// 1    signature size (OP_PUSHDATA)\n// <=72 signature (DER + SIGHASH type)\n// 1    public key size (OP_PUSHDATA)\n// 33   compressed public key\n//\n// 4    sequence number\nPublicKeyHashInput.SCRIPT_MAX_SIZE = 108\n\nPublicKeyHashInput.prototype._estimateSize = function () {\n  return Input.BASE_SIZE + PublicKeyHashInput.SCRIPT_MAX_SIZE\n}\n\nmodule.exports = PublicKeyHashInput\n","'use strict'\n\nvar _ = require('../../util/_')\nvar inherits = require('inherits')\nvar Input = require('./input')\nvar Output = require('../output')\nvar $ = require('../../util/preconditions')\n\nvar Script = require('../../script')\nvar Signature = require('../../crypto/signature')\nvar Sighash = require('../sighash')\nvar TransactionSignature = require('../signature')\nvar PublicKey = require('../../publickey')\nvar Varint = require('../../encoding/varint')\n\n/**\n * @constructor\n */\nfunction MultiSigInput (input, pubkeys, threshold, signatures) {\n  Input.apply(this, arguments)\n  var self = this\n  pubkeys = pubkeys || input.publicKeys\n  threshold = threshold || input.threshold\n  signatures = signatures || input.signatures\n  this.publicKeys = pubkeys.map(k => k.toString('hex')).sort().map(k => new PublicKey(k))\n  $.checkState(Script.buildMultisigOut(this.publicKeys, threshold).equals(this.output.script),\n    'Provided public keys don\\'t match to the provided output script')\n  this.publicKeyIndex = {}\n  _.each(this.publicKeys, function (publicKey, index) {\n    self.publicKeyIndex[publicKey.toString()] = index\n  })\n  this.threshold = threshold\n  // Empty array of signatures\n  this.signatures = signatures ? this._deserializeSignatures(signatures) : new Array(this.publicKeys.length)\n}\ninherits(MultiSigInput, Input)\n\nMultiSigInput.prototype.toObject = function () {\n  var obj = Input.prototype.toObject.apply(this, arguments)\n  obj.threshold = this.threshold\n  obj.publicKeys = _.map(this.publicKeys, function (publicKey) { return publicKey.toString() })\n  obj.signatures = this._serializeSignatures()\n  return obj\n}\n\nMultiSigInput.prototype._deserializeSignatures = function (signatures) {\n  return _.map(signatures, function (signature) {\n    if (!signature) {\n      return undefined\n    }\n    return new TransactionSignature(signature)\n  })\n}\n\nMultiSigInput.prototype._serializeSignatures = function () {\n  return _.map(this.signatures, function (signature) {\n    if (!signature) {\n      return undefined\n    }\n    return signature.toObject()\n  })\n}\n\nMultiSigInput.prototype.getSignatures = function (transaction, privateKey, index, sigtype) {\n  $.checkState(this.output instanceof Output)\n  sigtype = sigtype || (Signature.SIGHASH_ALL | Signature.SIGHASH_FORKID)\n\n  var self = this\n  var results = []\n  _.each(this.publicKeys, function (publicKey) {\n    if (publicKey.toString() === privateKey.publicKey.toString()) {\n      results.push(new TransactionSignature({\n        publicKey: privateKey.publicKey,\n        prevTxId: self.prevTxId,\n        outputIndex: self.outputIndex,\n        inputIndex: index,\n        signature: Sighash.sign(transaction, privateKey, sigtype, index, self.output.script, self.output.satoshisBN),\n        sigtype: sigtype\n      }))\n    }\n  })\n\n  return results\n}\n\nMultiSigInput.prototype.addSignature = function (transaction, signature) {\n  $.checkState(!this.isFullySigned(), 'All needed signatures have already been added')\n  $.checkArgument(!_.isUndefined(this.publicKeyIndex[signature.publicKey.toString()]),\n    'Signature has no matching public key')\n  $.checkState(this.isValidSignature(transaction, signature))\n  this.signatures[this.publicKeyIndex[signature.publicKey.toString()]] = signature\n  this._updateScript()\n  return this\n}\n\nMultiSigInput.prototype._updateScript = function () {\n  this.setScript(Script.buildMultisigIn(\n    this.publicKeys,\n    this.threshold,\n    this._createSignatures()\n  ))\n  return this\n}\n\nMultiSigInput.prototype._createSignatures = function () {\n  return _.map(\n    _.filter(this.signatures, function (signature) { return !_.isUndefined(signature) }),\n    function (signature) {\n      return Buffer.concat([\n        signature.signature.toDER(),\n        Buffer.from([signature.sigtype & 0xff])\n      ])\n    }\n  )\n}\n\nMultiSigInput.prototype.clearSignatures = function () {\n  this.signatures = new Array(this.publicKeys.length)\n  this._updateScript()\n}\n\nMultiSigInput.prototype.isFullySigned = function () {\n  return this.countSignatures() === this.threshold\n}\n\nMultiSigInput.prototype.countMissingSignatures = function () {\n  return this.threshold - this.countSignatures()\n}\n\nMultiSigInput.prototype.countSignatures = function () {\n  return _.reduce(this.signatures, function (sum, signature) {\n    return sum + (!!signature)\n  }, 0)\n}\n\nMultiSigInput.prototype.publicKeysWithoutSignature = function () {\n  var self = this\n  return _.filter(this.publicKeys, function (publicKey) {\n    return !(self.signatures[self.publicKeyIndex[publicKey.toString()]])\n  })\n}\n\nMultiSigInput.prototype.isValidSignature = function (transaction, signature) {\n  // FIXME: Refactor signature so this is not necessary\n  signature.signature.nhashtype = signature.sigtype\n  return Sighash.verify(\n    transaction,\n    signature.signature,\n    signature.publicKey,\n    signature.inputIndex,\n    this.output.script,\n    this.output.satoshisBN\n  )\n}\n\n/**\n *\n * @param {Buffer[]} signatures\n * @param {PublicKey[]} publicKeys\n * @param {Transaction} transaction\n * @param {Integer} inputIndex\n * @param {Input} input\n * @returns {TransactionSignature[]}\n */\nMultiSigInput.normalizeSignatures = function (transaction, input, inputIndex, signatures, publicKeys) {\n  return publicKeys.map(function (pubKey) {\n    var signatureMatch = null\n    signatures = signatures.filter(function (signatureBuffer) {\n      if (signatureMatch) {\n        return true\n      }\n\n      var signature = new TransactionSignature({\n        signature: Signature.fromTxFormat(signatureBuffer),\n        publicKey: pubKey,\n        prevTxId: input.prevTxId,\n        outputIndex: input.outputIndex,\n        inputIndex: inputIndex,\n        sigtype: Signature.SIGHASH_ALL\n      })\n\n      signature.signature.nhashtype = signature.sigtype\n      var isMatch = Sighash.verify(\n        transaction,\n        signature.signature,\n        signature.publicKey,\n        signature.inputIndex,\n        input.output.script\n      )\n\n      if (isMatch) {\n        signatureMatch = signature\n        return false\n      }\n\n      return true\n    })\n\n    return signatureMatch || null\n  })\n}\n\n// 32   txid\n// 4    output index\n// --- script ---\n// ??? script size (VARINT)\n// 1    OP_0\n// --- signature list ---\n//      1       signature size (OP_PUSHDATA)\n//      <=72    signature (DER + SIGHASH type)\n//\n// 4    sequence number\nMultiSigInput.SIGNATURE_SIZE = 73\n\nMultiSigInput.prototype._estimateSize = function () {\n  var scriptSize = 1 + this.threshold * MultiSigInput.SIGNATURE_SIZE\n  return Input.BASE_SIZE + Varint(scriptSize).toBuffer().length + scriptSize\n}\n\nmodule.exports = MultiSigInput\n","'use strict'\n\nvar _ = require('../../util/_')\nvar inherits = require('inherits')\nvar Input = require('./input')\nvar Output = require('../output')\nvar $ = require('../../util/preconditions')\n\nvar Script = require('../../script')\nvar Signature = require('../../crypto/signature')\nvar Sighash = require('../sighash')\nvar TransactionSignature = require('../signature')\nvar PublicKey = require('../../publickey')\nvar Varint = require('../../encoding/varint')\n\n/**\n * @constructor\n */\nfunction MultiSigScriptHashInput (input, pubkeys, threshold, signatures) {\n  Input.apply(this, arguments)\n  var self = this\n  pubkeys = pubkeys || input.publicKeys\n  threshold = threshold || input.threshold\n  signatures = signatures || input.signatures\n  this.publicKeys = pubkeys.map(k => k.toString('hex')).sort().map(k => new PublicKey(k))\n  this.redeemScript = Script.buildMultisigOut(this.publicKeys, threshold)\n  $.checkState(Script.buildScriptHashOut(this.redeemScript).equals(this.output.script),\n    'Provided public keys don\\'t hash to the provided output')\n  this.publicKeyIndex = {}\n  _.each(this.publicKeys, function (publicKey, index) {\n    self.publicKeyIndex[publicKey.toString()] = index\n  })\n  this.threshold = threshold\n  // Empty array of signatures\n  this.signatures = signatures ? this._deserializeSignatures(signatures) : new Array(this.publicKeys.length)\n}\ninherits(MultiSigScriptHashInput, Input)\n\nMultiSigScriptHashInput.prototype.toObject = function () {\n  var obj = Input.prototype.toObject.apply(this, arguments)\n  obj.threshold = this.threshold\n  obj.publicKeys = _.map(this.publicKeys, function (publicKey) { return publicKey.toString() })\n  obj.signatures = this._serializeSignatures()\n  return obj\n}\n\nMultiSigScriptHashInput.prototype._deserializeSignatures = function (signatures) {\n  return _.map(signatures, function (signature) {\n    if (!signature) {\n      return undefined\n    }\n    return new TransactionSignature(signature)\n  })\n}\n\nMultiSigScriptHashInput.prototype._serializeSignatures = function () {\n  return _.map(this.signatures, function (signature) {\n    if (!signature) {\n      return undefined\n    }\n    return signature.toObject()\n  })\n}\n\nMultiSigScriptHashInput.prototype.getSignatures = function (transaction, privateKey, index, sigtype) {\n  $.checkState(this.output instanceof Output)\n  sigtype = sigtype || (Signature.SIGHASH_ALL | Signature.SIGHASH_FORKID)\n\n  var self = this\n  var results = []\n  _.each(this.publicKeys, function (publicKey) {\n    if (publicKey.toString() === privateKey.publicKey.toString()) {\n      results.push(new TransactionSignature({\n        publicKey: privateKey.publicKey,\n        prevTxId: self.prevTxId,\n        outputIndex: self.outputIndex,\n        inputIndex: index,\n        signature: Sighash.sign(transaction, privateKey, sigtype, index, self.redeemScript, self.output.satoshisBN),\n        sigtype: sigtype\n      }))\n    }\n  })\n  return results\n}\n\nMultiSigScriptHashInput.prototype.addSignature = function (transaction, signature) {\n  $.checkState(!this.isFullySigned(), 'All needed signatures have already been added')\n  $.checkArgument(!_.isUndefined(this.publicKeyIndex[signature.publicKey.toString()]),\n    'Signature has no matching public key')\n  $.checkState(this.isValidSignature(transaction, signature))\n  this.signatures[this.publicKeyIndex[signature.publicKey.toString()]] = signature\n  this._updateScript()\n  return this\n}\n\nMultiSigScriptHashInput.prototype._updateScript = function () {\n  this.setScript(Script.buildP2SHMultisigIn(\n    this.publicKeys,\n    this.threshold,\n    this._createSignatures(),\n    { cachedMultisig: this.redeemScript }\n  ))\n  return this\n}\n\nMultiSigScriptHashInput.prototype._createSignatures = function () {\n  return _.map(\n    _.filter(this.signatures, function (signature) { return !_.isUndefined(signature) }),\n    function (signature) {\n      return Buffer.concat([\n        signature.signature.toDER(),\n        Buffer.from([signature.sigtype & 0xff])\n      ])\n    }\n  )\n}\n\nMultiSigScriptHashInput.prototype.clearSignatures = function () {\n  this.signatures = new Array(this.publicKeys.length)\n  this._updateScript()\n}\n\nMultiSigScriptHashInput.prototype.isFullySigned = function () {\n  return this.countSignatures() === this.threshold\n}\n\nMultiSigScriptHashInput.prototype.countMissingSignatures = function () {\n  return this.threshold - this.countSignatures()\n}\n\nMultiSigScriptHashInput.prototype.countSignatures = function () {\n  return _.reduce(this.signatures, function (sum, signature) {\n    return sum + (!!signature)\n  }, 0)\n}\n\nMultiSigScriptHashInput.prototype.publicKeysWithoutSignature = function () {\n  var self = this\n  return _.filter(this.publicKeys, function (publicKey) {\n    return !(self.signatures[self.publicKeyIndex[publicKey.toString()]])\n  })\n}\n\nMultiSigScriptHashInput.prototype.isValidSignature = function (transaction, signature) {\n  // FIXME: Refactor signature so this is not necessary\n  signature.signature.nhashtype = signature.sigtype\n  return Sighash.verify(\n    transaction,\n    signature.signature,\n    signature.publicKey,\n    signature.inputIndex,\n    this.redeemScript,\n    this.output.satoshisBN\n  )\n}\n\n// 32   txid\n// 4    output index\n// --- script ---\n// ???  script size (VARINT)\n// 1    OP_0\n// --- signature list ---\n//      1       signature size (OP_PUSHDATA)\n//      <=72    signature (DER + SIGHASH type)\n//\n// ???  redeem script size (OP_PUSHDATA)\n// --- redeem script ---\n//      1       OP_2\n//      --- public key list ---\n//      1       public key size (OP_PUSHDATA)\n//      33      compressed public key\n//\n//      1       OP_3\n//      1       OP_CHECKMULTISIG\n//\n// 4    sequence number\nMultiSigScriptHashInput.SIGNATURE_SIZE = 73\nMultiSigScriptHashInput.PUBKEY_SIZE = 34\n\nMultiSigScriptHashInput.prototype._estimateSize = function () {\n  var pubKeysSize = this.publicKeys.length * MultiSigScriptHashInput.PUBKEY_SIZE\n  var sigsSize = this.threshold * MultiSigScriptHashInput.SIGNATURE_SIZE\n  var redeemScriptSize = 3 + pubKeysSize\n  var redeemScriptPushdataSize = redeemScriptSize <= 75 ? 1 : redeemScriptSize <= 255 ? 2 : 3\n  var scriptLength = sigsSize + 1 + redeemScriptPushdataSize + redeemScriptSize\n  return Input.BASE_SIZE + Varint(scriptLength).toBuffer().length + scriptLength\n}\n\nmodule.exports = MultiSigScriptHashInput\n","module.exports = require('./input')\n\nmodule.exports.PublicKey = require('./publickey')\nmodule.exports.PublicKeyHash = require('./publickeyhash')\nmodule.exports.MultiSig = require('./multisig.js')\nmodule.exports.MultiSigScriptHash = require('./multisigscripthash.js')\n","'use strict'\n\nvar buffer = require('buffer')\n\nvar Signature = require('../crypto/signature')\nvar Script = require('../script')\nvar Output = require('./output')\nvar BufferReader = require('../encoding/bufferreader')\nvar BufferWriter = require('../encoding/bufferwriter')\nvar BN = require('../crypto/bn')\nvar Hash = require('../crypto/hash')\nvar ECDSA = require('../crypto/ecdsa')\nvar $ = require('../util/preconditions')\nvar Interpreter = require('../script/interpreter')\nvar _ = require('../util/_')\n\nvar SIGHASH_SINGLE_BUG = Buffer.from('0000000000000000000000000000000000000000000000000000000000000001', 'hex')\nvar BITS_64_ON = 'ffffffffffffffff'\n\n// By default, we sign with sighash_forkid\nvar DEFAULT_SIGN_FLAGS = Interpreter.SCRIPT_ENABLE_SIGHASH_FORKID\n\nvar sighashPreimageForForkId = function (transaction, sighashType, inputNumber, subscript, satoshisBN) {\n  var input = transaction.inputs[inputNumber]\n  $.checkArgument(\n    satoshisBN instanceof BN,\n    'For ForkId=0 signatures, satoshis or complete input must be provided'\n  )\n\n  function GetPrevoutHash (tx) {\n    var writer = new BufferWriter()\n\n    _.each(tx.inputs, function (input) {\n      writer.writeReverse(input.prevTxId)\n      writer.writeUInt32LE(input.outputIndex)\n    })\n\n    var buf = writer.toBuffer()\n    var ret = Hash.sha256sha256(buf)\n    return ret\n  }\n\n  function GetSequenceHash (tx) {\n    var writer = new BufferWriter()\n\n    _.each(tx.inputs, function (input) {\n      writer.writeUInt32LE(input.sequenceNumber)\n    })\n\n    var buf = writer.toBuffer()\n    var ret = Hash.sha256sha256(buf)\n    return ret\n  }\n\n  function GetOutputsHash (tx, n) {\n    var writer = new BufferWriter()\n\n    if (_.isUndefined(n)) {\n      _.each(tx.outputs, function (output) {\n        output.toBufferWriter(writer)\n      })\n    } else {\n      tx.outputs[n].toBufferWriter(writer)\n    }\n\n    var buf = writer.toBuffer()\n    var ret = Hash.sha256sha256(buf)\n    return ret\n  }\n\n  var hashPrevouts = Buffer.alloc(32)\n  var hashSequence = Buffer.alloc(32)\n  var hashOutputs = Buffer.alloc(32)\n\n  if (!(sighashType & Signature.SIGHASH_ANYONECANPAY)) {\n    hashPrevouts = GetPrevoutHash(transaction)\n  }\n\n  if (!(sighashType & Signature.SIGHASH_ANYONECANPAY) &&\n    (sighashType & 31) !== Signature.SIGHASH_SINGLE &&\n    (sighashType & 31) !== Signature.SIGHASH_NONE) {\n    hashSequence = GetSequenceHash(transaction)\n  }\n\n  if ((sighashType & 31) !== Signature.SIGHASH_SINGLE && (sighashType & 31) !== Signature.SIGHASH_NONE) {\n    hashOutputs = GetOutputsHash(transaction)\n  } else if ((sighashType & 31) === Signature.SIGHASH_SINGLE && inputNumber < transaction.outputs.length) {\n    hashOutputs = GetOutputsHash(transaction, inputNumber)\n  }\n\n  var writer = new BufferWriter()\n\n  // Version\n  writer.writeInt32LE(transaction.version)\n\n  // Input prevouts/nSequence (none/all, depending on flags)\n  writer.write(hashPrevouts)\n  writer.write(hashSequence)\n\n  //  outpoint (32-byte hash + 4-byte little endian)\n  writer.writeReverse(input.prevTxId)\n  writer.writeUInt32LE(input.outputIndex)\n\n  // scriptCode of the input (serialized as scripts inside CTxOuts)\n  writer.writeVarintNum(subscript.toBuffer().length)\n  writer.write(subscript.toBuffer())\n\n  // value of the output spent by this input (8-byte little endian)\n  writer.writeUInt64LEBN(satoshisBN)\n\n  // nSequence of the input (4-byte little endian)\n  var sequenceNumber = input.sequenceNumber\n  writer.writeUInt32LE(sequenceNumber)\n\n  // Outputs (none/one/all, depending on flags)\n  writer.write(hashOutputs)\n\n  // Locktime\n  writer.writeUInt32LE(transaction.nLockTime)\n\n  // sighashType\n  writer.writeUInt32LE(sighashType >>> 0)\n\n  var buf = writer.toBuffer()\n  return buf\n}\n\n/**\n * Returns a buffer with the which is hashed with sighash that needs to be signed\n * for OP_CHECKSIG.\n *\n * @name Signing.sighash\n * @param {Transaction} transaction the transaction to sign\n * @param {number} sighashType the type of the hash\n * @param {number} inputNumber the input index for the signature\n * @param {Script} subscript the script that will be signed\n * @param {satoshisBN} input's amount (for  ForkId signatures)\n *\n */\nvar sighashPreimage = function sighashPreimage (transaction, sighashType, inputNumber, subscript, satoshisBN, flags) {\n  var Transaction = require('./transaction')\n  var Input = require('./input')\n\n  if (_.isUndefined(flags)) {\n    flags = DEFAULT_SIGN_FLAGS\n  }\n\n  // Copy transaction\n  var txcopy = Transaction.shallowCopy(transaction)\n\n  // Copy script\n  subscript = new Script(subscript)\n\n  if (flags & Interpreter.SCRIPT_ENABLE_REPLAY_PROTECTION) {\n    // Legacy chain's value for fork id must be of the form 0xffxxxx.\n    // By xoring with 0xdead, we ensure that the value will be different\n    // from the original one, even if it already starts with 0xff.\n    var forkValue = sighashType >> 8\n    var newForkValue = 0xff0000 | (forkValue ^ 0xdead)\n    sighashType = (newForkValue << 8) | (sighashType & 0xff)\n  }\n\n  if ((sighashType & Signature.SIGHASH_FORKID) && (flags & Interpreter.SCRIPT_ENABLE_SIGHASH_FORKID)) {\n    return sighashPreimageForForkId(txcopy, sighashType, inputNumber, subscript, satoshisBN)\n  }\n\n  // For no ForkId sighash, separators need to be removed.\n  subscript.removeCodeseparators()\n\n  var i\n\n  for (i = 0; i < txcopy.inputs.length; i++) {\n    // Blank signatures for other inputs\n    txcopy.inputs[i] = new Input(txcopy.inputs[i]).setScript(Script.empty())\n  }\n\n  txcopy.inputs[inputNumber] = new Input(txcopy.inputs[inputNumber]).setScript(subscript)\n\n  if ((sighashType & 31) === Signature.SIGHASH_NONE ||\n    (sighashType & 31) === Signature.SIGHASH_SINGLE) {\n    // clear all sequenceNumbers\n    for (i = 0; i < txcopy.inputs.length; i++) {\n      if (i !== inputNumber) {\n        txcopy.inputs[i].sequenceNumber = 0\n      }\n    }\n  }\n\n  if ((sighashType & 31) === Signature.SIGHASH_NONE) {\n    txcopy.outputs = []\n  } else if ((sighashType & 31) === Signature.SIGHASH_SINGLE) {\n    // The SIGHASH_SINGLE bug.\n    // https://bitcointalk.org/index.php?topic=260595.0\n    if (inputNumber >= txcopy.outputs.length) {\n      return SIGHASH_SINGLE_BUG\n    }\n\n    txcopy.outputs.length = inputNumber + 1\n\n    for (i = 0; i < inputNumber; i++) {\n      txcopy.outputs[i] = new Output({\n        satoshis: BN.fromBuffer(buffer.Buffer.from(BITS_64_ON, 'hex')),\n        script: Script.empty()\n      })\n    }\n  }\n\n  if (sighashType & Signature.SIGHASH_ANYONECANPAY) {\n    txcopy.inputs = [txcopy.inputs[inputNumber]]\n  }\n\n  var buf = new BufferWriter()\n    .write(txcopy.toBuffer())\n    .writeInt32LE(sighashType)\n    .toBuffer()\n  return buf\n}\n\n/**\n * Returns a buffer of length 32 bytes with the hash that needs to be signed\n * for OP_CHECKSIG.\n *\n * @name Signing.sighash\n * @param {Transaction} transaction the transaction to sign\n * @param {number} sighashType the type of the hash\n * @param {number} inputNumber the input index for the signature\n * @param {Script} subscript the script that will be signed\n * @param {satoshisBN} input's amount (for  ForkId signatures)\n *\n */\nvar sighash = function sighash (transaction, sighashType, inputNumber, subscript, satoshisBN, flags) {\n  var preimage = sighashPreimage(transaction, sighashType, inputNumber, subscript, satoshisBN, flags)\n  if (preimage.compare(SIGHASH_SINGLE_BUG) === 0) return preimage\n  var ret = Hash.sha256sha256(preimage)\n  ret = new BufferReader(ret).readReverse()\n  return ret\n}\n\n/**\n * Create a signature\n *\n * @name Signing.sign\n * @param {Transaction} transaction\n * @param {PrivateKey} privateKey\n * @param {number} sighash\n * @param {number} inputIndex\n * @param {Script} subscript\n * @param {satoshisBN} input's amount\n * @return {Signature}\n */\nfunction sign (transaction, privateKey, sighashType, inputIndex, subscript, satoshisBN, flags) {\n  var hashbuf = sighash(transaction, sighashType, inputIndex, subscript, satoshisBN, flags)\n\n  var sig = ECDSA.sign(hashbuf, privateKey, 'little').set({\n    nhashtype: sighashType\n  })\n  return sig\n}\n\n/**\n * Verify a signature\n *\n * @name Signing.verify\n * @param {Transaction} transaction\n * @param {Signature} signature\n * @param {PublicKey} publicKey\n * @param {number} inputIndex\n * @param {Script} subscript\n * @param {satoshisBN} input's amount\n * @param {flags} verification flags\n * @return {boolean}\n */\nfunction verify (transaction, signature, publicKey, inputIndex, subscript, satoshisBN, flags) {\n  $.checkArgument(!_.isUndefined(transaction))\n  $.checkArgument(!_.isUndefined(signature) && !_.isUndefined(signature.nhashtype))\n  var hashbuf = sighash(transaction, signature.nhashtype, inputIndex, subscript, satoshisBN, flags)\n  return ECDSA.verify(hashbuf, signature, publicKey, 'little')\n}\n\n/**\n * @namespace Signing\n */\nmodule.exports = {\n  sighashPreimage: sighashPreimage,\n  sighash: sighash,\n  sign: sign,\n  verify: verify\n}\n","'use strict'\n\nvar _ = require('../util/_')\nvar $ = require('../util/preconditions')\nvar JSUtil = require('../util/js')\n\nvar Script = require('../script')\nvar Address = require('../address')\n\n/**\n * Represents an unspent output information: its script, associated amount and address,\n * transaction id and output index.\n *\n * @constructor\n * @param {object} data\n * @param {string} data.txid the previous transaction id\n * @param {string=} data.txId alias for `txid`\n * @param {number} data.vout the index in the transaction\n * @param {number=} data.outputIndex alias for `vout`\n * @param {string|Script} data.scriptPubKey the script that must be resolved to release the funds\n * @param {string|Script=} data.script alias for `scriptPubKey`\n * @param {number} data.amount amount of bitcoins associated\n * @param {number=} data.satoshis alias for `amount`, but expressed in satoshis (1 BSV = 1e8 satoshis)\n * @param {string|Address=} data.address the associated address to the script, if provided\n */\nfunction UnspentOutput (data) {\n  if (!(this instanceof UnspentOutput)) {\n    return new UnspentOutput(data)\n  }\n  $.checkArgument(_.isObject(data), 'Must provide an object from where to extract data')\n  var address = data.address ? new Address(data.address) : undefined\n  var txId = data.txid ? data.txid : data.txId\n  if (!txId || !JSUtil.isHexaString(txId) || txId.length > 64) {\n    // TODO: Use the errors library\n    throw new Error('Invalid TXID in object', data)\n  }\n  var outputIndex = _.isUndefined(data.vout) ? data.outputIndex : data.vout\n  if (!_.isNumber(outputIndex)) {\n    throw new Error('Invalid outputIndex, received ' + outputIndex)\n  }\n  $.checkArgument(!_.isUndefined(data.scriptPubKey) || !_.isUndefined(data.script),\n    'Must provide the scriptPubKey for that output!')\n  var script = new Script(data.scriptPubKey || data.script)\n  $.checkArgument(!_.isUndefined(data.amount) || !_.isUndefined(data.satoshis),\n    'Must provide an amount for the output')\n  var amount = !_.isUndefined(data.amount) ? Math.round(data.amount * 1e8) : data.satoshis\n  $.checkArgument(_.isNumber(amount), 'Amount must be a number')\n  JSUtil.defineImmutable(this, {\n    address: address,\n    txId: txId,\n    outputIndex: outputIndex,\n    script: script,\n    satoshis: amount\n  })\n}\n\n/**\n * Provide an informative output when displaying this object in the console\n * @returns string\n */\nUnspentOutput.prototype.inspect = function () {\n  return '<UnspentOutput: ' + this.txId + ':' + this.outputIndex +\n         ', satoshis: ' + this.satoshis + ', address: ' + this.address + '>'\n}\n\n/**\n * String representation: just \"txid:index\"\n * @returns string\n */\nUnspentOutput.prototype.toString = function () {\n  return this.txId + ':' + this.outputIndex\n}\n\n/**\n * Deserialize an UnspentOutput from an object\n * @param {object|string} data\n * @return UnspentOutput\n */\nUnspentOutput.fromObject = function (data) {\n  return new UnspentOutput(data)\n}\n\n/**\n * Returns a plain object (no prototype or methods) with the associated info for this output\n * @return {object}\n */\nUnspentOutput.prototype.toObject = UnspentOutput.prototype.toJSON = function toObject () {\n  return {\n    address: this.address ? this.address.toString() : undefined,\n    txid: this.txId,\n    vout: this.outputIndex,\n    scriptPubKey: this.script.toBuffer().toString('hex'),\n    amount: Number.parseFloat((this.satoshis / 1e8).toFixed(8))\n  }\n}\n\nmodule.exports = UnspentOutput\n","'use strict'\n\nvar _ = require('../util/_')\nvar $ = require('../util/preconditions')\nvar buffer = require('buffer')\n\nvar errors = require('../errors')\nvar JSUtil = require('../util/js')\nvar BufferReader = require('../encoding/bufferreader')\nvar BufferWriter = require('../encoding/bufferwriter')\nvar Varint = require('../encoding/varint')\nvar Hash = require('../crypto/hash')\nvar Signature = require('../crypto/signature')\nvar Sighash = require('./sighash')\n\nvar Address = require('../address')\nvar UnspentOutput = require('./unspentoutput')\nvar Input = require('./input')\nvar PublicKeyHashInput = Input.PublicKeyHash\nvar PublicKeyInput = Input.PublicKey\nvar MultiSigScriptHashInput = Input.MultiSigScriptHash\nvar MultiSigInput = Input.MultiSig\nvar Output = require('./output')\nvar Script = require('../script')\nvar PrivateKey = require('../privatekey')\nvar BN = require('../crypto/bn')\n\n/**\n * Represents a transaction, a set of inputs and outputs to change ownership of tokens\n *\n * @param {*} serialized\n * @constructor\n */\nfunction Transaction (serialized) {\n  if (!(this instanceof Transaction)) {\n    return new Transaction(serialized)\n  }\n  this.inputs = []\n  this.outputs = []\n  this._inputAmount = undefined\n  this._outputAmount = undefined\n  this.unlockScriptCallbackMap = new Map()\n  this.outputCallbackMap = new Map()\n  this._privateKey = undefined\n  this._sigType = undefined\n  this.isSeal = false\n  if (serialized) {\n    if (serialized instanceof Transaction) {\n      return Transaction.shallowCopy(serialized)\n    } else if (JSUtil.isHexa(serialized)) {\n      this.fromString(serialized)\n    } else if (Buffer.isBuffer(serialized)) {\n      this.fromBuffer(serialized)\n    } else if (_.isObject(serialized)) {\n      this.fromObject(serialized)\n    } else {\n      throw new errors.InvalidArgument('Must provide an object or string to deserialize a transaction')\n    }\n  } else {\n    this._newTransaction()\n  }\n}\n\nvar CURRENT_VERSION = 1\nvar DEFAULT_NLOCKTIME = 0\nvar MAX_BLOCK_SIZE = 1000000\n\n// Minimum amount for an output for it not to be considered a dust output\nTransaction.DUST_AMOUNT = 1\n\n// Margin of error to allow fees in the vecinity of the expected value but doesn't allow a big difference\nTransaction.FEE_SECURITY_MARGIN = 150\n\n// max amount of satoshis in circulation\nTransaction.MAX_MONEY = 21000000 * 1e8\n\n// nlocktime limit to be considered block height rather than a timestamp\nTransaction.NLOCKTIME_BLOCKHEIGHT_LIMIT = 5e8\n\n// Max value for an unsigned 32 bit value\nTransaction.NLOCKTIME_MAX_VALUE = 4294967295\n\n// Value used for fee estimation (satoshis per kilobyte)\nTransaction.FEE_PER_KB = process.env.SATS\n\n// Safe upper bound for change address script size in bytes\nTransaction.CHANGE_OUTPUT_MAX_SIZE = 20 + 4 + 34 + 4\n\n/* Constructors and Serialization */\n\n/**\n * Create a 'shallow' copy of the transaction, by serializing and deserializing\n * it dropping any additional information that inputs and outputs may have hold\n *\n * @param {Transaction} transaction\n * @return {Transaction}\n */\nTransaction.shallowCopy = function (transaction) {\n  var copy = new Transaction(transaction.toBuffer())\n  return copy\n}\n\nvar hashProperty = {\n  configurable: false,\n  enumerable: true,\n  get: function () {\n    this._hash = new BufferReader(this._getHash()).readReverse().toString('hex')\n    return this._hash\n  }\n}\nObject.defineProperty(Transaction.prototype, 'hash', hashProperty)\nObject.defineProperty(Transaction.prototype, 'id', hashProperty)\n\nvar ioProperty = {\n  configurable: false,\n  enumerable: true,\n  get: function () {\n    return this._getInputAmount()\n  }\n}\nObject.defineProperty(Transaction.prototype, 'inputAmount', ioProperty)\nioProperty.get = function () {\n  return this._getOutputAmount()\n}\nObject.defineProperty(Transaction.prototype, 'outputAmount', ioProperty)\n\n/**\n * Retrieve the little endian hash of the transaction (used for serialization)\n * @return {Buffer}\n */\nTransaction.prototype._getHash = function () {\n  return Hash.sha256sha256(this.toBuffer())\n}\n\n/**\n * Retrieve a hexa string that can be used with bitcoind's CLI interface\n * (decoderawtransaction, sendrawtransaction)\n *\n * @param {Object|boolean=} unsafe if true, skip all tests. if it's an object,\n *   it's expected to contain a set of flags to skip certain tests:\n * * `disableAll`: disable all checks\n * * `disableLargeFees`: disable checking for fees that are too large\n * * `disableIsFullySigned`: disable checking if all inputs are fully signed\n * * `disableDustOutputs`: disable checking if there are no outputs that are dust amounts\n * * `disableMoreOutputThanInput`: disable checking if the transaction spends more bitcoins than the sum of the input amounts\n * @return {string}\n */\nTransaction.prototype.serialize = function (unsafe) {\n  if (unsafe === true || (unsafe && unsafe.disableAll)) {\n    return this.uncheckedSerialize()\n  } else {\n    return this.checkedSerialize(unsafe)\n  }\n}\n\nTransaction.prototype.uncheckedSerialize = Transaction.prototype.toString = function () {\n  return this.toBuffer().toString('hex')\n}\n\n/**\n * Retrieve a hexa string that can be used with bitcoind's CLI interface\n * (decoderawtransaction, sendrawtransaction)\n *\n * @param {Object} opts allows to skip certain tests. {@see Transaction#serialize}\n * @return {string}\n */\nTransaction.prototype.checkedSerialize = function (opts) {\n  var serializationError = this.getSerializationError(opts)\n  if (serializationError) {\n    serializationError.message += ' - For more information please see: ' +\n      'https://bsv.io/api/lib/transaction#serialization-checks'\n    throw serializationError\n  }\n  return this.uncheckedSerialize()\n}\n\nTransaction.prototype.invalidSatoshis = function () {\n  var invalid = false\n  for (var i = 0; i < this.outputs.length; i++) {\n    if (this.outputs[i].invalidSatoshis()) {\n      invalid = true\n    }\n  }\n  return invalid\n}\n\n/**\n * Retrieve a possible error that could appear when trying to serialize and\n * broadcast this transaction.\n *\n * @param {Object} opts allows to skip certain tests. {@see Transaction#serialize}\n * @return {bsv.Error}\n */\nTransaction.prototype.getSerializationError = function (opts) {\n  opts = opts || {}\n\n  if (this.invalidSatoshis()) {\n    return new errors.Transaction.InvalidSatoshis()\n  }\n\n  var unspent = this._getUnspentValue()\n  var unspentError\n  if (unspent < 0) {\n    if (!opts.disableMoreOutputThanInput) {\n      unspentError = new errors.Transaction.InvalidOutputAmountSum()\n    }\n  } else {\n    unspentError = this._hasFeeError(opts, unspent)\n  }\n\n  return unspentError ||\n    this._hasDustOutputs(opts) ||\n    this._isMissingSignatures(opts)\n}\n\nTransaction.prototype._hasFeeError = function (opts, unspent) {\n  if (!_.isUndefined(this._fee) && this._fee !== unspent) {\n    return new errors.Transaction.FeeError.Different(\n      'Unspent value is ' + unspent + ' but specified fee is ' + this._fee\n    )\n  }\n\n  if (!opts.disableLargeFees) {\n    var maximumFee = Math.floor(Transaction.FEE_SECURITY_MARGIN * this._estimateFee())\n    if (unspent > maximumFee) {\n      if (this._missingChange()) {\n        return new errors.Transaction.ChangeAddressMissing(\n          'Fee is too large and no change address was provided'\n        )\n      }\n      return new errors.Transaction.FeeError.TooLarge(\n        'expected less than ' + maximumFee + ' but got ' + unspent\n      )\n    }\n  }\n}\n\nTransaction.prototype._missingChange = function () {\n  return !this._changeScript\n}\n\nTransaction.prototype._hasDustOutputs = function (opts) {\n  if (opts.disableDustOutputs) {\n    return\n  }\n  var index, output\n  for (index in this.outputs) {\n    output = this.outputs[index]\n    if (output.satoshis < Transaction.DUST_AMOUNT && !output.script.isDataOut() && !output.script.isSafeDataOut()) {\n      return new errors.Transaction.DustOutputs()\n    }\n  }\n}\n\nTransaction.prototype._isMissingSignatures = function (opts) {\n  if (opts.disableIsFullySigned) {\n    return\n  }\n  if (!this.isFullySigned()) {\n    return new errors.Transaction.MissingSignatures()\n  }\n}\n\nTransaction.prototype.inspect = function () {\n  return '<Transaction: ' + this.uncheckedSerialize() + '>'\n}\n\nTransaction.prototype.toBuffer = function () {\n  var writer = new BufferWriter()\n  return this.toBufferWriter(writer).toBuffer()\n}\n\nTransaction.prototype.toBufferWriter = function (writer) {\n  writer.writeInt32LE(this.version)\n  writer.writeVarintNum(this.inputs.length)\n  _.each(this.inputs, function (input) {\n    input.toBufferWriter(writer)\n  })\n  writer.writeVarintNum(this.outputs.length)\n  _.each(this.outputs, function (output) {\n    output.toBufferWriter(writer)\n  })\n  writer.writeUInt32LE(this.nLockTime)\n  return writer\n}\n\nTransaction.prototype.fromBuffer = function (buffer) {\n  var reader = new BufferReader(buffer)\n  return this.fromBufferReader(reader)\n}\n\nTransaction.prototype.fromBufferReader = function (reader) {\n  $.checkArgument(!reader.finished(), 'No transaction data received')\n  var i, sizeTxIns, sizeTxOuts\n\n  this.version = reader.readInt32LE()\n  sizeTxIns = reader.readVarintNum()\n  for (i = 0; i < sizeTxIns; i++) {\n    var input = Input.fromBufferReader(reader)\n    this.inputs.push(input)\n  }\n  sizeTxOuts = reader.readVarintNum()\n  for (i = 0; i < sizeTxOuts; i++) {\n    this.outputs.push(Output.fromBufferReader(reader))\n  }\n  this.nLockTime = reader.readUInt32LE()\n  return this\n}\n\nTransaction.prototype.toObject = Transaction.prototype.toJSON = function toObject () {\n  var inputs = []\n  this.inputs.forEach(function (input) {\n    inputs.push(input.toObject())\n  })\n  var outputs = []\n  this.outputs.forEach(function (output) {\n    outputs.push(output.toObject())\n  })\n  var obj = {\n    hash: this.hash,\n    version: this.version,\n    inputs: inputs,\n    outputs: outputs,\n    nLockTime: this.nLockTime\n  }\n  if (this._changeScript) {\n    obj.changeScript = this._changeScript.toString()\n  }\n  if (!_.isUndefined(this._changeIndex)) {\n    obj.changeIndex = this._changeIndex\n  }\n  if (!_.isUndefined(this._fee)) {\n    obj.fee = this._fee\n  }\n  return obj\n}\n\nTransaction.prototype.fromObject = function fromObject (arg) {\n  $.checkArgument(_.isObject(arg) || arg instanceof Transaction)\n  var self = this\n  var transaction\n  if (arg instanceof Transaction) {\n    transaction = transaction.toObject()\n  } else {\n    transaction = arg\n  }\n  _.each(transaction.inputs, function (input) {\n    if (!input.output || !input.output.script) {\n      self.uncheckedAddInput(new Input(input))\n      return\n    }\n    var script = new Script(input.output.script)\n    var txin\n    if (script.isPublicKeyHashOut()) {\n      txin = new Input.PublicKeyHash(input)\n    } else if (script.isScriptHashOut() && input.publicKeys && input.threshold) {\n      txin = new Input.MultiSigScriptHash(\n        input, input.publicKeys, input.threshold, input.signatures\n      )\n    } else if (script.isPublicKeyOut()) {\n      txin = new Input.PublicKey(input)\n    } else {\n      throw new errors.Transaction.Input.UnsupportedScript(input.output.script)\n    }\n    self.addInput(txin)\n  })\n  _.each(transaction.outputs, function (output) {\n    self.addOutput(new Output(output))\n  })\n  if (transaction.changeIndex) {\n    this._changeIndex = transaction.changeIndex\n  }\n  if (transaction.changeScript) {\n    this._changeScript = new Script(transaction.changeScript)\n  }\n  if (transaction.fee) {\n    this._fee = transaction.fee\n  }\n  this.nLockTime = transaction.nLockTime\n  this.version = transaction.version\n  this._checkConsistency(arg)\n  return this\n}\n\nTransaction.prototype._checkConsistency = function (arg) {\n  if (!_.isUndefined(this._changeIndex)) {\n    $.checkState(this._changeScript, 'Change script is expected.')\n    $.checkState(this.outputs[this._changeIndex], 'Change index points to undefined output.')\n    $.checkState(this.outputs[this._changeIndex].script.toString() ===\n      this._changeScript.toString(), 'Change output has an unexpected script.')\n  }\n  if (arg && arg.hash) {\n    $.checkState(arg.hash === this.hash, 'Hash in object does not match transaction hash.')\n  }\n}\n\n/**\n * Sets nLockTime so that transaction is not valid until the desired date(a\n * timestamp in seconds since UNIX epoch is also accepted)\n *\n * @param {Date | Number} time\n * @return {Transaction} this\n */\nTransaction.prototype.lockUntilDate = function (time) {\n  $.checkArgument(time)\n  if (_.isNumber(time) && time < Transaction.NLOCKTIME_BLOCKHEIGHT_LIMIT) {\n    throw new errors.Transaction.LockTimeTooEarly()\n  }\n  if (_.isDate(time)) {\n    time = time.getTime() / 1000\n  }\n\n  for (var i = 0; i < this.inputs.length; i++) {\n    if (this.inputs[i].sequenceNumber === Input.DEFAULT_SEQNUMBER) {\n      this.inputs[i].sequenceNumber = Input.DEFAULT_LOCKTIME_SEQNUMBER\n    }\n  }\n\n  this.nLockTime = time\n  return this\n}\n\n/**\n * Sets nLockTime so that transaction is not valid until the desired block\n * height.\n *\n * @param {Number} height\n * @return {Transaction} this\n */\nTransaction.prototype.lockUntilBlockHeight = function (height) {\n  $.checkArgument(_.isNumber(height))\n  if (height >= Transaction.NLOCKTIME_BLOCKHEIGHT_LIMIT) {\n    throw new errors.Transaction.BlockHeightTooHigh()\n  }\n  if (height < 0) {\n    throw new errors.Transaction.NLockTimeOutOfRange()\n  }\n\n  for (var i = 0; i < this.inputs.length; i++) {\n    if (this.inputs[i].sequenceNumber === Input.DEFAULT_SEQNUMBER) {\n      this.inputs[i].sequenceNumber = Input.DEFAULT_LOCKTIME_SEQNUMBER\n    }\n  }\n\n  this.nLockTime = height\n  return this\n}\n\n/**\n *  Returns a semantic version of the transaction's nLockTime.\n *  @return {Number|Date}\n *  If nLockTime is 0, it returns null,\n *  if it is < 500000000, it returns a block height (number)\n *  else it returns a Date object.\n */\nTransaction.prototype.getLockTime = function () {\n  if (!this.nLockTime) {\n    return null\n  }\n  if (this.nLockTime < Transaction.NLOCKTIME_BLOCKHEIGHT_LIMIT) {\n    return this.nLockTime\n  }\n  return new Date(1000 * this.nLockTime)\n}\n\nTransaction.prototype.fromString = function (string) {\n  this.fromBuffer(buffer.Buffer.from(string, 'hex'))\n}\n\nTransaction.prototype._newTransaction = function () {\n  this.version = CURRENT_VERSION\n  this.nLockTime = DEFAULT_NLOCKTIME\n}\n\n/* Transaction creation interface */\n\n/**\n * @typedef {Object} Transaction~fromObject\n * @property {string} prevTxId\n * @property {number} outputIndex\n * @property {(Buffer|string|Script)} script\n * @property {number} satoshis\n */\n\n/**\n * Add an input to this transaction. This is a high level interface\n * to add an input, for more control, use @{link Transaction#addInput}.\n *\n * Can receive, as output information, the output of bitcoind's `listunspent` command,\n * and a slightly fancier format recognized by bsv:\n *\n * ```\n * {\n *  address: 'mszYqVnqKoQx4jcTdJXxwKAissE3Jbrrc1',\n *  txId: 'a477af6b2667c29670467e4e0728b685ee07b240235771862318e29ddbe58458',\n *  outputIndex: 0,\n *  script: Script.empty(),\n *  satoshis: 1020000\n * }\n * ```\n * Where `address` can be either a string or a bsv Address object. The\n * same is true for `script`, which can be a string or a bsv Script.\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @example\n * ```javascript\n * var transaction = new Transaction();\n *\n * // From a pay to public key hash output from bitcoind's listunspent\n * transaction.from({'txid': '0000...', vout: 0, amount: 0.1, scriptPubKey: 'OP_DUP ...'});\n *\n * // From a pay to public key hash output\n * transaction.from({'txId': '0000...', outputIndex: 0, satoshis: 1000, script: 'OP_DUP ...'});\n *\n * // From a multisig P2SH output\n * transaction.from({'txId': '0000...', inputIndex: 0, satoshis: 1000, script: '... OP_HASH'},\n *                  ['03000...', '02000...'], 2);\n * ```\n *\n * @param {(Array.<Transaction~fromObject>|Transaction~fromObject)} utxo\n * @param {Array=} pubkeys\n * @param {number=} threshold\n */\nTransaction.prototype.from = function (utxo, pubkeys, threshold) {\n  if (_.isArray(utxo)) {\n    var self = this\n    _.each(utxo, function (utxo) {\n      self.from(utxo, pubkeys, threshold)\n    })\n    return this\n  }\n  var exists = _.some(this.inputs, function (input) {\n    // TODO: Maybe prevTxId should be a string? Or defined as read only property?\n    return input.prevTxId.toString('hex') === utxo.txId && input.outputIndex === utxo.outputIndex\n  })\n  if (exists) {\n    return this\n  }\n  if (pubkeys && threshold) {\n    this._fromMultisigUtxo(utxo, pubkeys, threshold)\n  } else {\n    this._fromNonP2SH(utxo)\n  }\n  return this\n}\n\nTransaction.prototype._fromNonP2SH = function (utxo) {\n  var Clazz\n  utxo = new UnspentOutput(utxo)\n  if (utxo.script.isPublicKeyHashOut()) {\n    Clazz = PublicKeyHashInput\n  } else if (utxo.script.isPublicKeyOut()) {\n    Clazz = PublicKeyInput\n  } else {\n    Clazz = Input\n  }\n  this.addInput(new Clazz({\n    output: new Output({\n      script: utxo.script,\n      satoshis: utxo.satoshis\n    }),\n    prevTxId: utxo.txId,\n    outputIndex: utxo.outputIndex,\n    script: Script.empty()\n  }))\n}\n\nTransaction.prototype._fromMultisigUtxo = function (utxo, pubkeys, threshold) {\n  $.checkArgument(threshold <= pubkeys.length,\n    'Number of required signatures must be greater than the number of public keys')\n  var Clazz\n  utxo = new UnspentOutput(utxo)\n  if (utxo.script.isMultisigOut()) {\n    Clazz = MultiSigInput\n  } else if (utxo.script.isScriptHashOut()) {\n    Clazz = MultiSigScriptHashInput\n  } else {\n    throw new Error('@TODO')\n  }\n  this.addInput(new Clazz({\n    output: new Output({\n      script: utxo.script,\n      satoshis: utxo.satoshis\n    }),\n    prevTxId: utxo.txId,\n    outputIndex: utxo.outputIndex,\n    script: Script.empty()\n  }, pubkeys, threshold))\n}\n\n/**\n * Add an input to this transaction. The input must be an instance of the `Input` class.\n * It should have information about the Output that it's spending, but if it's not already\n * set, two additional parameters, `outputScript` and `satoshis` can be provided.\n *\n * @param {Input} input\n * @param {String|Script} outputScript\n * @param {number} satoshis\n * @return Transaction this, for chaining\n */\nTransaction.prototype.addInput = function (input, outputScript, satoshis) {\n  $.checkArgumentType(input, Input, 'input')\n  if (!input.output && (_.isUndefined(outputScript) || _.isUndefined(satoshis))) {\n    throw new errors.Transaction.NeedMoreInfo('Need information about the UTXO script and satoshis')\n  }\n  if (!input.output && outputScript && !_.isUndefined(satoshis)) {\n    outputScript = outputScript instanceof Script ? outputScript : new Script(outputScript)\n    $.checkArgumentType(satoshis, 'number', 'satoshis')\n    input.output = new Output({\n      script: outputScript,\n      satoshis: satoshis\n    })\n  }\n  return this.uncheckedAddInput(input)\n}\n\n/**\n * Add an input to this transaction, without checking that the input has information about\n * the output that it's spending.\n *\n * @param {Input} input\n * @return Transaction this, for chaining\n */\nTransaction.prototype.uncheckedAddInput = function (input) {\n  $.checkArgumentType(input, Input, 'input')\n  this.inputs.push(input)\n  this._inputAmount = undefined\n  this._updateChangeOutput()\n  return this\n}\n\n/**\n * Returns true if the transaction has enough info on all inputs to be correctly validated\n *\n * @return {boolean}\n */\nTransaction.prototype.hasAllUtxoInfo = function () {\n  return _.every(this.inputs.map(function (input) {\n    return !!input.output\n  }))\n}\n\n/**\n * Manually set the fee for this transaction. Beware that this resets all the signatures\n * for inputs (in further versions, SIGHASH_SINGLE or SIGHASH_NONE signatures will not\n * be reset).\n *\n * @param {number} amount satoshis to be sent\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.fee = function (amount) {\n  $.checkArgument(_.isNumber(amount), 'amount must be a number')\n  this._fee = amount\n  this._updateChangeOutput()\n  return this\n}\n\n/**\n * Manually set the fee per KB for this transaction. Beware that this resets all the signatures\n * for inputs (in further versions, SIGHASH_SINGLE or SIGHASH_NONE signatures will not\n * be reset).\n *\n * @param {number} amount satoshis per KB to be sent\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.feePerKb = function (amount) {\n  $.checkArgument(_.isNumber(amount), 'amount must be a number')\n  this._feePerKb = amount\n  this._updateChangeOutput()\n  return this\n}\n\n/* Output management */\n\n/**\n * Set the change address for this transaction\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @param {Address} address An address for change to be sent to.\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.change = function (address) {\n  $.checkArgument(address, 'address is required')\n  this._changeScript = Script.fromAddress(address)\n  this._updateChangeOutput()\n  return this\n}\n\n/**\n * @return {Output} change output, if it exists\n */\nTransaction.prototype.getChangeOutput = function () {\n  if (!_.isUndefined(this._changeIndex)) {\n    return this.outputs[this._changeIndex]\n  }\n  return null\n}\n\n/**\n * @typedef {Object} Transaction~toObject\n * @property {(string|Address)} address\n * @property {number} satoshis\n */\n\n/**\n * Add an output to the transaction.\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @param {(string|Address|Array.<Transaction~toObject>)} address\n * @param {number} amount in satoshis\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.to = function (address, amount) {\n  if (_.isArray(address)) {\n    var self = this\n    _.each(address, function (to) {\n      self.to(to.address, to.satoshis)\n    })\n    return this\n  }\n\n  $.checkArgument(\n    JSUtil.isNaturalNumber(amount),\n    'Amount is expected to be a positive integer'\n  )\n  this.addOutput(new Output({\n    script: Script(new Address(address)),\n    satoshis: amount\n  }))\n  return this\n}\n\n/**\n * Add an OP_RETURN output to the transaction.\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @param {Buffer|string} value the data to be stored in the OP_RETURN output.\n *    In case of a string, the UTF-8 representation will be stored\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.addData = function (value) {\n  this.addOutput(new Output({\n    script: Script.buildDataOut(value),\n    satoshis: 0\n  }))\n  return this\n}\n\n/**\n * Add an OP_FALSE | OP_RETURN output to the transaction.\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @param {Buffer|string} value the data to be stored in the OP_RETURN output.\n *    In case of a string, the UTF-8 representation will be stored\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.addSafeData = function (value) {\n  this.addOutput(new Output({\n    script: Script.buildSafeDataOut(value),\n    satoshis: 0\n  }))\n  return this\n}\n\n/**\n * Add an output to the transaction.\n *\n * @param {Output} output the output to add.\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.addOutput = function (output) {\n  $.checkArgumentType(output, Output, 'output')\n  this._addOutput(output)\n  this._updateChangeOutput()\n  return this\n}\n\n/**\n * Remove all outputs from the transaction.\n *\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.clearOutputs = function () {\n  this.outputs = []\n  this._clearSignatures()\n  this._outputAmount = undefined\n  this._changeIndex = undefined\n  this._updateChangeOutput()\n  return this\n}\n\nTransaction.prototype._addOutput = function (output) {\n  this.outputs.push(output)\n  this._outputAmount = undefined\n}\n\n/**\n * Calculates or gets the total output amount in satoshis\n *\n * @return {Number} the transaction total output amount\n */\nTransaction.prototype._getOutputAmount = function () {\n  if (_.isUndefined(this._outputAmount)) {\n    var self = this\n    this._outputAmount = 0\n    _.each(this.outputs, function (output) {\n      self._outputAmount += output.satoshis\n    })\n  }\n  return this._outputAmount\n}\n\n/**\n * Calculates or gets the total input amount in satoshis\n *\n * @return {Number} the transaction total input amount\n */\nTransaction.prototype._getInputAmount = function () {\n  if (_.isUndefined(this._inputAmount)) {\n    var self = this\n    this._inputAmount = 0\n    _.each(this.inputs, function (input) {\n      if (_.isUndefined(input.output)) {\n        throw new errors.Transaction.Input.MissingPreviousOutput()\n      }\n      self._inputAmount += input.output.satoshis\n    })\n  }\n  return this._inputAmount\n}\n\nTransaction.prototype._updateChangeOutput = function () {\n  if (this.isSeal) {\n    throw new errors.Transaction.TransactionAlreadySealed()\n  }\n\n  if (!this._changeScript) {\n    return\n  }\n  this._clearSignatures()\n  if (!_.isUndefined(this._changeIndex)) {\n    this._removeOutput(this._changeIndex)\n  }\n  this._changeIndex = this.outputs.length\n  this._addOutput(new Output({\n    script: this._changeScript,\n    satoshis: 0\n  }))\n  var available = this._getUnspentValue()\n  var fee = this.getFee()\n  var changeAmount = available - fee\n  this._removeOutput(this._changeIndex)\n  this._changeIndex = undefined\n  if (changeAmount >= Transaction.DUST_AMOUNT) {\n    this._changeIndex = this.outputs.length\n    this._addOutput(new Output({\n      script: this._changeScript,\n      satoshis: changeAmount\n    }))\n  }\n}\n/**\n * Calculates the fee of the transaction.\n *\n * If there's a fixed fee set, return that.\n *\n * If there is no change output set, the fee is the\n * total value of the outputs minus inputs. Note that\n * a serialized transaction only specifies the value\n * of its outputs. (The value of inputs are recorded\n * in the previous transaction outputs being spent.)\n * This method therefore raises a \"MissingPreviousOutput\"\n * error when called on a serialized transaction.\n *\n * If there's no fee set and no change address,\n * estimate the fee based on size.\n *\n * @return {Number} fee of this transaction in satoshis\n */\nTransaction.prototype.getFee = function () {\n  if (this.isCoinbase()) {\n    return 0\n  }\n  if (!_.isUndefined(this._fee)) {\n    return this._fee\n  }\n  // if no change output is set, fees should equal all the unspent amount\n  if (!this._changeScript) {\n    return this._getUnspentValue()\n  }\n  return this._estimateFee()\n}\n\n/**\n * Estimates fee from serialized transaction size in bytes.\n */\nTransaction.prototype._estimateFee = function () {\n  var estimatedSize = this._estimateSize()\n  return Math.ceil(estimatedSize / 1000 * (this._feePerKb || Transaction.FEE_PER_KB))\n}\n\nTransaction.prototype._getUnspentValue = function () {\n  return this._getInputAmount() - this._getOutputAmount()\n}\n\nTransaction.prototype._clearSignatures = function () {\n  _.each(this.inputs, function (input) {\n    input.clearSignatures()\n  })\n}\n\n// 4    version\n// ???  num inputs (VARINT)\n// --- input list ---\n//\n// ???  num outputs (VARINT)\n// --- output list ---\n//      8       value\n//      ???     script size (VARINT)\n//      ???     script\n//\n// 4    locktime\nTransaction.prototype._estimateSize = function () {\n  var result = 4 + 4 // size of version + size of locktime\n  result += Varint(this.inputs.length).toBuffer().length\n  result += Varint(this.outputs.length).toBuffer().length\n  _.each(this.inputs, function (input) {\n    result += input._estimateSize()\n  })\n  _.each(this.outputs, function (output) {\n    result += output.getSize()\n  })\n  return result\n}\n\nTransaction.prototype._removeOutput = function (index) {\n  var output = this.outputs[index]\n  this.outputs = _.without(this.outputs, output)\n  this._outputAmount = undefined\n}\n\nTransaction.prototype.removeOutput = function (index) {\n  this._removeOutput(index)\n  this._updateChangeOutput()\n}\n\n/**\n * Sort a transaction's inputs and outputs according to BIP69\n *\n * @see {https://github.com/bitcoin/bips/blob/master/bip-0069.mediawiki}\n * @return {Transaction} this\n */\nTransaction.prototype.sort = function () {\n  this.sortInputs(function (inputs) {\n    var copy = Array.prototype.concat.apply([], inputs)\n    copy.sort(function (first, second) {\n      return first.prevTxId.compare(second.prevTxId) ||\n        first.outputIndex - second.outputIndex\n    })\n    return copy\n  })\n  this.sortOutputs(function (outputs) {\n    var copy = Array.prototype.concat.apply([], outputs)\n    copy.sort(function (first, second) {\n      return first.satoshis - second.satoshis ||\n        first.script.toBuffer().compare(second.script.toBuffer())\n    })\n    return copy\n  })\n  return this\n}\n\n/**\n * Randomize this transaction's outputs ordering. The shuffling algorithm is a\n * version of the Fisher-Yates shuffle.\n *\n * @return {Transaction} this\n */\nTransaction.prototype.shuffleOutputs = function () {\n  return this.sortOutputs(_.shuffle)\n}\n\n/**\n * Sort this transaction's outputs, according to a given sorting function that\n * takes an array as argument and returns a new array, with the same elements\n * but with a different order. The argument function MUST NOT modify the order\n * of the original array\n *\n * @param {Function} sortingFunction\n * @return {Transaction} this\n */\nTransaction.prototype.sortOutputs = function (sortingFunction) {\n  var outs = sortingFunction(this.outputs)\n  return this._newOutputOrder(outs)\n}\n\n/**\n * Sort this transaction's inputs, according to a given sorting function that\n * takes an array as argument and returns a new array, with the same elements\n * but with a different order.\n *\n * @param {Function} sortingFunction\n * @return {Transaction} this\n */\nTransaction.prototype.sortInputs = function (sortingFunction) {\n  this.inputs = sortingFunction(this.inputs)\n  this._clearSignatures()\n  return this\n}\n\nTransaction.prototype._newOutputOrder = function (newOutputs) {\n  var isInvalidSorting = (this.outputs.length !== newOutputs.length ||\n                          _.difference(this.outputs, newOutputs).length !== 0)\n  if (isInvalidSorting) {\n    throw new errors.Transaction.InvalidSorting()\n  }\n\n  if (!_.isUndefined(this._changeIndex)) {\n    var changeOutput = this.outputs[this._changeIndex]\n    this._changeIndex = newOutputs.indexOf(changeOutput)\n  }\n\n  this.outputs = newOutputs\n  return this\n}\n\nTransaction.prototype.removeInput = function (txId, outputIndex) {\n  var index\n  if (!outputIndex && _.isNumber(txId)) {\n    index = txId\n  } else {\n    index = _.findIndex(this.inputs, function (input) {\n      return input.prevTxId.toString('hex') === txId && input.outputIndex === outputIndex\n    })\n  }\n  if (index < 0 || index >= this.inputs.length) {\n    throw new errors.Transaction.InvalidIndex(index, this.inputs.length)\n  }\n  var input = this.inputs[index]\n  this.inputs = _.without(this.inputs, input)\n  this._inputAmount = undefined\n  this._updateChangeOutput()\n}\n\n/* Signature handling */\n\n/**\n * Sign the transaction using one or more private keys.\n *\n * It tries to sign each input, verifying that the signature will be valid\n * (matches a public key).\n *\n * @param {Array|String|PrivateKey} privateKey\n * @param {number} sigtype\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.sign = function (privateKey, sigtype) {\n  $.checkState(this.hasAllUtxoInfo(), 'Not all utxo information is available to sign the transaction.')\n  var self = this\n  if (_.isArray(privateKey)) {\n    _.each(privateKey, function (privateKey) {\n      self.sign(privateKey, sigtype)\n    })\n    return this\n  }\n  _.each(this.getSignatures(privateKey, sigtype), function (signature) {\n    self.applySignature(signature)\n  })\n\n  this._privateKey = privateKey\n  this._sigType = sigtype\n  return this\n}\n\nTransaction.prototype.getSignatures = function (privKey, sigtype) {\n  privKey = new PrivateKey(privKey)\n  // By default, signs using ALL|FORKID\n  sigtype = sigtype || (Signature.SIGHASH_ALL | Signature.SIGHASH_FORKID)\n  var transaction = this\n  var results = []\n  var hashData = Hash.sha256ripemd160(privKey.publicKey.toBuffer())\n  _.each(this.inputs, function forEachInput (input, index) {\n    _.each(input.getSignatures(transaction, privKey, index, sigtype, hashData), function (signature) {\n      results.push(signature)\n    })\n  })\n  return results\n}\n\n/**\n * Add a signature to the transaction\n *\n * @param {Object} signature\n * @param {number} signature.inputIndex\n * @param {number} signature.sigtype\n * @param {PublicKey} signature.publicKey\n * @param {Signature} signature.signature\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.applySignature = function (signature) {\n  this.inputs[signature.inputIndex].addSignature(this, signature)\n  return this\n}\n\nTransaction.prototype.isFullySigned = function () {\n  _.each(this.inputs, function (input) {\n    if (input.isFullySigned === Input.prototype.isFullySigned) {\n      throw new errors.Transaction.UnableToVerifySignature(\n        'Unrecognized script kind, or not enough information to execute script.' +\n        'This usually happens when creating a transaction from a serialized transaction'\n      )\n    }\n  })\n  return _.every(_.map(this.inputs, function (input) {\n    return input.isFullySigned()\n  }))\n}\n\nTransaction.prototype.isValidSignature = function (signature) {\n  var self = this\n  if (this.inputs[signature.inputIndex].isValidSignature === Input.prototype.isValidSignature) {\n    throw new errors.Transaction.UnableToVerifySignature(\n      'Unrecognized script kind, or not enough information to execute script.' +\n      'This usually happens when creating a transaction from a serialized transaction'\n    )\n  }\n  return this.inputs[signature.inputIndex].isValidSignature(self, signature)\n}\n\n/**\n * @returns {bool} whether the signature is valid for this transaction input\n */\nTransaction.prototype.verifySignature = function (sig, pubkey, nin, subscript, satoshisBN, flags) {\n  return Sighash.verify(this, sig, pubkey, nin, subscript, satoshisBN, flags)\n}\n\n/**\n * Check that a transaction passes basic sanity tests. If not, return a string\n * describing the error. This function contains the same logic as\n * CheckTransaction in bitcoin core.\n */\nTransaction.prototype.verify = function () {\n  // Basic checks that don't depend on any context\n  if (this.inputs.length === 0) {\n    return 'transaction txins empty'\n  }\n\n  if (this.outputs.length === 0) {\n    return 'transaction txouts empty'\n  }\n\n  // Check for negative or overflow output values\n  var valueoutbn = new BN(0)\n  for (var i = 0; i < this.outputs.length; i++) {\n    var txout = this.outputs[i]\n\n    if (txout.invalidSatoshis()) {\n      return 'transaction txout ' + i + ' satoshis is invalid'\n    }\n    if (txout._satoshisBN.gt(new BN(Transaction.MAX_MONEY, 10))) {\n      return 'transaction txout ' + i + ' greater than MAX_MONEY'\n    }\n    valueoutbn = valueoutbn.add(txout._satoshisBN)\n    if (valueoutbn.gt(new BN(Transaction.MAX_MONEY))) {\n      return 'transaction txout ' + i + ' total output greater than MAX_MONEY'\n    }\n  }\n\n  // Size limits\n  if (this.toBuffer().length > MAX_BLOCK_SIZE) {\n    return 'transaction over the maximum block size'\n  }\n\n  // Check for duplicate inputs\n  var txinmap = {}\n  for (i = 0; i < this.inputs.length; i++) {\n    var txin = this.inputs[i]\n\n    var inputid = txin.prevTxId + ':' + txin.outputIndex\n    if (!_.isUndefined(txinmap[inputid])) {\n      return 'transaction input ' + i + ' duplicate input'\n    }\n    txinmap[inputid] = true\n  }\n\n  var isCoinbase = this.isCoinbase()\n  if (isCoinbase) {\n    var buf = this.inputs[0]._scriptBuffer\n    if (buf.length < 2 || buf.length > 100) {\n      return 'coinbase transaction script size invalid'\n    }\n  } else {\n    for (i = 0; i < this.inputs.length; i++) {\n      if (this.inputs[i].isNull()) {\n        return 'transaction input ' + i + ' has null input'\n      }\n    }\n  }\n  return true\n}\n\n/**\n * Analogous to bitcoind's IsCoinBase function in transaction.h\n */\nTransaction.prototype.isCoinbase = function () {\n  return (this.inputs.length === 1 && this.inputs[0].isNull())\n}\n\n/**\n *\n * @param {number} inputIndex\n * @param {Script|(tx, output) => Script} unlockScriptOrCallback  unlockScript or a callback returns unlockScript\n * @returns unlockScript of the special input\n */\nTransaction.prototype.setInputScript = function (inputIndex, unlockScriptOrCallback) {\n  if (unlockScriptOrCallback instanceof Function) {\n    this.unlockScriptCallbackMap.set(inputIndex, unlockScriptOrCallback)\n    this.inputs[inputIndex].setScript(unlockScriptOrCallback(this, this.inputs[inputIndex].output))\n  } else {\n    this.inputs[inputIndex].setScript(unlockScriptOrCallback)\n  }\n\n  this._updateChangeOutput()\n  return this\n}\n\nTransaction.prototype.setInputSequence = function (inputIndex, sequence) {\n  this.inputs[inputIndex].sequenceNumber = sequence\n  return this\n}\n\n/**\n *\n * @param {number} outputIndex\n * @param {Output|(tx) => Output} outputOrcb  output or a callback returns output\n * @returns output\n */\nTransaction.prototype.setOutput = function (outputIndex, outputOrcb) {\n  if (outputOrcb instanceof Function) {\n    this.outputCallbackMap.set(outputIndex, outputOrcb)\n    this.outputs[outputIndex] = outputOrcb(this)\n  } else {\n    this.outputs[outputIndex] = outputOrcb\n  }\n\n  this._updateChangeOutput()\n  return this\n}\n\n/**\n * Seal a transaction. After the transaction is sealed, except for the unlock script entered,\n * other attributes of the transaction cannot be modified\n */\nTransaction.prototype.seal = function () {\n  const self = this\n\n  this.outputCallbackMap.forEach(function (outputCallback, key) {\n    self.outputs[key] = outputCallback(self)\n  })\n\n  this.unlockScriptCallbackMap.forEach(function (unlockScriptCallback, key) {\n    self.inputs[key].setScript(unlockScriptCallback(self, self.inputs[key].output))\n  })\n\n  if (this._privateKey) {\n    this.sign(this._privateKey, this._sigType)\n  }\n\n  this.isSeal = true\n\n  return this\n}\n\nTransaction.prototype.setLockTime = function (nLockTime) {\n  this.nLockTime = nLockTime\n  return this\n}\n\n/**\n *\n * @returns satoshis of change output\n */\nTransaction.prototype.getChangeAmount = function () {\n  if (_.isUndefined(this._changeIndex)) {\n    return 0\n  }\n\n  return this.outputs[this._changeIndex].satoshis\n}\n\n/**\n *\n * @returns estimate fee by transaction size\n */\nTransaction.prototype.getEstimateFee = function () {\n  return this._estimateFee()\n}\n\n/**\n *\n * @param {number} feePerKb the fee per KB for this transaction\n * @returns true or false\n */\nTransaction.prototype.checkFeeRate = function (feePerKb) {\n  const fee = this._getUnspentValue()\n\n  var estimatedSize = this._estimateSize()\n  var expectedRate = (feePerKb || this._feePerKb || Transaction.FEE_PER_KB) / 1000\n  var realFeeRate = fee / estimatedSize\n  return realFeeRate >= expectedRate\n}\n\n/**\n *\n * @returns the serialization of all input outpoints\n */\nTransaction.prototype.prevouts = function () {\n  var writer = new BufferWriter()\n\n  _.each(this.inputs, function (input) {\n    writer.writeReverse(input.prevTxId)\n    writer.writeUInt32LE(input.outputIndex)\n  })\n\n  var buf = writer.toBuffer()\n  return buf.toString('hex')\n}\n\nmodule.exports = Transaction\n","module.exports = require('./transaction')\n\nmodule.exports.Input = require('./input')\nmodule.exports.Output = require('./output')\nmodule.exports.UnspentOutput = require('./unspentoutput')\nmodule.exports.Signature = require('./signature')\nmodule.exports.Sighash = require('./sighash')\n","'use strict'\n\nvar _ = require('../util/_')\n\nvar Script = require('./script')\nvar Opcode = require('../opcode')\nvar BN = require('../crypto/bn')\nvar Hash = require('../crypto/hash')\nvar Signature = require('../crypto/signature')\nvar PublicKey = require('../publickey')\nvar Stack = require('./stack')\n/**\n * Bitcoin transactions contain scripts. Each input has a script called the\n * scriptSig, and each output has a script called the scriptPubkey. To validate\n * an input, the input's script is concatenated with the referenced output script,\n * and the result is executed. If at the end of execution the stack contains a\n * \"true\" value, then the transaction is valid.\n *\n * The primary way to use this class is via the verify function.\n * e.g., Interpreter().verify( ... );\n */\nvar Interpreter = function Interpreter (obj) {\n  if (!(this instanceof Interpreter)) {\n    return new Interpreter(obj)\n  }\n  if (obj) {\n    this.initialize()\n    this.set(obj)\n  } else {\n    this.initialize()\n  }\n}\n\n/**\n * Verifies a Script by executing it and returns true if it is valid.\n * This function needs to be provided with the scriptSig and the scriptPubkey\n * separately.\n * @param {Script} scriptSig - the script's first part (corresponding to the tx input)\n * @param {Script} scriptPubkey - the script's last part (corresponding to the tx output)\n * @param {Transaction=} tx - the Transaction containing the scriptSig in one input (used\n *    to check signature validity for some opcodes like OP_CHECKSIG)\n * @param {number} nin - index of the transaction input containing the scriptSig verified.\n * @param {number} flags - evaluation flags. See Interpreter.SCRIPT_* constants\n * @param {number} satoshisBN - amount in satoshis of the input to be verified (when FORKID signhash is used)\n *\n * Translated from bitcoind's VerifyScript\n */\nInterpreter.prototype.verify = function (scriptSig, scriptPubkey, tx, nin, flags, satoshisBN, sighashScript) {\n  var Transaction = require('../transaction')\n\n  if (_.isUndefined(tx)) {\n    tx = new Transaction()\n  }\n  if (_.isUndefined(nin)) {\n    nin = 0\n  }\n  if (_.isUndefined(flags)) {\n    flags = 0\n  }\n\n  // If FORKID is enabled, we also ensure strict encoding.\n  if (flags & Interpreter.SCRIPT_ENABLE_SIGHASH_FORKID) {\n    flags |= Interpreter.SCRIPT_VERIFY_STRICTENC\n\n    // If FORKID is enabled, we need the input amount.\n    if (!satoshisBN) {\n      throw new Error('internal error - need satoshisBN to verify FORKID transactions')\n    }\n  }\n\n  this.set({\n    script: scriptSig,\n    tx: tx,\n    nin: nin,\n    flags: flags,\n    satoshisBN: satoshisBN,\n    sighashScript: sighashScript\n  })\n  var stackCopy\n\n  if ((flags & Interpreter.SCRIPT_VERIFY_SIGPUSHONLY) !== 0 && !scriptSig.isPushOnly()) {\n    this.errstr = 'SCRIPT_ERR_SIG_PUSHONLY'\n    return false\n  }\n\n  // evaluate scriptSig\n  if (!this.evaluate('scriptSig')) {\n    return false\n  }\n\n  if (flags & Interpreter.SCRIPT_VERIFY_P2SH) {\n    stackCopy = this.stack.copy()\n  }\n\n  var stack = this.stack\n  this.initialize()\n  this.set({\n    script: scriptPubkey,\n    stack: stack,\n    tx: tx,\n    nin: nin,\n    flags: flags,\n    satoshisBN: satoshisBN,\n    sighashScript: sighashScript\n  })\n\n  // evaluate scriptPubkey\n  if (!this.evaluate('scriptPubkey')) {\n    return false\n  }\n\n  if (this.stack.length === 0) {\n    this.errstr = 'SCRIPT_ERR_EVAL_FALSE_NO_RESULT'\n    return false\n  }\n\n  var buf = this.stack.stacktop(-1)\n  if (!Interpreter.castToBool(buf)) {\n    this.errstr = 'SCRIPT_ERR_EVAL_FALSE_IN_STACK'\n    return false\n  }\n\n  // Additional validation for spend-to-script-hash transactions:\n  if ((flags & Interpreter.SCRIPT_VERIFY_P2SH) && scriptPubkey.isScriptHashOut()) {\n    // scriptSig must be literals-only or validation fails\n    if (!scriptSig.isPushOnly()) {\n      this.errstr = 'SCRIPT_ERR_SIG_PUSHONLY'\n      return false\n    }\n\n    // stackCopy cannot be empty here, because if it was the\n    // P2SH  HASH <> EQUAL  scriptPubKey would be evaluated with\n    // an empty stack and the EvalScript above would return false.\n    if (stackCopy.length === 0) {\n      throw new Error('internal error - stack copy empty')\n    }\n\n    var redeemScriptSerialized = stackCopy.stacktop(-1)\n    var redeemScript = Script.fromBuffer(redeemScriptSerialized)\n    stackCopy.pop()\n\n    this.initialize()\n    this.set({\n      script: redeemScript,\n      stack: stackCopy,\n      tx: tx,\n      nin: nin,\n      flags: flags,\n      satoshisBN: satoshisBN\n    })\n\n    // evaluate redeemScript\n    if (!this.evaluate()) {\n      return false\n    }\n\n    if (stackCopy.length === 0) {\n      this.errstr = 'SCRIPT_ERR_EVAL_FALSE_NO_P2SH_STACK'\n      return false\n    }\n\n    if (!Interpreter.castToBool(stackCopy.stacktop(-1))) {\n      this.errstr = 'SCRIPT_ERR_EVAL_FALSE_IN_P2SH_STACK'\n      return false\n    }\n  }\n\n  // The CLEANSTACK check is only performed after potential P2SH evaluation,\n  // as the non-P2SH evaluation of a P2SH script will obviously not result in\n  // a clean stack (the P2SH inputs remain). The same holds for witness\n  // evaluation.\n  if ((flags & Interpreter.SCRIPT_VERIFY_CLEANSTACK) !== 0) {\n    // Disallow CLEANSTACK without P2SH, as otherwise a switch\n    // CLEANSTACK->P2SH+CLEANSTACK would be possible, which is not a\n    // softfork (and P2SH should be one).\n    // if ((flags & Interpreter.SCRIPT_VERIFY_P2SH) === 0) {\n    //   throw new Error('internal error - CLEANSTACK without P2SH')\n    // }\n\n    if (this.stack.length !== 1) {\n      this.errstr = 'SCRIPT_ERR_CLEANSTACK'\n      return false\n    }\n  }\n\n  return true\n}\n\nmodule.exports = Interpreter\n\nInterpreter.prototype.initialize = function (obj) {\n  this.stack = new Stack([])\n  this.altstack = new Stack([])\n  this.pc = 0\n  this.pbegincodehash = 0\n  this.nOpCount = 0\n  this.vfExec = []\n  this.errstr = ''\n  this.flags = 0\n  // if OP_RETURN is found in executed branches after genesis is activated,\n  // we still have to check if the rest of the script is valid\n  this.nonTopLevelReturnAfterGenesis = false\n}\n\nInterpreter.prototype.set = function (obj) {\n  this.script = obj.script || this.script\n  this.tx = obj.tx || this.tx\n  this.nin = typeof obj.nin !== 'undefined' ? obj.nin : this.nin\n  this.satoshisBN = obj.satoshisBN || this.satoshisBN\n  this.stack = obj.stack || this.stack\n  this.altstack = obj.altstack || this.altstack\n  this.pc = typeof obj.pc !== 'undefined' ? obj.pc : this.pc\n  this.pbegincodehash = typeof obj.pbegincodehash !== 'undefined' ? obj.pbegincodehash : this.pbegincodehash\n  this.nOpCount = typeof obj.nOpCount !== 'undefined' ? obj.nOpCount : this.nOpCount\n  this.vfExec = obj.vfExec || this.vfExec\n  this.errstr = obj.errstr || this.errstr\n  this.flags = typeof obj.flags !== 'undefined' ? obj.flags : this.flags\n  this.sighashScript = obj.sighashScript || this.sighashScript\n}\n\nInterpreter.prototype.subscript = function () {\n  if (this.sighashScript) {\n    return new Script().set({\n      chunks: this.sighashScript.chunks\n    })\n  } else {\n    // Subset of script starting at the most recent codeseparator\n    // CScript scriptCode(pbegincodehash, pend);\n    return new Script().set({\n      chunks: this.script.chunks.slice(this.pbegincodehash)\n    })\n  }\n}\n\nInterpreter.getTrue = () => Buffer.from([1])\nInterpreter.getFalse = () => Buffer.from([])\n\nInterpreter.MAX_SCRIPT_ELEMENT_SIZE = 520\nInterpreter.MAXIMUM_ELEMENT_SIZE = 4\n\nInterpreter.LOCKTIME_THRESHOLD = 500000000\nInterpreter.LOCKTIME_THRESHOLD_BN = new BN(Interpreter.LOCKTIME_THRESHOLD)\n\n// flags taken from bitcoind\n// bitcoind commit: b5d1b1092998bc95313856d535c632ea5a8f9104\nInterpreter.SCRIPT_VERIFY_NONE = 0\n\n// Evaluate P2SH subscripts (softfork safe, BIP16).\nInterpreter.SCRIPT_VERIFY_P2SH = (1 << 0)\n\n// Passing a non-strict-DER signature or one with undefined hashtype to a checksig operation causes script failure.\n// Passing a pubkey that is not (0x04 + 64 bytes) or (0x02 or 0x03 + 32 bytes) to checksig causes that pubkey to be\n// skipped (not softfork safe: this flag can widen the validity of OP_CHECKSIG OP_NOT).\nInterpreter.SCRIPT_VERIFY_STRICTENC = (1 << 1)\n\n// Passing a non-strict-DER signature to a checksig operation causes script failure (softfork safe, BIP62 rule 1)\nInterpreter.SCRIPT_VERIFY_DERSIG = (1 << 2)\n\n// Passing a non-strict-DER signature or one with S > order/2 to a checksig operation causes script failure\n// (softfork safe, BIP62 rule 5).\nInterpreter.SCRIPT_VERIFY_LOW_S = (1 << 3)\n\n// verify dummy stack item consumed by CHECKMULTISIG is of zero-length (softfork safe, BIP62 rule 7).\nInterpreter.SCRIPT_VERIFY_NULLDUMMY = (1 << 4)\n\n// Using a non-push operator in the scriptSig causes script failure (softfork safe, BIP62 rule 2).\nInterpreter.SCRIPT_VERIFY_SIGPUSHONLY = (1 << 5)\n\n// Require minimal encodings for all push operations (OP_0... OP_16, OP_1NEGATE where possible, direct\n// pushes up to 75 bytes, OP_PUSHDATA up to 255 bytes, OP_PUSHDATA2 for anything larger). Evaluating\n// any other push causes the script to fail (BIP62 rule 3).\n// In addition, whenever a stack element is interpreted as a number, it must be of minimal length (BIP62 rule 4).\n// (softfork safe)\nInterpreter.SCRIPT_VERIFY_MINIMALDATA = (1 << 6)\n\n// Discourage use of NOPs reserved for upgrades (NOP1-10)\n//\n// Provided so that nodes can avoid accepting or mining transactions\n// containing executed NOP's whose meaning may change after a soft-fork,\n// thus rendering the script invalid; with this flag set executing\n// discouraged NOPs fails the script. This verification flag will never be\n// a mandatory flag applied to scripts in a block. NOPs that are not\n// executed, e.g.  within an unexecuted IF ENDIF block, are *not* rejected.\nInterpreter.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS = (1 << 7)\n\n// Require that only a single stack element remains after evaluation. This\n// changes the success criterion from \"At least one stack element must\n// remain, and when interpreted as a boolean, it must be true\" to \"Exactly\n// one stack element must remain, and when interpreted as a boolean, it must\n// be true\".\n// (softfork safe, BIP62 rule 6)\n// Note: CLEANSTACK should never be used without P2SH or WITNESS.\nInterpreter.SCRIPT_VERIFY_CLEANSTACK = (1 << 8)\n\n// CLTV See BIP65 for details.\nInterpreter.SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY = (1 << 9)\n\n// support CHECKSEQUENCEVERIFY opcode\n//\n// See BIP112 for details\nInterpreter.SCRIPT_VERIFY_CHECKSEQUENCEVERIFY = (1 << 10)\n\n// Segwit script only: Require the argument of OP_IF/NOTIF to be exactly\n// 0x01 or empty vector\n//\nInterpreter.SCRIPT_VERIFY_MINIMALIF = (1 << 13)\n\n// Signature(s) must be empty vector if an CHECK(MULTI)SIG operation failed\n//\nInterpreter.SCRIPT_VERIFY_NULLFAIL = (1 << 14)\n\n// Public keys in scripts must be compressed\nInterpreter.SCRIPT_VERIFY_COMPRESSED_PUBKEYTYPE = (1 << 15)\n\n// Do we accept signature using SIGHASH_FORKID\n//\nInterpreter.SCRIPT_ENABLE_SIGHASH_FORKID = (1 << 16)\n\n// Do we accept activate replay protection using a different fork id.\n//\nInterpreter.SCRIPT_ENABLE_REPLAY_PROTECTION = (1 << 17)\n\n// Enable new opcodes.\n//\nInterpreter.SCRIPT_ENABLE_MONOLITH_OPCODES = (1 << 18)\n\n// Are the Magnetic upgrade opcodes enabled?\n//\nInterpreter.SCRIPT_ENABLE_MAGNETIC_OPCODES = (1 << 19)\n\n/* Below flags apply in the context of BIP 68 */\n/**\n * If this flag set, CTxIn::nSequence is NOT interpreted as a relative\n * lock-time.\n */\nInterpreter.SEQUENCE_LOCKTIME_DISABLE_FLAG = (1 << 31)\n\n/**\n * If CTxIn::nSequence encodes a relative lock-time and this flag is set,\n * the relative lock-time has units of 512 seconds, otherwise it specifies\n * blocks with a granularity of 1.\n */\nInterpreter.SEQUENCE_LOCKTIME_TYPE_FLAG = (1 << 22)\n\n/**\n * If CTxIn::nSequence encodes a relative lock-time, this mask is applied to\n * extract that lock-time from the sequence field.\n */\nInterpreter.SEQUENCE_LOCKTIME_MASK = 0x0000ffff\n\nInterpreter.MAX_SCRIPT_SIZE = Number.MAX_SAFE_INTEGER\n\nInterpreter.MAX_OPCODE_COUNT = Number.MAX_SAFE_INTEGER\n\nInterpreter.castToBool = function (buf) {\n  for (var i = 0; i < buf.length; i++) {\n    if (buf[i] !== 0) {\n      // can be negative zero\n      if (i === buf.length - 1 && buf[i] === 0x80) {\n        return false\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * Translated from bitcoind's CheckSignatureEncoding\n */\nInterpreter.prototype.checkSignatureEncoding = function (buf) {\n  var sig\n\n  // Empty signature. Not strictly DER encoded, but allowed to provide a\n  // compact way to provide an invalid signature for use with CHECK(MULTI)SIG\n  if (buf.length === 0) {\n    return true\n  }\n\n  if ((this.flags & (Interpreter.SCRIPT_VERIFY_DERSIG | Interpreter.SCRIPT_VERIFY_LOW_S | Interpreter.SCRIPT_VERIFY_STRICTENC)) !== 0 && !Signature.isTxDER(buf)) {\n    this.errstr = 'SCRIPT_ERR_SIG_DER_INVALID_FORMAT'\n    return false\n  } else if ((this.flags & Interpreter.SCRIPT_VERIFY_LOW_S) !== 0) {\n    sig = Signature.fromTxFormat(buf)\n    if (!sig.hasLowS()) {\n      this.errstr = 'SCRIPT_ERR_SIG_DER_HIGH_S'\n      return false\n    }\n  } else if ((this.flags & Interpreter.SCRIPT_VERIFY_STRICTENC) !== 0) {\n    sig = Signature.fromTxFormat(buf)\n    if (!sig.hasDefinedHashtype()) {\n      this.errstr = 'SCRIPT_ERR_SIG_HASHTYPE'\n      return false\n    }\n\n    if (!(this.flags & Interpreter.SCRIPT_ENABLE_SIGHASH_FORKID) &&\n      (sig.nhashtype & Signature.SIGHASH_FORKID)) {\n      this.errstr = 'SCRIPT_ERR_ILLEGAL_FORKID'\n      return false\n    }\n\n    if ((this.flags & Interpreter.SCRIPT_ENABLE_SIGHASH_FORKID) &&\n      !(sig.nhashtype & Signature.SIGHASH_FORKID)) {\n      this.errstr = 'SCRIPT_ERR_MUST_USE_FORKID'\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * Translated from bitcoind's CheckPubKeyEncoding\n */\nInterpreter.prototype.checkPubkeyEncoding = function (buf) {\n  if ((this.flags & Interpreter.SCRIPT_VERIFY_STRICTENC) !== 0 && !PublicKey.isValid(buf)) {\n    this.errstr = 'SCRIPT_ERR_PUBKEYTYPE'\n    return false\n  }\n  return true\n}\n\n/**\n  *\n  * Check the buffer is minimally encoded (see https://github.com/bitcoincashorg/spec/blob/master/may-2018-reenabled-opcodes.md#op_bin2num)\n  *\n  *\n  */\n\nInterpreter._isMinimallyEncoded = function (buf, nMaxNumSize) {\n  nMaxNumSize = nMaxNumSize || Interpreter.MAXIMUM_ELEMENT_SIZE\n  if (buf.length > nMaxNumSize) {\n    return false\n  }\n\n  if (buf.length > 0) {\n    // Check that the number is encoded with the minimum possible number\n    // of bytes.\n    //\n    // If the most-significant-byte - excluding the sign bit - is zero\n    // then we're not minimal. Note how this test also rejects the\n    // negative-zero encoding, 0x80.\n    if ((buf[buf.length - 1] & 0x7f) === 0) {\n      // One exception: if there's more than one byte and the most\n      // significant bit of the second-most-significant-byte is set it\n      // would conflict with the sign bit. An example of this case is\n      // +-255, which encode to 0xff00 and 0xff80 respectively.\n      // (big-endian).\n      if (buf.length <= 1 || (buf[buf.length - 2] & 0x80) === 0) {\n        return false\n      }\n    }\n  }\n  return true\n}\n\n/**\n  *\n  * minimally encode the buffer content\n  *\n  * @param {number} nMaxNumSize (max allowed size)\n  */\nInterpreter._minimallyEncode = function (buf) {\n  if (buf.length === 0) {\n    return buf\n  }\n\n  // If the last byte is not 0x00 or 0x80, we are minimally encoded.\n  var last = buf[buf.length - 1]\n  if (last & 0x7f) {\n    return buf\n  }\n\n  // If the script is one byte long, then we have a zero, which encodes as an\n  // empty array.\n  if (buf.length === 1) {\n    return Buffer.from('')\n  }\n\n  // If the next byte has it sign bit set, then we are minimaly encoded.\n  if (buf[buf.length - 2] & 0x80) {\n    return buf\n  }\n\n  // We are not minimally encoded, we need to figure out how much to trim.\n  for (var i = buf.length - 1; i > 0; i--) {\n    // We found a non zero byte, time to encode.\n    if (buf[i - 1] !== 0) {\n      if (buf[i - 1] & 0x80) {\n        // We found a byte with it sign bit set so we need one more\n        // byte.\n        buf[i++] = last\n      } else {\n        // the sign bit is clear, we can use it.\n        buf[i - 1] |= last\n      }\n\n      return buf.slice(0, i)\n    }\n  }\n\n  // If we found the whole thing is zeros, then we have a zero.\n  return Buffer.from('')\n}\n\n/**\n * Based on bitcoind's EvalScript function, with the inner loop moved to\n * Interpreter.prototype.step()\n * bitcoind commit: b5d1b1092998bc95313856d535c632ea5a8f9104\n */\nInterpreter.prototype.evaluate = function (scriptType) {\n  // TODO: script size should be configurable. no magic numbers\n  if (this.script.toBuffer().length > Interpreter.MAX_SCRIPT_SIZE) {\n    this.errstr = 'SCRIPT_ERR_SCRIPT_SIZE'\n    return false\n  }\n\n  try {\n    while (this.pc < this.script.chunks.length) {\n      // fExec: if the opcode will be executed, i.e., not in a false branch\n      let thisStep = { pc: this.pc, fExec: (this.vfExec.indexOf(false) === -1), opcode: Opcode.fromNumber(this.script.chunks[this.pc].opcodenum) }\n\n      var fSuccess = this.step(scriptType)\n\n      this._callbackStep(thisStep)\n\n      if (!fSuccess) {\n        return false\n      }\n    }\n\n    // Size limits\n    if (this.stack.length + this.altstack.length > 1000) {\n      this.errstr = 'SCRIPT_ERR_STACK_SIZE'\n      return false\n    }\n  } catch (e) {\n    this.errstr = 'SCRIPT_ERR_UNKNOWN_ERROR: ' + e\n    return false\n  }\n\n  if (this.vfExec.length > 0) {\n    this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL'\n    return false\n  }\n\n  return true\n}\n\nInterpreter.prototype._callbackStep = function (thisStep) {\n  if (typeof this.stepListener === 'function') {\n    try {\n      this.stepListener(thisStep)\n    } catch (err) {\n      console.log(`Error in Step callback:${err}`)\n    }\n  }\n}\n\n/**\n * call to update stackvar\n * @param {*} stack\n */\nInterpreter.prototype._callbackStack = function (stack, pc, scriptType) {\n  if (typeof this.stackListener === 'function') {\n    try {\n      this.stackListener(stack, pc, scriptType)\n    } catch (err) {\n      var chunk = this.script.chunks[pc]\n      console.error(`Error: ${err} in _updateStack pc: ${pc}, opcode ${Opcode.fromNumber(chunk.opcodenum).toSafeString()}`)\n    }\n  }\n}\n\n/**\n * Checks a locktime parameter with the transaction's locktime.\n * There are two times of nLockTime: lock-by-blockheight and lock-by-blocktime,\n * distinguished by whether nLockTime < LOCKTIME_THRESHOLD = 500000000\n *\n * See the corresponding code on bitcoin core:\n * https://github.com/bitcoin/bitcoin/blob/ffd75adce01a78b3461b3ff05bcc2b530a9ce994/src/script/interpreter.cpp#L1129\n *\n * @param {BN} nLockTime the locktime read from the script\n * @return {boolean} true if the transaction's locktime is less than or equal to\n *                   the transaction's locktime\n */\nInterpreter.prototype.checkLockTime = function (nLockTime) {\n  // We want to compare apples to apples, so fail the script\n  // unless the type of nLockTime being tested is the same as\n  // the nLockTime in the transaction.\n  if (!(\n    (this.tx.nLockTime < Interpreter.LOCKTIME_THRESHOLD && nLockTime.lt(Interpreter.LOCKTIME_THRESHOLD_BN)) ||\n    (this.tx.nLockTime >= Interpreter.LOCKTIME_THRESHOLD && nLockTime.gte(Interpreter.LOCKTIME_THRESHOLD_BN))\n  )) {\n    return false\n  }\n\n  // Now that we know we're comparing apples-to-apples, the\n  // comparison is a simple numeric one.\n  if (nLockTime.gt(new BN(this.tx.nLockTime))) {\n    return false\n  }\n\n  // Finally the nLockTime feature can be disabled and thus\n  // CHECKLOCKTIMEVERIFY bypassed if every txin has been\n  // finalized by setting nSequence to maxint. The\n  // transaction would be allowed into the blockchain, making\n  // the opcode ineffective.\n  //\n  // Testing if this vin is not final is sufficient to\n  // prevent this condition. Alternatively we could test all\n  // inputs, but testing just this input minimizes the data\n  // required to prove correct CHECKLOCKTIMEVERIFY execution.\n  if (this.tx.inputs[this.nin].isFinal()) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * Checks a sequence parameter with the transaction's sequence.\n * @param {BN} nSequence the sequence read from the script\n * @return {boolean} true if the transaction's sequence is less than or equal to\n *                   the transaction's sequence\n */\nInterpreter.prototype.checkSequence = function (nSequence) {\n  // Relative lock times are supported by comparing the passed in operand to\n  // the sequence number of the input.\n  var txToSequence = this.tx.inputs[this.nin].sequenceNumber\n\n  // Fail if the transaction's version number is not set high enough to\n  // trigger BIP 68 rules.\n  if (this.tx.version < 2) {\n    return false\n  }\n\n  // Sequence numbers with their most significant bit set are not consensus\n  // constrained. Testing that the transaction's sequence number do not have\n  // this bit set prevents using this property to get around a\n  // CHECKSEQUENCEVERIFY check.\n  if (txToSequence & Interpreter.SEQUENCE_LOCKTIME_DISABLE_FLAG) {\n    return false\n  }\n\n  // Mask off any bits that do not have consensus-enforced meaning before\n  // doing the integer comparisons\n  var nLockTimeMask =\n    Interpreter.SEQUENCE_LOCKTIME_TYPE_FLAG | Interpreter.SEQUENCE_LOCKTIME_MASK\n  var txToSequenceMasked = new BN(txToSequence & nLockTimeMask)\n  var nSequenceMasked = nSequence.and(nLockTimeMask)\n\n  // There are two kinds of nSequence: lock-by-blockheight and\n  // lock-by-blocktime, distinguished by whether nSequenceMasked <\n  // CTxIn::SEQUENCE_LOCKTIME_TYPE_FLAG.\n  //\n  // We want to compare apples to apples, so fail the script unless the type\n  // of nSequenceMasked being tested is the same as the nSequenceMasked in the\n  // transaction.\n  var SEQUENCE_LOCKTIME_TYPE_FLAG_BN = new BN(Interpreter.SEQUENCE_LOCKTIME_TYPE_FLAG)\n\n  if (!((txToSequenceMasked.lt(SEQUENCE_LOCKTIME_TYPE_FLAG_BN) &&\n    nSequenceMasked.lt(SEQUENCE_LOCKTIME_TYPE_FLAG_BN)) ||\n    (txToSequenceMasked.gte(SEQUENCE_LOCKTIME_TYPE_FLAG_BN) &&\n      nSequenceMasked.gte(SEQUENCE_LOCKTIME_TYPE_FLAG_BN)))) {\n    return false\n  }\n\n  // Now that we know we're comparing apples-to-apples, the comparison is a\n  // simple numeric one.\n  if (nSequenceMasked.gt(txToSequenceMasked)) {\n    return false\n  }\n  return true\n}\n\nfunction padBufferToSize (buf, len) {\n  let b = buf\n  while (b.length < len) {\n    b = Buffer.concat([Buffer.from([0x00]), b])\n  }\n  return b\n}\n\n/**\n * Based on the inner loop of bitcoind's EvalScript function\n * bitcoind commit: b5d1b1092998bc95313856d535c632ea5a8f9104\n */\nInterpreter.prototype.step = function (scriptType) {\n  var self = this\n\n  function stacktop (i) {\n    return self.stack.stacktop(i)\n  }\n\n  function vartop (i) {\n    return self.stack.vartop(i)\n  }\n\n  function isOpcodeDisabled (opcode) {\n    switch (opcode) {\n      case Opcode.OP_2MUL:\n      case Opcode.OP_2DIV:\n\n        // Disabled opcodes.\n        return true\n\n      case Opcode.OP_INVERT:\n      case Opcode.OP_MUL:\n      case Opcode.OP_LSHIFT:\n      case Opcode.OP_RSHIFT:\n        // Opcodes that have been reenabled.\n        if ((self.flags & Interpreter.SCRIPT_ENABLE_MAGNETIC_OPCODES) === 0) {\n          return true\n        }\n        break\n      case Opcode.OP_DIV:\n      case Opcode.OP_MOD:\n      case Opcode.OP_SPLIT:\n      case Opcode.OP_CAT:\n      case Opcode.OP_AND:\n      case Opcode.OP_OR:\n      case Opcode.OP_XOR:\n      case Opcode.OP_BIN2NUM:\n      case Opcode.OP_NUM2BIN:\n        // Opcodes that have been reenabled.\n        if ((self.flags & Interpreter.SCRIPT_ENABLE_MONOLITH_OPCODES) === 0) {\n          return true\n        }\n        break\n      default:\n        break\n    }\n\n    return false\n  }\n\n  var fRequireMinimal = (this.flags & Interpreter.SCRIPT_VERIFY_MINIMALDATA) !== 0\n\n  // bool fExec = !count(vfExec.begin(), vfExec.end(), false);\n\n  var buf, buf1, buf2, spliced, n, x1, x2, bn, bn1, bn2, bufSig, bufPubkey, subscript\n  var sig, pubkey\n  var fValue, fSuccess\n  var var1, var2, var3\n\n  // Read instruction\n  var chunk = this.script.chunks[this.pc]\n  this.pc++\n  var opcodenum = chunk.opcodenum\n  if (_.isUndefined(opcodenum)) {\n    this.errstr = 'SCRIPT_ERR_UNDEFINED_OPCODE'\n    return false\n  }\n  if (chunk.buf && chunk.buf.length > Interpreter.MAX_SCRIPT_ELEMENT_SIZE) {\n    this.errstr = 'SCRIPT_ERR_PUSH_SIZE'\n    return false\n  }\n\n  // Do not execute instructions if Genesis OP_RETURN was found in executed branches.\n  var fExec = (this.vfExec.indexOf(false) === -1) && (!this.nonTopLevelReturnAfterGenesis || opcodenum === Opcode.OP_RETURN)\n\n  // Note how Opcode.OP_RESERVED does not count towards the opcode limit.\n  if (opcodenum > Opcode.OP_16 && ++(this.nOpCount) > Interpreter.MAX_OPCODE_COUNT) {\n    this.errstr = 'SCRIPT_ERR_OP_COUNT'\n    return false\n  }\n\n  if (isOpcodeDisabled(opcodenum)) {\n    this.errstr = 'SCRIPT_ERR_DISABLED_OPCODE'\n    return false\n  }\n\n  if (fExec && opcodenum >= 0 && opcodenum <= Opcode.OP_PUSHDATA4) {\n    if (fRequireMinimal && !this.script.checkMinimalPush(this.pc - 1)) {\n      this.errstr = 'SCRIPT_ERR_MINIMALDATA'\n      return false\n    }\n    if (!chunk.buf) {\n      this.stack.push(Interpreter.getFalse())\n    } else if (chunk.len !== chunk.buf.length) {\n      throw new Error(`Length of push value not equal to length of data (${chunk.len},${chunk.buf.length})`)\n    } else {\n      this.stack.push(chunk.buf)\n    }\n  } else if (fExec || (Opcode.OP_IF <= opcodenum && opcodenum <= Opcode.OP_ENDIF)) {\n    switch (opcodenum) {\n      // Push value\n      case Opcode.OP_1NEGATE:\n      case Opcode.OP_1:\n      case Opcode.OP_2:\n      case Opcode.OP_3:\n      case Opcode.OP_4:\n      case Opcode.OP_5:\n      case Opcode.OP_6:\n      case Opcode.OP_7:\n      case Opcode.OP_8:\n      case Opcode.OP_9:\n      case Opcode.OP_10:\n      case Opcode.OP_11:\n      case Opcode.OP_12:\n      case Opcode.OP_13:\n      case Opcode.OP_14:\n      case Opcode.OP_15:\n      case Opcode.OP_16:\n        // ( -- value)\n        // ScriptNum bn((int)opcode - (int)(Opcode.OP_1 - 1));\n        n = opcodenum - (Opcode.OP_1 - 1)\n        buf = new BN(n).toScriptNumBuffer()\n        this.stack.push(buf)\n        // The result of these opcodes should always be the minimal way to push the data\n        // they push, so no need for a CheckMinimalPush here.\n        break\n\n      //\n      // Control\n      //\n      case Opcode.OP_NOP:\n        break\n\n      case Opcode.OP_NOP2:\n      case Opcode.OP_CHECKLOCKTIMEVERIFY:\n\n        if (!(this.flags & Interpreter.SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY)) {\n          // not enabled; treat as a NOP2\n          if (this.flags & Interpreter.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS) {\n            this.errstr = 'SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS'\n            return false\n          }\n          break\n        }\n\n        if (this.stack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n\n        // Note that elsewhere numeric opcodes are limited to\n        // operands in the range -2**31+1 to 2**31-1, however it is\n        // legal for opcodes to produce results exceeding that\n        // range. This limitation is implemented by CScriptNum's\n        // default 4-byte limit.\n        //\n        // If we kept to that limit we'd have a year 2038 problem,\n        // even though the nLockTime field in transactions\n        // themselves is uint32 which only becomes meaningless\n        // after the year 2106.\n        //\n        // Thus as a special case we tell CScriptNum to accept up\n        // to 5-byte bignums, which are good until 2**39-1, well\n        // beyond the 2**32-1 limit of the nLockTime field itself.\n        var nLockTime = BN.fromScriptNumBuffer(this.stack.stacktop(-1), fRequireMinimal, 5)\n\n        // In the rare event that the argument may be < 0 due to\n        // some arithmetic being done first, you can always use\n        // 0 MAX CHECKLOCKTIMEVERIFY.\n        if (nLockTime.lt(new BN(0))) {\n          this.errstr = 'SCRIPT_ERR_NEGATIVE_LOCKTIME'\n          return false\n        }\n\n        // Actually compare the specified lock time with the transaction.\n        if (!this.checkLockTime(nLockTime)) {\n          this.errstr = 'SCRIPT_ERR_UNSATISFIED_LOCKTIME'\n          return false\n        }\n        break\n\n      case Opcode.OP_NOP3:\n      case Opcode.OP_CHECKSEQUENCEVERIFY:\n\n        if (!(this.flags & Interpreter.SCRIPT_VERIFY_CHECKSEQUENCEVERIFY)) {\n          // not enabled; treat as a NOP3\n          if (this.flags & Interpreter.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS) {\n            this.errstr = 'SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS'\n            return false\n          }\n          break\n        }\n\n        if (this.stack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n\n        // nSequence, like nLockTime, is a 32-bit unsigned\n        // integer field. See the comment in CHECKLOCKTIMEVERIFY\n        // regarding 5-byte numeric operands.\n\n        var nSequence = BN.fromScriptNumBuffer(stacktop(-1), fRequireMinimal, 5)\n\n        // In the rare event that the argument may be < 0 due to\n        // some arithmetic being done first, you can always use\n        // 0 MAX CHECKSEQUENCEVERIFY.\n        if (nSequence.lt(new BN(0))) {\n          this.errstr = 'SCRIPT_ERR_NEGATIVE_LOCKTIME'\n          return false\n        }\n\n        // To provide for future soft-fork extensibility, if the\n        // operand has the disabled lock-time flag set,\n        // CHECKSEQUENCEVERIFY behaves as a NOP.\n        if ((nSequence &\n          Interpreter.SEQUENCE_LOCKTIME_DISABLE_FLAG) !== 0) {\n          break\n        }\n\n        // Actually compare the specified lock time with the transaction.\n        if (!this.checkSequence(nSequence)) {\n          this.errstr = 'SCRIPT_ERR_UNSATISFIED_LOCKTIME'\n          return false\n        }\n        break\n\n      case Opcode.OP_NOP1:\n      case Opcode.OP_NOP4:\n      case Opcode.OP_NOP5:\n      case Opcode.OP_NOP6:\n      case Opcode.OP_NOP7:\n      case Opcode.OP_NOP8:\n      case Opcode.OP_NOP9:\n      case Opcode.OP_NOP10:\n        if (this.flags & Interpreter.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS) {\n          this.errstr = 'SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS'\n          return false\n        }\n        break\n\n      case Opcode.OP_IF:\n      case Opcode.OP_NOTIF:\n        // <expression> if [statements] [else [statements]] endif\n        // bool fValue = false;\n        fValue = false\n        if (fExec) {\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL'\n            return false\n          }\n          buf = stacktop(-1)\n\n          if (this.flags & Interpreter.SCRIPT_VERIFY_MINIMALIF) {\n            if (buf.length > 1) {\n              this.errstr = 'SCRIPT_ERR_MINIMALIF'\n              return false\n            }\n            if (buf.length === 1 && buf[0] !== 1) {\n              this.errstr = 'SCRIPT_ERR_MINIMALIF'\n              return false\n            }\n          }\n          fValue = Interpreter.castToBool(buf)\n          if (opcodenum === Opcode.OP_NOTIF) {\n            fValue = !fValue\n          }\n          this.stack.pop()\n        }\n        this.vfExec.push(fValue)\n        break\n\n      case Opcode.OP_ELSE:\n        if (this.vfExec.length === 0) {\n          this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL'\n          return false\n        }\n        this.vfExec[this.vfExec.length - 1] = !this.vfExec[this.vfExec.length - 1]\n        break\n\n      case Opcode.OP_ENDIF:\n        if (this.vfExec.length === 0) {\n          this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL'\n          return false\n        }\n        this.vfExec.pop()\n        break\n\n      case Opcode.OP_VERIFY:\n        // (true -- ) or\n        // (false -- false) and return\n        if (this.stack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        buf = stacktop(-1)\n        fValue = Interpreter.castToBool(buf)\n        if (fValue) {\n          this.stack.pop()\n        } else {\n          this.errstr = 'SCRIPT_ERR_VERIFY'\n          return false\n        }\n        break\n\n      case Opcode.OP_RETURN:\n\n        if ((this.flags & Interpreter.SCRIPT_VERIFY_P2SH) === 0) { // utxo_after_genesis\n          if (this.vfExec.length === 0) {\n            // Terminate the execution as successful. The remaining of the script does not affect the validity (even in\n            // presence of unbalanced IFs, invalid opcodes etc)\n            this.pc = this.script.chunks.length\n            return true\n          }\n          // op_return encountered inside if statement after genesis --> check for invalid grammar\n          this.nonTopLevelReturnAfterGenesis = true\n        } else {\n          return false\n        }\n\n        break\n\n      //\n      // Stack ops\n      //\n      case Opcode.OP_TOALTSTACK:\n        if (this.stack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        var1 = vartop(-1)\n        this.altstack.push(this.stack.pop(), var1)\n        break\n\n      case Opcode.OP_FROMALTSTACK:\n        if (this.altstack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_ALTSTACK_OPERATION'\n          return false\n        }\n        const varAlt = this.altstack.vartop(-1)\n        this.stack.push(this.altstack.pop(), varAlt)\n        break\n\n      case Opcode.OP_2DROP:\n        // (x1 x2 -- )\n        if (this.stack.length < 2) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        this.stack.pop()\n        this.stack.pop()\n        break\n\n      case Opcode.OP_2DUP:\n        // (x1 x2 -- x1 x2 x1 x2)\n        if (this.stack.length < 2) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        buf1 = stacktop(-2)\n        buf2 = stacktop(-1)\n        var1 = vartop(-2)\n        var2 = vartop(-1)\n        this.stack.push(Buffer.from(buf1), `$${var1}`)\n        this.stack.push(Buffer.from(buf2), `$${var2}`)\n        break\n\n      case Opcode.OP_3DUP:\n        // (x1 x2 x3 -- x1 x2 x3 x1 x2 x3)\n        if (this.stack.length < 3) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        buf1 = stacktop(-3)\n        buf2 = stacktop(-2)\n        var buf3 = stacktop(-1)\n        var1 = vartop(-3)\n        var2 = vartop(-2)\n        var3 = vartop(-1)\n        this.stack.push(Buffer.from(buf1), `$${var1}`)\n        this.stack.push(Buffer.from(buf2), `$${var2}`)\n        this.stack.push(Buffer.from(buf3), `$${var3}`)\n        break\n\n      case Opcode.OP_2OVER:\n        // (x1 x2 x3 x4 -- x1 x2 x3 x4 x1 x2)\n        if (this.stack.length < 4) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        buf1 = stacktop(-4)\n        buf2 = stacktop(-3)\n        var1 = vartop(-4)\n        var2 = vartop(-3)\n        this.stack.push(Buffer.from(buf1), `$${var1}`)\n        this.stack.push(Buffer.from(buf2), `$${var2}`)\n        break\n\n      case Opcode.OP_2ROT:\n        // (x1 x2 x3 x4 x5 x6 -- x3 x4 x5 x6 x1 x2)\n        if (this.stack.length < 6) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n\n        var1 = vartop(-6)\n        var2 = vartop(-5)\n\n        spliced = this.stack.splice(this.stack.length - 6, 2)\n        this.stack.push(spliced[0], var1)\n        this.stack.push(spliced[1], var2)\n        break\n\n      case Opcode.OP_2SWAP:\n        // (x1 x2 x3 x4 -- x3 x4 x1 x2)\n        if (this.stack.length < 4) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        var1 = vartop(-4)\n        var2 = vartop(-3)\n        spliced = this.stack.splice(this.stack.length - 4, 2)\n        this.stack.push(spliced[0], var1)\n        this.stack.push(spliced[1], var2)\n        break\n\n      case Opcode.OP_IFDUP:\n        // (x - 0 | x x)\n        if (this.stack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        buf = stacktop(-1)\n        fValue = Interpreter.castToBool(buf)\n        if (fValue) {\n          var1 = vartop(-1)\n          this.stack.push(Buffer.from(buf), `$${var1}`)\n        }\n        break\n\n      case Opcode.OP_DEPTH:\n        // -- stacksize\n        buf = new BN(this.stack.length).toScriptNumBuffer()\n        this.stack.push(buf, '$depth')\n        break\n\n      case Opcode.OP_DROP:\n        // (x -- )\n        if (this.stack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        this.stack.pop()\n        break\n\n      case Opcode.OP_DUP:\n        // (x -- x x)\n        if (this.stack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        var1 = vartop(-1)\n        this.stack.push(Buffer.from(stacktop(-1)), `$${var1}`)\n        break\n\n      case Opcode.OP_NIP:\n        // (x1 x2 -- x2)\n        if (this.stack.length < 2) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        this.stack.splice(this.stack.length - 2, 1)\n        break\n\n      case Opcode.OP_OVER:\n        // (x1 x2 -- x1 x2 x1)\n        if (this.stack.length < 2) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        var2 = vartop(-2)\n        this.stack.push(Buffer.from(stacktop(-2)), `$${var2}`)\n        break\n\n      case Opcode.OP_PICK:\n      case Opcode.OP_ROLL:\n        // (xn ... x2 x1 x0 n - xn ... x2 x1 x0 xn)\n        // (xn ... x2 x1 x0 n - ... x2 x1 x0 xn)\n        if (this.stack.length < 2) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        buf = stacktop(-1)\n        bn = BN.fromScriptNumBuffer(buf, fRequireMinimal, 4)\n        n = bn.toNumber()\n        this.stack.pop()\n        if (n < 0 || n >= this.stack.length) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        buf = stacktop(-n - 1)\n        var1 = vartop(-n - 1)\n        if (opcodenum === Opcode.OP_ROLL) {\n          this.stack.splice(this.stack.length - n - 1, 1)\n          this.stack.push(Buffer.from(buf), var1)\n        } else {\n          this.stack.push(Buffer.from(buf), `$${var1}`)\n        }\n\n        break\n\n      case Opcode.OP_ROT:\n        // (x1 x2 x3 -- x2 x3 x1)\n        //  x2 x1 x3  after first swap\n        //  x2 x3 x1  after second swap\n        if (this.stack.length < 3) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        x1 = stacktop(-3)\n        x2 = stacktop(-2)\n        var x3 = stacktop(-1)\n        var1 = vartop(-3)\n        var2 = vartop(-2)\n        var3 = vartop(-1)\n        this.stack.write(-3, x2)\n        this.stack.write(-2, x3)\n        this.stack.write(-1, x1)\n        this.stack.updateTopVars([var1, var3, var2])\n        break\n\n      case Opcode.OP_SWAP:\n        // (x1 x2 -- x2 x1)\n        if (this.stack.length < 2) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        x1 = stacktop(-2)\n        x2 = stacktop(-1)\n        var1 = vartop(-2)\n        var2 = vartop(-1)\n        this.stack.write(-2, x2)\n        this.stack.write(-1, x1)\n        this.stack.updateTopVars([var1, var2])\n        break\n\n      case Opcode.OP_TUCK:\n        // (x1 x2 -- x2 x1 x2)\n        if (this.stack.length < 2) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n\n        var1 = vartop(-2)\n        var2 = vartop(-1)\n\n        this.stack.splice(this.stack.length - 2, 0, Buffer.from(stacktop(-1)))\n        this.stack.updateTopVars([var2, var1, `$${var2}`])\n        break\n\n      case Opcode.OP_SIZE:\n        // (in -- in size)\n        if (this.stack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        bn = new BN(stacktop(-1).length)\n        this.stack.push(bn.toScriptNumBuffer(), `$size`)\n        break\n\n      //\n      // Bitwise logic\n      //\n      case Opcode.OP_AND:\n      case Opcode.OP_OR:\n      case Opcode.OP_XOR:\n        // (x1 x2 - out)\n        if (this.stack.length < 2) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        buf1 = stacktop(-2)\n        buf2 = stacktop(-1)\n\n        // Inputs must be the same size\n        if (buf1.length !== buf2.length) {\n          this.errstr = 'SCRIPT_ERR_INVALID_OPERAND_SIZE'\n          return false\n        }\n\n        // To avoid allocating, we modify vch1 in place.\n        switch (opcodenum) {\n          case Opcode.OP_AND:\n            for (let i = 0; i < buf1.length; i++) {\n              buf1[i] &= buf2[i]\n            }\n            break\n          case Opcode.OP_OR:\n            for (let i = 0; i < buf1.length; i++) {\n              buf1[i] |= buf2[i]\n            }\n            break\n          case Opcode.OP_XOR:\n            for (let i = 0; i < buf1.length; i++) {\n              buf1[i] ^= buf2[i]\n            }\n            break\n          default:\n            break\n        }\n\n        // And pop vch2.\n        this.stack.pop()\n        break\n\n      case Opcode.OP_INVERT:\n        // (x -- out)\n        if (this.stack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n        }\n        buf = stacktop(-1)\n        for (let i = 0; i < buf.length; i++) {\n          buf[i] = ~buf[i]\n        }\n        break\n\n      case Opcode.OP_LSHIFT:\n      case Opcode.OP_RSHIFT:\n        // (x n -- out)\n        if (this.stack.length < 2) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        buf1 = stacktop(-2)\n        if (buf1.length === 0) {\n          this.stack.pop()\n        } else {\n          bn1 = new BN(buf1)\n          bn2 = BN.fromScriptNumBuffer(stacktop(-1), fRequireMinimal, 4)\n          n = bn2.toNumber()\n          if (n < 0) {\n            this.errstr = 'SCRIPT_ERR_INVALID_NUMBER_RANGE'\n            return false\n          }\n          this.stack.pop()\n          this.stack.pop()\n          let shifted\n          if (opcodenum === Opcode.OP_LSHIFT) {\n            shifted = bn1.ushln(n)\n          }\n          if (opcodenum === Opcode.OP_RSHIFT) {\n            shifted = bn1.ushrn(n)\n          }\n          // bitcoin client implementation of l/rshift is unconventional, therefore this implementation is a bit unconventional\n          // bn library has shift functions however it expands the carried bits into a new byte\n          // in contrast to the bitcoin client implementation which drops off the carried bits\n          // in other words, if operand was 1 byte then we put 1 byte back on the stack instead of expanding to more shifted bytes\n          let bufShifted = padBufferToSize(Buffer.from(shifted.toArray().slice(buf1.length * -1)), buf1.length)\n          this.stack.push(bufShifted)\n        }\n        break\n\n      case Opcode.OP_EQUAL:\n      case Opcode.OP_EQUALVERIFY:\n        // case Opcode.OP_NOTEQUAL: // use Opcode.OP_NUMNOTEQUAL\n        // (x1 x2 - bool)\n        if (this.stack.length < 2) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        buf1 = stacktop(-2)\n        buf2 = stacktop(-1)\n        var fEqual = buf1.toString('hex') === buf2.toString('hex')\n        this.stack.pop()\n        this.stack.pop()\n        this.stack.push(fEqual ? Interpreter.getTrue() : Interpreter.getFalse())\n        if (opcodenum === Opcode.OP_EQUALVERIFY) {\n          if (fEqual) {\n            this.stack.pop()\n          } else {\n            this.errstr = 'SCRIPT_ERR_EQUALVERIFY'\n            return false\n          }\n        }\n        break\n\n      //\n      // Numeric\n      //\n      case Opcode.OP_1ADD:\n      case Opcode.OP_1SUB:\n      case Opcode.OP_NEGATE:\n      case Opcode.OP_ABS:\n      case Opcode.OP_NOT:\n      case Opcode.OP_0NOTEQUAL:\n        // (in -- out)\n        if (this.stack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        buf = stacktop(-1)\n        bn = BN.fromScriptNumBuffer(buf, fRequireMinimal)\n        switch (opcodenum) {\n          case Opcode.OP_1ADD:\n            bn = bn.add(BN.One)\n            break\n          case Opcode.OP_1SUB:\n            bn = bn.sub(BN.One)\n            break\n          case Opcode.OP_NEGATE:\n            bn = bn.neg()\n            break\n          case Opcode.OP_ABS:\n            if (bn.cmp(BN.Zero) < 0) {\n              bn = bn.neg()\n            }\n            break\n          case Opcode.OP_NOT:\n            bn = new BN((bn.cmp(BN.Zero) === 0) + 0)\n            break\n          case Opcode.OP_0NOTEQUAL:\n            bn = new BN((bn.cmp(BN.Zero) !== 0) + 0)\n            break\n          // default:      assert(!'invalid opcode'); break; // TODO: does this ever occur?\n        }\n        this.stack.pop()\n        this.stack.push(bn.toScriptNumBuffer())\n        break\n\n      case Opcode.OP_ADD:\n      case Opcode.OP_SUB:\n      case Opcode.OP_MUL:\n      case Opcode.OP_MOD:\n      case Opcode.OP_DIV:\n      case Opcode.OP_BOOLAND:\n      case Opcode.OP_BOOLOR:\n      case Opcode.OP_NUMEQUAL:\n      case Opcode.OP_NUMEQUALVERIFY:\n      case Opcode.OP_NUMNOTEQUAL:\n      case Opcode.OP_LESSTHAN:\n      case Opcode.OP_GREATERTHAN:\n      case Opcode.OP_LESSTHANOREQUAL:\n      case Opcode.OP_GREATERTHANOREQUAL:\n      case Opcode.OP_MIN:\n      case Opcode.OP_MAX:\n        // (x1 x2 -- out)\n        if (this.stack.length < 2) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        bn1 = BN.fromScriptNumBuffer(stacktop(-2), fRequireMinimal)\n        bn2 = BN.fromScriptNumBuffer(stacktop(-1), fRequireMinimal)\n        bn = new BN(0)\n\n        switch (opcodenum) {\n          case Opcode.OP_ADD:\n            bn = bn1.add(bn2)\n            break\n\n          case Opcode.OP_SUB:\n            bn = bn1.sub(bn2)\n            break\n\n          case Opcode.OP_MUL:\n            bn = bn1.mul(bn2)\n            break\n\n          case Opcode.OP_DIV:\n            // denominator must not be 0\n            if (bn2 === 0) {\n              this.errstr = 'SCRIPT_ERR_DIV_BY_ZERO'\n              return false\n            }\n            bn = bn1.div(bn2)\n            break\n\n          case Opcode.OP_MOD:\n            // divisor must not be 0\n            if (bn2 === 0) {\n              this.errstr = 'SCRIPT_ERR_DIV_BY_ZERO'\n              return false\n            }\n            bn = bn1.mod(bn2)\n            break\n\n          case Opcode.OP_BOOLAND:\n            bn = new BN(((bn1.cmp(BN.Zero) !== 0) && (bn2.cmp(BN.Zero) !== 0)) + 0)\n            break\n          // case Opcode.OP_BOOLOR:        bn = (bn1 !== bnZero || bn2 !== bnZero); break;\n          case Opcode.OP_BOOLOR:\n            bn = new BN(((bn1.cmp(BN.Zero) !== 0) || (bn2.cmp(BN.Zero) !== 0)) + 0)\n            break\n          // case Opcode.OP_NUMEQUAL:      bn = (bn1 === bn2); break;\n          case Opcode.OP_NUMEQUAL:\n            bn = new BN((bn1.cmp(bn2) === 0) + 0)\n            break\n          // case Opcode.OP_NUMEQUALVERIFY:    bn = (bn1 === bn2); break;\n          case Opcode.OP_NUMEQUALVERIFY:\n            bn = new BN((bn1.cmp(bn2) === 0) + 0)\n            break\n          // case Opcode.OP_NUMNOTEQUAL:     bn = (bn1 !== bn2); break;\n          case Opcode.OP_NUMNOTEQUAL:\n            bn = new BN((bn1.cmp(bn2) !== 0) + 0)\n            break\n          // case Opcode.OP_LESSTHAN:      bn = (bn1 < bn2); break;\n          case Opcode.OP_LESSTHAN:\n            bn = new BN((bn1.cmp(bn2) < 0) + 0)\n            break\n          // case Opcode.OP_GREATERTHAN:     bn = (bn1 > bn2); break;\n          case Opcode.OP_GREATERTHAN:\n            bn = new BN((bn1.cmp(bn2) > 0) + 0)\n            break\n          // case Opcode.OP_LESSTHANOREQUAL:   bn = (bn1 <= bn2); break;\n          case Opcode.OP_LESSTHANOREQUAL:\n            bn = new BN((bn1.cmp(bn2) <= 0) + 0)\n            break\n          // case Opcode.OP_GREATERTHANOREQUAL:  bn = (bn1 >= bn2); break;\n          case Opcode.OP_GREATERTHANOREQUAL:\n            bn = new BN((bn1.cmp(bn2) >= 0) + 0)\n            break\n          case Opcode.OP_MIN:\n            bn = (bn1.cmp(bn2) < 0 ? bn1 : bn2)\n            break\n          case Opcode.OP_MAX:\n            bn = (bn1.cmp(bn2) > 0 ? bn1 : bn2)\n            break\n          // default:           assert(!'invalid opcode'); break; //TODO: does this ever occur?\n        }\n        this.stack.pop()\n        this.stack.pop()\n        this.stack.push(bn.toScriptNumBuffer())\n\n        if (opcodenum === Opcode.OP_NUMEQUALVERIFY) {\n          // if (CastToBool(stacktop(-1)))\n          if (Interpreter.castToBool(stacktop(-1))) {\n            this.stack.pop()\n          } else {\n            this.errstr = 'SCRIPT_ERR_NUMEQUALVERIFY'\n            return false\n          }\n        }\n        break\n\n      case Opcode.OP_WITHIN:\n        // (x min max -- out)\n        if (this.stack.length < 3) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        bn1 = BN.fromScriptNumBuffer(stacktop(-3), fRequireMinimal)\n        bn2 = BN.fromScriptNumBuffer(stacktop(-2), fRequireMinimal)\n        var bn3 = BN.fromScriptNumBuffer(stacktop(-1), fRequireMinimal)\n        // bool fValue = (bn2 <= bn1 && bn1 < bn3);\n        fValue = (bn2.cmp(bn1) <= 0) && (bn1.cmp(bn3) < 0)\n        this.stack.pop()\n        this.stack.pop()\n        this.stack.pop()\n        this.stack.push(fValue ? Interpreter.getTrue() : Interpreter.getFalse())\n        break\n\n      //\n      // Crypto\n      //\n      case Opcode.OP_RIPEMD160:\n      case Opcode.OP_SHA1:\n      case Opcode.OP_SHA256:\n      case Opcode.OP_HASH160:\n      case Opcode.OP_HASH256:\n        // (in -- hash)\n        if (this.stack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        buf = stacktop(-1)\n        // valtype vchHash((opcode === Opcode.OP_RIPEMD160 ||\n        //                 opcode === Opcode.OP_SHA1 || opcode === Opcode.OP_HASH160) ? 20 : 32);\n        var bufHash\n        if (opcodenum === Opcode.OP_RIPEMD160) {\n          bufHash = Hash.ripemd160(buf)\n        } else if (opcodenum === Opcode.OP_SHA1) {\n          bufHash = Hash.sha1(buf)\n        } else if (opcodenum === Opcode.OP_SHA256) {\n          bufHash = Hash.sha256(buf)\n        } else if (opcodenum === Opcode.OP_HASH160) {\n          bufHash = Hash.sha256ripemd160(buf)\n        } else if (opcodenum === Opcode.OP_HASH256) {\n          bufHash = Hash.sha256sha256(buf)\n        }\n        this.stack.pop()\n        this.stack.push(bufHash)\n        break\n\n      case Opcode.OP_CODESEPARATOR:\n        // Hash starts after the code separator\n        this.pbegincodehash = this.pc\n        break\n\n      case Opcode.OP_CHECKSIG:\n      case Opcode.OP_CHECKSIGVERIFY:\n        // (sig pubkey -- bool)\n        if (this.stack.length < 2) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n\n        bufSig = stacktop(-2)\n        bufPubkey = stacktop(-1)\n\n        if (!this.checkSignatureEncoding(bufSig) || !this.checkPubkeyEncoding(bufPubkey)) {\n          return false\n        }\n\n        // Subset of script starting at the most recent codeseparator\n        // CScript scriptCode(pbegincodehash, pend);\n        subscript = this.subscript()\n\n        // Drop the signature, since there's no way for a signature to sign itself\n        var tmpScript = new Script().add(bufSig)\n        subscript.findAndDelete(tmpScript)\n\n        try {\n          sig = Signature.fromTxFormat(bufSig)\n          pubkey = PublicKey.fromBuffer(bufPubkey, false)\n\n          fSuccess = this.tx.verifySignature(sig, pubkey, this.nin, subscript, this.satoshisBN, this.flags)\n        } catch (e) {\n          // invalid sig or pubkey\n          fSuccess = false\n        }\n\n        if (!fSuccess && (this.flags & Interpreter.SCRIPT_VERIFY_NULLFAIL) &&\n          bufSig.length) {\n          this.errstr = 'SCRIPT_ERR_NULLFAIL'\n          return false\n        }\n\n        this.stack.pop()\n        this.stack.pop()\n\n        // stack.push_back(fSuccess ? vchTrue : vchFalse);\n        this.stack.push(fSuccess ? Interpreter.getTrue() : Interpreter.getFalse())\n        if (opcodenum === Opcode.OP_CHECKSIGVERIFY) {\n          if (fSuccess) {\n            this.stack.pop()\n          } else {\n            this.errstr = 'SCRIPT_ERR_CHECKSIGVERIFY'\n            return false\n          }\n        }\n        break\n\n      case Opcode.OP_CHECKMULTISIG:\n      case Opcode.OP_CHECKMULTISIGVERIFY:\n        // ([sig ...] num_of_signatures [pubkey ...] num_of_pubkeys -- bool)\n\n        var i = 1\n        if (this.stack.length < i) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n\n        var nKeysCount = BN.fromScriptNumBuffer(stacktop(-i), fRequireMinimal).toNumber()\n        // TODO: Keys and opcount are parameterized in client. No magic numbers!\n        if (nKeysCount < 0 || nKeysCount > 20) {\n          this.errstr = 'SCRIPT_ERR_PUBKEY_COUNT'\n          return false\n        }\n        this.nOpCount += nKeysCount\n        if (this.nOpCount > Interpreter.MAX_OPCODE_COUNT) {\n          this.errstr = 'SCRIPT_ERR_OP_COUNT'\n          return false\n        }\n        // int ikey = ++i;\n        var ikey = ++i\n        i += nKeysCount\n\n        // ikey2 is the position of last non-signature item in\n        // the stack. Top stack item = 1. With\n        // SCRIPT_VERIFY_NULLFAIL, this is used for cleanup if\n        // operation fails.\n        var ikey2 = nKeysCount + 2\n\n        if (this.stack.length < i) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n\n        var nSigsCount = BN.fromScriptNumBuffer(stacktop(-i), fRequireMinimal).toNumber()\n        if (nSigsCount < 0 || nSigsCount > nKeysCount) {\n          this.errstr = 'SCRIPT_ERR_SIG_COUNT'\n          return false\n        }\n        // int isig = ++i;\n        var isig = ++i\n        i += nSigsCount\n        if (this.stack.length < i) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n\n        // Subset of script starting at the most recent codeseparator\n        subscript = this.subscript()\n\n        // Drop the signatures, since there's no way for a signature to sign itself\n        for (var k = 0; k < nSigsCount; k++) {\n          bufSig = stacktop(-isig - k)\n          subscript.findAndDelete(new Script().add(bufSig))\n        }\n\n        fSuccess = true\n        while (fSuccess && nSigsCount > 0) {\n          // valtype& vchSig  = stacktop(-isig);\n          bufSig = stacktop(-isig)\n          // valtype& vchPubKey = stacktop(-ikey);\n          bufPubkey = stacktop(-ikey)\n\n          if (!this.checkSignatureEncoding(bufSig) || !this.checkPubkeyEncoding(bufPubkey)) {\n            return false\n          }\n\n          var fOk\n          try {\n            sig = Signature.fromTxFormat(bufSig)\n            pubkey = PublicKey.fromBuffer(bufPubkey, false)\n            fOk = this.tx.verifySignature(sig, pubkey, this.nin, subscript, this.satoshisBN, this.flags)\n          } catch (e) {\n            // invalid sig or pubkey\n            fOk = false\n          }\n\n          if (fOk) {\n            isig++\n            nSigsCount--\n          }\n          ikey++\n          nKeysCount--\n\n          // If there are more signatures left than keys left,\n          // then too many signatures have failed\n          if (nSigsCount > nKeysCount) {\n            fSuccess = false\n          }\n        }\n\n        // Clean up stack of actual arguments\n        while (i-- > 1) {\n          if (!fSuccess && (this.flags & Interpreter.SCRIPT_VERIFY_NULLFAIL) &&\n            !ikey2 && stacktop(-1).length) {\n            this.errstr = 'SCRIPT_ERR_NULLFAIL'\n            return false\n          }\n\n          if (ikey2 > 0) {\n            ikey2--\n          }\n\n          this.stack.pop()\n        }\n\n        // A bug causes CHECKMULTISIG to consume one extra argument\n        // whose contents were not checked in any way.\n        //\n        // Unfortunately this is a potential source of mutability,\n        // so optionally verify it is exactly equal to zero prior\n        // to removing it from the stack.\n        if (this.stack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        if ((this.flags & Interpreter.SCRIPT_VERIFY_NULLDUMMY) && stacktop(-1).length) {\n          this.errstr = 'SCRIPT_ERR_SIG_NULLDUMMY'\n          return false\n        }\n        this.stack.pop()\n\n        this.stack.push(fSuccess ? Interpreter.getTrue() : Interpreter.getFalse())\n\n        if (opcodenum === Opcode.OP_CHECKMULTISIGVERIFY) {\n          if (fSuccess) {\n            this.stack.pop()\n          } else {\n            this.errstr = 'SCRIPT_ERR_CHECKMULTISIGVERIFY'\n            return false\n          }\n        }\n        break\n\n      //\n      // Byte string operations\n      //\n      case Opcode.OP_CAT:\n        if (this.stack.length < 2) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n\n        buf1 = stacktop(-2)\n        buf2 = stacktop(-1)\n        if (buf1.length + buf2.length > Interpreter.MAX_SCRIPT_ELEMENT_SIZE) {\n          this.errstr = 'SCRIPT_ERR_PUSH_SIZE'\n          return false\n        }\n        this.stack.write(-2, Buffer.concat([buf1, buf2]))\n        this.stack.pop()\n        break\n\n      case Opcode.OP_SPLIT:\n        if (this.stack.length < 2) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        buf1 = stacktop(-2)\n\n        // Make sure the split point is apropriate.\n        var position = BN.fromScriptNumBuffer(stacktop(-1), fRequireMinimal).toNumber()\n        if (position < 0 || position > buf1.length) {\n          this.errstr = 'SCRIPT_ERR_INVALID_SPLIT_RANGE'\n          return false\n        }\n\n        // Prepare the results in their own buffer as `data`\n        // will be invalidated.\n        // Copy buffer data, to slice it before\n        var n1 = Buffer.from(buf1)\n\n        // Replace existing stack values by the new values.\n        this.stack.write(-2, n1.slice(0, position))\n        this.stack.write(-1, n1.slice(position))\n        break\n\n      //\n      // Conversion operations\n      //\n      case Opcode.OP_NUM2BIN:\n        // (in -- out)\n        if (this.stack.length < 2) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n\n        var size = BN.fromScriptNumBuffer(stacktop(-1), fRequireMinimal).toNumber()\n        if (size > Interpreter.MAX_SCRIPT_ELEMENT_SIZE) {\n          this.errstr = 'SCRIPT_ERR_PUSH_SIZE'\n          return false\n        }\n\n        this.stack.pop()\n        var rawnum = stacktop(-1)\n\n        // Try to see if we can fit that number in the number of\n        // byte requested.\n        rawnum = Interpreter._minimallyEncode(rawnum)\n\n        if (rawnum.length > size) {\n          // We definitively cannot.\n          this.errstr = 'SCRIPT_ERR_IMPOSSIBLE_ENCODING'\n          return false\n        }\n\n        // We already have an element of the right size, we\n        // don't need to do anything.\n        if (rawnum.length === size) {\n          this.stack.write(-1, rawnum)\n          break\n        }\n\n        var signbit = 0x00\n        if (rawnum.length > 0) {\n          signbit = rawnum[rawnum.length - 1] & 0x80\n          rawnum[rawnum.length - 1] &= 0x7f\n        }\n\n        var num = Buffer.alloc(size)\n        rawnum.copy(num, 0)\n\n        var l = rawnum.length - 1\n        while (l++ < size - 2) {\n          num[l] = 0x00\n        }\n\n        num[l] = signbit\n\n        this.stack.write(-1, num)\n        break\n\n      case Opcode.OP_BIN2NUM:\n        // (in -- out)\n        if (this.stack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n\n        buf1 = stacktop(-1)\n        buf2 = Interpreter._minimallyEncode(buf1)\n\n        this.stack.write(-1, buf2)\n\n        // The resulting number must be a valid number.\n        if (!Interpreter._isMinimallyEncoded(buf2)) {\n          this.errstr = 'SCRIPT_ERR_INVALID_NUMBER_RANGE'\n          return false\n        }\n        break\n\n      default:\n        this.errstr = 'SCRIPT_ERR_BAD_OPCODE'\n        return false\n    }\n  }\n\n  // only when next opcode is evaluate opcode, we update stack\n  if (this.vfExec.indexOf(false) === -1) {\n    this._callbackStack(this.stack, this.pc, scriptType)\n  }\n\n  return true\n}\n","module.exports = require('./script')\n\nmodule.exports.Interpreter = require('./interpreter')\n\nmodule.exports.Stack = require('./stack')\n","'use strict'\n\nvar _ = require('./util/_')\nvar $ = require('./util/preconditions')\nvar errors = require('./errors')\nvar Base58Check = require('./encoding/base58check')\nvar Networks = require('./networks')\nvar Hash = require('./crypto/hash')\nvar JSUtil = require('./util/js')\nvar PublicKey = require('./publickey')\n\n/**\n * Instantiate an address from an address String or Buffer, a public key or script hash Buffer,\n * or an instance of {@link PublicKey} or {@link Script}.\n *\n * This is an immutable class, and if the first parameter provided to this constructor is an\n * `Address` instance, the same argument will be returned.\n *\n * An address has two key properties: `network` and `type`. The type is either\n * `Address.PayToPublicKeyHash` (value is the `'pubkeyhash'` string)\n * or `Address.PayToScriptHash` (the string `'scripthash'`). The network is an instance of {@link Network}.\n * You can quickly check whether an address is of a given kind by using the methods\n * `isPayToPublicKeyHash` and `isPayToScriptHash`\n *\n * @example\n * ```javascript\n * // validate that an input field is valid\n * var error = Address.getValidationError(input, 'testnet');\n * if (!error) {\n *   var address = Address(input, 'testnet');\n * } else {\n *   // invalid network or checksum (typo?)\n *   var message = error.messsage;\n * }\n *\n * // get an address from a public key\n * var address = Address(publicKey, 'testnet').toString();\n * ```\n *\n * @param {*} data - The encoded data in various formats\n * @param {Network|String|number=} network - The network: 'livenet' or 'testnet'\n * @param {string=} type - The type of address: 'script' or 'pubkey'\n * @returns {Address} A new valid and frozen instance of an Address\n * @constructor\n */\nfunction Address (data, network, type) {\n  if (!(this instanceof Address)) {\n    return new Address(data, network, type)\n  }\n\n  if (_.isArray(data) && _.isNumber(network)) {\n    return Address.createMultisig(data, network, type)\n  }\n\n  if (data instanceof Address) {\n    // Immutable instance\n    return data\n  }\n\n  $.checkArgument(data, 'First argument is required, please include address data.', 'guide/address.html')\n\n  if (network && !Networks.get(network)) {\n    throw new TypeError('Second argument must be \"livenet\", \"testnet\", or \"regtest\".')\n  }\n\n  if (type && (type !== Address.PayToPublicKeyHash && type !== Address.PayToScriptHash)) {\n    throw new TypeError('Third argument must be \"pubkeyhash\" or \"scripthash\".')\n  }\n\n  var info = this._classifyArguments(data, network, type)\n\n  // set defaults if not set\n  info.network = info.network || Networks.get(network) || Networks.defaultNetwork\n  info.type = info.type || type || Address.PayToPublicKeyHash\n\n  JSUtil.defineImmutable(this, {\n    hashBuffer: info.hashBuffer,\n    network: info.network,\n    type: info.type\n  })\n\n  return this\n}\n\n/**\n * Internal function used to split different kinds of arguments of the constructor\n * @param {*} data - The encoded data in various formats\n * @param {Network|String|number=} network - The network: 'livenet' or 'testnet'\n * @param {string=} type - The type of address: 'script' or 'pubkey'\n * @returns {Object} An \"info\" object with \"type\", \"network\", and \"hashBuffer\"\n */\nAddress.prototype._classifyArguments = function (data, network, type) {\n  // transform and validate input data\n  if ((data instanceof Buffer || data instanceof Uint8Array) && data.length === 20) {\n    return Address._transformHash(data)\n  } else if ((data instanceof Buffer || data instanceof Uint8Array) && data.length === 21) {\n    return Address._transformBuffer(data, network, type)\n  } else if (data instanceof PublicKey) {\n    return Address._transformPublicKey(data)\n  } else if (data instanceof Script) {\n    return Address._transformScript(data, network)\n  } else if (typeof (data) === 'string') {\n    return Address._transformString(data, network, type)\n  } else if (_.isObject(data)) {\n    return Address._transformObject(data)\n  } else {\n    throw new TypeError('First argument is an unrecognized data format.')\n  }\n}\n\n/** @static */\nAddress.PayToPublicKeyHash = 'pubkeyhash'\n/** @static */\nAddress.PayToScriptHash = 'scripthash'\n\n/**\n * @param {Buffer} hash - An instance of a hash Buffer\n * @returns {Object} An object with keys: hashBuffer\n * @private\n */\nAddress._transformHash = function (hash) {\n  var info = {}\n  if (!(hash instanceof Buffer) && !(hash instanceof Uint8Array)) {\n    throw new TypeError('Address supplied is not a buffer.')\n  }\n  if (hash.length !== 20) {\n    throw new TypeError('Address hashbuffers must be exactly 20 bytes.')\n  }\n  info.hashBuffer = hash\n  return info\n}\n\n/**\n * Deserializes an address serialized through `Address#toObject()`\n * @param {Object} data\n * @param {string} data.hash - the hash that this address encodes\n * @param {string} data.type - either 'pubkeyhash' or 'scripthash'\n * @param {Network=} data.network - the name of the network associated\n * @return {Address}\n */\nAddress._transformObject = function (data) {\n  $.checkArgument(data.hash || data.hashBuffer, 'Must provide a `hash` or `hashBuffer` property')\n  $.checkArgument(data.type, 'Must provide a `type` property')\n  return {\n    hashBuffer: data.hash ? Buffer.from(data.hash, 'hex') : data.hashBuffer,\n    network: Networks.get(data.network) || Networks.defaultNetwork,\n    type: data.type\n  }\n}\n\n/**\n * Internal function to discover the network and type based on the first data byte\n *\n * @param {Buffer} buffer - An instance of a hex encoded address Buffer\n * @returns {Object} An object with keys: network and type\n * @private\n */\nAddress._classifyFromVersion = function (buffer) {\n  var version = {}\n\n  var pubkeyhashNetwork = Networks.get(buffer[0], 'pubkeyhash')\n  var scripthashNetwork = Networks.get(buffer[0], 'scripthash')\n\n  if (pubkeyhashNetwork) {\n    version.network = pubkeyhashNetwork\n    version.type = Address.PayToPublicKeyHash\n  } else if (scripthashNetwork) {\n    version.network = scripthashNetwork\n    version.type = Address.PayToScriptHash\n  }\n\n  return version\n}\n\n/**\n * Internal function to transform a bitcoin address buffer\n *\n * @param {Buffer} buffer - An instance of a hex encoded address Buffer\n * @param {string=} network - The network: 'livenet' or 'testnet'\n * @param {string=} type - The type: 'pubkeyhash' or 'scripthash'\n * @returns {Object} An object with keys: hashBuffer, network and type\n * @private\n */\nAddress._transformBuffer = function (buffer, network, type) {\n  var info = {}\n  if (!(buffer instanceof Buffer) && !(buffer instanceof Uint8Array)) {\n    throw new TypeError('Address supplied is not a buffer.')\n  }\n  if (buffer.length !== 1 + 20) {\n    throw new TypeError('Address buffers must be exactly 21 bytes.')\n  }\n\n  var networkObj = Networks.get(network)\n  var bufferVersion = Address._classifyFromVersion(buffer)\n\n  if (network && !networkObj) {\n    throw new TypeError('Unknown network')\n  }\n\n  if (!bufferVersion.network || (networkObj && networkObj !== bufferVersion.network)) {\n    // console.log(bufferVersion)\n    throw new TypeError('Address has mismatched network type.')\n  }\n\n  if (!bufferVersion.type || (type && type !== bufferVersion.type)) {\n    throw new TypeError('Address has mismatched type.')\n  }\n\n  info.hashBuffer = buffer.slice(1)\n  info.network = bufferVersion.network\n  info.type = bufferVersion.type\n  return info\n}\n\n/**\n * Internal function to transform a {@link PublicKey}\n *\n * @param {PublicKey} pubkey - An instance of PublicKey\n * @returns {Object} An object with keys: hashBuffer, type\n * @private\n */\nAddress._transformPublicKey = function (pubkey) {\n  var info = {}\n  if (!(pubkey instanceof PublicKey)) {\n    throw new TypeError('Address must be an instance of PublicKey.')\n  }\n  info.hashBuffer = Hash.sha256ripemd160(pubkey.toBuffer())\n  info.type = Address.PayToPublicKeyHash\n  return info\n}\n\n/**\n * Internal function to transform a {@link Script} into a `info` object.\n *\n * @param {Script} script - An instance of Script\n * @returns {Object} An object with keys: hashBuffer, type\n * @private\n */\nAddress._transformScript = function (script, network) {\n  $.checkArgument(script instanceof Script, 'script must be a Script instance')\n  var info = script.getAddressInfo(network)\n  if (!info) {\n    throw new errors.Script.CantDeriveAddress(script)\n  }\n  return info\n}\n\n/**\n * Creates a P2SH address from a set of public keys and a threshold.\n *\n * The addresses will be sorted lexicographically, as that is the trend in bitcoin.\n * To create an address from unsorted public keys, use the {@link Script#buildMultisigOut}\n * interface.\n *\n * @param {Array} publicKeys - a set of public keys to create an address\n * @param {number} threshold - the number of signatures needed to release the funds\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @return {Address}\n */\nAddress.createMultisig = function (publicKeys, threshold, network) {\n  network = network || publicKeys[0].network || Networks.defaultNetwork\n  return Address.payingTo(Script.buildMultisigOut(publicKeys, threshold), network)\n}\n\n/**\n * Internal function to transform a bitcoin cash address string\n *\n * @param {string} data\n * @param {String|Network=} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string=} type - The type: 'pubkeyhash' or 'scripthash'\n * @returns {Object} An object with keys: hashBuffer, network and type\n * @private\n */\nAddress._transformString = function (data, network, type) {\n  if (typeof (data) !== 'string') {\n    throw new TypeError('data parameter supplied is not a string.')\n  }\n  if (data.length < 27) {\n    throw new Error('Invalid Address string provided')\n  }\n  data = data.trim()\n  var networkObj = Networks.get(network)\n\n  if (network && !networkObj) {\n    throw new TypeError('Unknown network')\n  }\n\n  var addressBuffer = Base58Check.decode(data)\n  return Address._transformBuffer(addressBuffer, network, type)\n}\n\n/**\n * Instantiate an address from a PublicKey instance\n *\n * @param {PublicKey} data\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromPublicKey = function (data, network) {\n  var info = Address._transformPublicKey(data)\n  network = network || Networks.defaultNetwork\n  return new Address(info.hashBuffer, network, info.type)\n}\n\n/**\n * Instantiate an address from a PrivateKey instance\n *\n * @param {PrivateKey} privateKey\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromPrivateKey = function (privateKey, network) {\n  let publicKey = PublicKey.fromPrivateKey(privateKey)\n  network = network || privateKey.network || Networks.defaultNetwork\n  return Address.fromPublicKey(publicKey, network)\n}\n\n/**\n * Instantiate an address from a ripemd160 public key hash\n *\n * @param {Buffer} hash - An instance of buffer of the hash\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromPublicKeyHash = function (hash, network) {\n  var info = Address._transformHash(hash)\n  return new Address(info.hashBuffer, network, Address.PayToPublicKeyHash)\n}\n\n/**\n * Instantiate an address from a ripemd160 script hash\n *\n * @param {Buffer} hash - An instance of buffer of the hash\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromScriptHash = function (hash, network) {\n  $.checkArgument(hash, 'hash parameter is required')\n  var info = Address._transformHash(hash)\n  return new Address(info.hashBuffer, network, Address.PayToScriptHash)\n}\n\n/**\n * Builds a p2sh address paying to script. This will hash the script and\n * use that to create the address.\n * If you want to extract an address associated with a script instead,\n * see {{Address#fromScript}}\n *\n * @param {Script} script - An instance of Script\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.payingTo = function (script, network) {\n  $.checkArgument(script, 'script is required')\n  $.checkArgument(script instanceof Script, 'script must be instance of Script')\n\n  return Address.fromScriptHash(Hash.sha256ripemd160(script.toBuffer()), network)\n}\n\n/**\n * Extract address from a Script. The script must be of one\n * of the following types: p2pkh input, p2pkh output, p2sh input\n * or p2sh output.\n * This will analyze the script and extract address information from it.\n * If you want to transform any script to a p2sh Address paying\n * to that script's hash instead, use {{Address#payingTo}}\n *\n * @param {Script} script - An instance of Script\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromScript = function (script, network) {\n  $.checkArgument(script instanceof Script, 'script must be a Script instance')\n  var info = Address._transformScript(script, network)\n  return new Address(info.hashBuffer, network, info.type)\n}\n\n/**\n * Instantiate an address from a buffer of the address\n *\n * @param {Buffer} buffer - An instance of buffer of the address\n * @param {String|Network=} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string=} type - The type of address: 'script' or 'pubkey'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromBuffer = function (buffer, network, type) {\n  var info = Address._transformBuffer(buffer, network, type)\n  return new Address(info.hashBuffer, info.network, info.type)\n}\n\nAddress.fromHex = function (hex, network, type) {\n  return Address.fromBuffer(Buffer.from(hex, 'hex'), network, type)\n}\n\n/**\n * Instantiate an address from an address string\n *\n * @param {string} str - An string of the bitcoin address\n * @param {String|Network=} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string=} type - The type of address: 'script' or 'pubkey'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromString = function (str, network, type) {\n  var info = Address._transformString(str, network, type)\n  return new Address(info.hashBuffer, info.network, info.type)\n}\n\n/**\n * Instantiate an address from an Object\n *\n * @param {string} json - An JSON string or Object with keys: hash, network and type\n * @returns {Address} A new valid instance of an Address\n */\nAddress.fromObject = function fromObject (obj) {\n  $.checkState(\n    JSUtil.isHexa(obj.hash),\n    'Unexpected hash property, \"' + obj.hash + '\", expected to be hex.'\n  )\n  var hashBuffer = Buffer.from(obj.hash, 'hex')\n  return new Address(hashBuffer, obj.network, obj.type)\n}\n\n/**\n * Will return a validation error if exists\n *\n * @example\n * ```javascript\n * // a network mismatch error\n * var error = Address.getValidationError('15vkcKf7gB23wLAnZLmbVuMiiVDc1Nm4a2', 'testnet');\n * ```\n *\n * @param {string} data - The encoded data\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string} type - The type of address: 'script' or 'pubkey'\n * @returns {null|Error} The corresponding error message\n */\nAddress.getValidationError = function (data, network, type) {\n  var error\n  try {\n    new Address(data, network, type) // eslint-disable-line\n  } catch (e) {\n    error = e\n  }\n  return error\n}\n\n/**\n * Will return a boolean if an address is valid\n *\n * @example\n * ```javascript\n * assert(Address.isValid('15vkcKf7gB23wLAnZLmbVuMiiVDc1Nm4a2', 'livenet'));\n * ```\n *\n * @param {string} data - The encoded data\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string} type - The type of address: 'script' or 'pubkey'\n * @returns {boolean} The corresponding error message\n */\nAddress.isValid = function (data, network, type) {\n  return !Address.getValidationError(data, network, type)\n}\n\n/**\n * Returns true if an address is of pay to public key hash type\n * @return boolean\n */\nAddress.prototype.isPayToPublicKeyHash = function () {\n  return this.type === Address.PayToPublicKeyHash\n}\n\n/**\n * Returns true if an address is of pay to script hash type\n * @return boolean\n */\nAddress.prototype.isPayToScriptHash = function () {\n  return this.type === Address.PayToScriptHash\n}\n\n/**\n * Will return a buffer representation of the address\n *\n * @returns {Buffer} Bitcoin address buffer\n */\nAddress.prototype.toBuffer = function () {\n  var version = Buffer.from([this.network[this.type]])\n  var buf = Buffer.concat([version, this.hashBuffer])\n  return buf\n}\n\nAddress.prototype.toHex = function () {\n  return this.toBuffer().toString('hex')\n}\n\n/**\n * @returns {Object} A plain object with the address information\n */\nAddress.prototype.toObject = Address.prototype.toJSON = function toObject () {\n  return {\n    hash: this.hashBuffer.toString('hex'),\n    type: this.type,\n    network: this.network.toString()\n  }\n}\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Bitcoin address\n */\nAddress.prototype.inspect = function () {\n  return '<Address: ' + this.toString() + ', type: ' + this.type + ', network: ' + this.network + '>'\n}\n\n/**\n * Will return a the base58 string representation of the address\n *\n * @returns {string} Bitcoin address\n */\nAddress.prototype.toString = function () {\n  return Base58Check.encode(this.toBuffer())\n}\n\nmodule.exports = Address\n\nvar Script = require('./script')\n","'use strict'\n\nfunction Random () {\n}\n\n/* secure random bytes that sometimes throws an error due to lack of entropy */\nRandom.getRandomBuffer = function (size) {\n  if (process.browser) { return Random.getRandomBufferBrowser(size) } else { return Random.getRandomBufferNode(size) }\n}\n\nRandom.getRandomBufferNode = function (size) {\n  var crypto = require('crypto')\n  return crypto.randomBytes(size)\n}\n\nRandom.getRandomBufferBrowser = function (size) {\n  if (!window.crypto && !window.msCrypto) {\n    throw new Error('window.crypto not available')\n  }\n  var crypto\n\n  if (window.crypto && window.crypto.getRandomValues) {\n    crypto = window.crypto\n  } else if (window.msCrypto && window.msCrypto.getRandomValues) { // internet explorer\n    crypto = window.msCrypto\n  } else {\n    throw new Error('window.crypto.getRandomValues not available')\n  }\n\n  var bbuf = new Uint8Array(size)\n  crypto.getRandomValues(bbuf)\n  var buf = Buffer.from(bbuf)\n\n  return buf\n}\n\nmodule.exports = Random\n","'use strict'\n\nvar _ = require('./util/_')\nvar Address = require('./address')\nvar Base58Check = require('./encoding/base58check')\nvar BN = require('./crypto/bn')\nvar JSUtil = require('./util/js')\nvar Networks = require('./networks')\nvar Point = require('./crypto/point')\nvar PublicKey = require('./publickey')\nvar Random = require('./crypto/random')\nvar $ = require('./util/preconditions')\n\n/**\n * Instantiate a PrivateKey from a BN, Buffer or WIF string.\n *\n * @param {string} data - The encoded data in various formats\n * @param {Network|string=} network - a {@link Network} object, or a string with the network name\n * @returns {PrivateKey} A new valid instance of an PrivateKey\n * @constructor\n */\nfunction PrivateKey (data, network) {\n  if (!(this instanceof PrivateKey)) {\n    return new PrivateKey(data, network)\n  }\n  if (data instanceof PrivateKey) {\n    return data\n  }\n\n  var info = this._classifyArguments(data, network)\n\n  // validation\n  if (!info.bn || info.bn.cmp(new BN(0)) === 0) {\n    throw new TypeError('Number can not be equal to zero, undefined, null or false')\n  }\n  if (!info.bn.lt(Point.getN())) {\n    throw new TypeError('Number must be less than N')\n  }\n  if (typeof (info.network) === 'undefined') {\n    throw new TypeError('Must specify the network (\"livenet\" or \"testnet\")')\n  }\n\n  JSUtil.defineImmutable(this, {\n    bn: info.bn,\n    compressed: info.compressed,\n    network: info.network\n  })\n\n  Object.defineProperty(this, 'publicKey', {\n    configurable: false,\n    enumerable: true,\n    get: this.toPublicKey.bind(this)\n  })\n\n  return this\n};\n\n/**\n * Internal helper to instantiate PrivateKey internal `info` object from\n * different kinds of arguments passed to the constructor.\n *\n * @param {*} data\n * @param {Network|string=} network - a {@link Network} object, or a string with the network name\n * @return {Object}\n */\nPrivateKey.prototype._classifyArguments = function (data, network) {\n  var info = {\n    compressed: true,\n    network: network ? Networks.get(network) : Networks.defaultNetwork\n  }\n\n  // detect type of data\n  if (_.isUndefined(data) || _.isNull(data)) {\n    info.bn = PrivateKey._getRandomBN()\n  } else if (data instanceof BN) {\n    info.bn = data\n  } else if (data instanceof Buffer || data instanceof Uint8Array) {\n    info = PrivateKey._transformBuffer(data, network)\n  } else if (data.bn && data.network) {\n    info = PrivateKey._transformObject(data)\n  } else if (!network && Networks.get(data)) {\n    info.bn = PrivateKey._getRandomBN()\n    info.network = Networks.get(data)\n  } else if (typeof (data) === 'string') {\n    if (JSUtil.isHexa(data)) {\n      info.bn = new BN(Buffer.from(data, 'hex'))\n    } else {\n      info = PrivateKey._transformWIF(data, network)\n    }\n  } else {\n    throw new TypeError('First argument is an unrecognized data type.')\n  }\n  return info\n}\n\n/**\n * Internal function to get a random Big Number (BN)\n *\n * @returns {BN} A new randomly generated BN\n * @private\n */\nPrivateKey._getRandomBN = function () {\n  var condition\n  var bn\n  do {\n    var privbuf = Random.getRandomBuffer(32)\n    bn = BN.fromBuffer(privbuf)\n    condition = bn.lt(Point.getN())\n  } while (!condition)\n  return bn\n}\n\n/**\n * Internal function to transform a WIF Buffer into a private key\n *\n * @param {Buffer} buf - An WIF string\n * @param {Network|string=} network - a {@link Network} object, or a string with the network name\n * @returns {Object} An object with keys: bn, network and compressed\n * @private\n */\nPrivateKey._transformBuffer = function (buf, network) {\n  var info = {}\n\n  if (buf.length === 32) {\n    return PrivateKey._transformBNBuffer(buf, network)\n  }\n\n  info.network = Networks.get(buf[0], 'privatekey')\n\n  if (!info.network) {\n    throw new Error('Invalid network')\n  }\n\n  if (network && info.network !== Networks.get(network)) {\n    throw new TypeError('Private key network mismatch')\n  }\n\n  if (buf.length === 1 + 32 + 1 && buf[1 + 32 + 1 - 1] === 1) {\n    info.compressed = true\n  } else if (buf.length === 1 + 32) {\n    info.compressed = false\n  } else {\n    throw new Error('Length of buffer must be 33 (uncompressed) or 34 (compressed)')\n  }\n\n  info.bn = BN.fromBuffer(buf.slice(1, 32 + 1))\n\n  return info\n}\n\n/**\n * Internal function to transform a BN buffer into a private key\n *\n * @param {Buffer} buf\n * @param {Network|string=} network - a {@link Network} object, or a string with the network name\n * @returns {object} an Object with keys: bn, network, and compressed\n * @private\n */\nPrivateKey._transformBNBuffer = function (buf, network) {\n  var info = {}\n  info.network = Networks.get(network) || Networks.defaultNetwork\n  info.bn = BN.fromBuffer(buf)\n  info.compressed = false\n  return info\n}\n\n/**\n * Internal function to transform a WIF string into a private key\n *\n * @param {string} buf - An WIF string\n * @returns {Object} An object with keys: bn, network and compressed\n * @private\n */\nPrivateKey._transformWIF = function (str, network) {\n  return PrivateKey._transformBuffer(Base58Check.decode(str), network)\n}\n\n/**\n * Instantiate a PrivateKey from a Buffer with the DER or WIF representation\n *\n * @param {Buffer} buf\n * @param {Network} network\n * @return {PrivateKey}\n */\nPrivateKey.fromBuffer = function (buf, network) {\n  return new PrivateKey(buf, network)\n}\n\nPrivateKey.fromHex = function (hex, network) {\n  return PrivateKey.fromBuffer(Buffer.from(hex, 'hex'), network)\n}\n\n/**\n * Internal function to transform a JSON string on plain object into a private key\n * return this.\n *\n * @param {string} json - A JSON string or plain object\n * @returns {Object} An object with keys: bn, network and compressed\n * @private\n */\nPrivateKey._transformObject = function (json) {\n  var bn = new BN(json.bn, 'hex')\n  var network = Networks.get(json.network)\n  return {\n    bn: bn,\n    network: network,\n    compressed: json.compressed\n  }\n}\n\n/**\n * Instantiate a PrivateKey from a WIF string\n *\n * @param {string} str - The WIF encoded private key string\n * @returns {PrivateKey} A new valid instance of PrivateKey\n */\nPrivateKey.fromString = PrivateKey.fromWIF = function (str) {\n  $.checkArgument(_.isString(str), 'First argument is expected to be a string.')\n  return new PrivateKey(str)\n}\n\n/**\n * Instantiate a PrivateKey from a plain JavaScript object\n *\n * @param {Object} obj - The output from privateKey.toObject()\n */\nPrivateKey.fromObject = PrivateKey.fromJSON = function (obj) {\n  $.checkArgument(_.isObject(obj), 'First argument is expected to be an object.')\n  return new PrivateKey(obj)\n}\n\n/**\n * Instantiate a PrivateKey from random bytes\n *\n * @param {string=} network - Either \"livenet\" or \"testnet\"\n * @returns {PrivateKey} A new valid instance of PrivateKey\n */\nPrivateKey.fromRandom = function (network) {\n  var bn = PrivateKey._getRandomBN()\n  return new PrivateKey(bn, network)\n}\n\n/**\n * Check if there would be any errors when initializing a PrivateKey\n *\n * @param {string} data - The encoded data in various formats\n * @param {string=} network - Either \"livenet\" or \"testnet\"\n * @returns {null|Error} An error if exists\n */\n\nPrivateKey.getValidationError = function (data, network) {\n  var error\n  try {\n    new PrivateKey(data, network) // eslint-disable-line\n  } catch (e) {\n    error = e\n  }\n  return error\n}\n\n/**\n * Check if the parameters are valid\n *\n * @param {string} data - The encoded data in various formats\n * @param {string=} network - Either \"livenet\" or \"testnet\"\n * @returns {Boolean} If the private key is would be valid\n */\nPrivateKey.isValid = function (data, network) {\n  if (!data) {\n    return false\n  }\n  return !PrivateKey.getValidationError(data, network)\n}\n\n/**\n * Will output the PrivateKey in WIF\n *\n * @returns {string}\n */\nPrivateKey.prototype.toString = function () {\n  return this.toWIF()\n}\n\n/**\n * Will output the PrivateKey to a WIF string\n *\n * @returns {string} A WIP representation of the private key\n */\nPrivateKey.prototype.toWIF = function () {\n  var network = this.network\n  var compressed = this.compressed\n\n  var buf\n  if (compressed) {\n    buf = Buffer.concat([Buffer.from([network.privatekey]),\n      this.bn.toBuffer({ size: 32 }),\n      Buffer.from([0x01])])\n  } else {\n    buf = Buffer.concat([Buffer.from([network.privatekey]),\n      this.bn.toBuffer({ size: 32 })])\n  }\n\n  return Base58Check.encode(buf)\n}\n\n/**\n * Will return the private key as a BN instance\n *\n * @returns {BN} A BN instance of the private key\n */\nPrivateKey.prototype.toBigNumber = function () {\n  return this.bn\n}\n\n/**\n * Will return the private key as a BN buffer\n *\n * @returns {Buffer} A buffer of the private key\n */\nPrivateKey.prototype.toBuffer = function () {\n  return this.bn.toBuffer({ size: 32 })\n}\n\nPrivateKey.prototype.toHex = function () {\n  return this.toBuffer().toString('hex')\n}\n\n/**\n * Will return the corresponding public key\n *\n * @returns {PublicKey} A public key generated from the private key\n */\nPrivateKey.prototype.toPublicKey = function () {\n  if (!this._pubkey) {\n    this._pubkey = PublicKey.fromPrivateKey(this)\n  }\n  return this._pubkey\n}\n\n/**\n * Will return an address for the private key\n * @param {Network=} network - optional parameter specifying\n * the desired network for the address\n *\n * @returns {Address} An address generated from the private key\n */\nPrivateKey.prototype.toAddress = function (network) {\n  var pubkey = this.toPublicKey()\n  return Address.fromPublicKey(pubkey, network || this.network)\n}\n\n/**\n * @returns {Object} A plain object representation\n */\nPrivateKey.prototype.toObject = PrivateKey.prototype.toJSON = function toObject () {\n  return {\n    bn: this.bn.toString('hex'),\n    compressed: this.compressed,\n    network: this.network.toString()\n  }\n}\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Private key\n */\nPrivateKey.prototype.inspect = function () {\n  var uncompressed = !this.compressed ? ', uncompressed' : ''\n  return '<PrivateKey: ' + this.toHex() + ', network: ' + this.network + uncompressed + '>'\n}\n\nmodule.exports = PrivateKey\n","'use strict'\n\nvar BN = require('./crypto/bn')\nvar Point = require('./crypto/point')\nvar Hash = require('./crypto/hash')\nvar JSUtil = require('./util/js')\nvar Network = require('./networks')\nvar _ = require('./util/_')\nvar $ = require('./util/preconditions')\n\n/**\n * Instantiate a PublicKey from a {@link PrivateKey}, {@link Point}, `string`, or `Buffer`.\n *\n * There are two internal properties, `network` and `compressed`, that deal with importing\n * a PublicKey from a PrivateKey in WIF format. More details described on {@link PrivateKey}\n *\n * @example\n * ```javascript\n * // instantiate from a private key\n * var key = PublicKey(privateKey, true);\n *\n * // export to as a DER hex encoded string\n * var exported = key.toString();\n *\n * // import the public key\n * var imported = PublicKey.fromString(exported);\n * ```\n *\n * @param {string} data - The encoded data in various formats\n * @param {Object} extra - additional options\n * @param {Network=} extra.network - Which network should the address for this public key be for\n * @param {String=} extra.compressed - If the public key is compressed\n * @returns {PublicKey} A new valid instance of an PublicKey\n * @constructor\n */\nfunction PublicKey (data, extra) {\n  if (!(this instanceof PublicKey)) {\n    return new PublicKey(data, extra)\n  }\n\n  $.checkArgument(data, 'First argument is required, please include public key data.')\n\n  if (data instanceof PublicKey) {\n    // Return copy, but as it's an immutable object, return same argument\n    return data\n  }\n  extra = extra || {}\n\n  var info = this._classifyArgs(data, extra)\n\n  // validation\n  info.point.validate()\n\n  JSUtil.defineImmutable(this, {\n    point: info.point,\n    compressed: info.compressed,\n    network: info.network || Network.defaultNetwork\n  })\n\n  return this\n};\n\n/**\n * Internal function to differentiate between arguments passed to the constructor\n * @param {*} data\n * @param {Object} extra\n */\nPublicKey.prototype._classifyArgs = function (data, extra) {\n  var info = {\n    compressed: _.isUndefined(extra.compressed) || extra.compressed\n  }\n\n  // detect type of data\n  if (data instanceof Point) {\n    info.point = data\n  } else if (data.x && data.y) {\n    info = PublicKey._transformObject(data)\n  } else if (typeof (data) === 'string') {\n    info = PublicKey._transformDER(Buffer.from(data, 'hex'))\n  } else if (PublicKey._isBuffer(data)) {\n    info = PublicKey._transformDER(data)\n  } else if (PublicKey._isPrivateKey(data)) {\n    info = PublicKey._transformPrivateKey(data)\n  } else {\n    throw new TypeError('First argument is an unrecognized data format.')\n  }\n  if (!info.network) {\n    info.network = _.isUndefined(extra.network) ? undefined : Network.get(extra.network)\n  }\n  return info\n}\n\n/**\n * Internal function to detect if an object is a {@link PrivateKey}\n *\n * @param {*} param - object to test\n * @returns {boolean}\n * @private\n */\nPublicKey._isPrivateKey = function (param) {\n  var PrivateKey = require('./privatekey')\n  return param instanceof PrivateKey\n}\n\n/**\n * Internal function to detect if an object is a Buffer\n *\n * @param {*} param - object to test\n * @returns {boolean}\n * @private\n */\nPublicKey._isBuffer = function (param) {\n  return (param instanceof Buffer) || (param instanceof Uint8Array)\n}\n\n/**\n * Internal function to transform a private key into a public key point\n *\n * @param {PrivateKey} privkey - An instance of PrivateKey\n * @returns {Object} An object with keys: point and compressed\n * @private\n */\nPublicKey._transformPrivateKey = function (privkey) {\n  $.checkArgument(PublicKey._isPrivateKey(privkey), 'Must be an instance of PrivateKey')\n  var info = {}\n  info.point = Point.getG().mul(privkey.bn)\n  info.compressed = privkey.compressed\n  info.network = privkey.network\n  return info\n}\n\n/**\n * Internal function to transform DER into a public key point\n *\n * @param {Buffer} buf - An DER buffer\n * @param {bool=} strict - if set to false, will loosen some conditions\n * @returns {Object} An object with keys: point and compressed\n * @private\n */\nPublicKey._transformDER = function (buf, strict) {\n  $.checkArgument(PublicKey._isBuffer(buf), 'Must be a buffer of DER encoded public key')\n  var info = {}\n\n  strict = _.isUndefined(strict) ? true : strict\n\n  var x\n  var y\n  var xbuf\n  var ybuf\n\n  if (buf[0] === 0x04 || (!strict && (buf[0] === 0x06 || buf[0] === 0x07))) {\n    xbuf = buf.slice(1, 33)\n    ybuf = buf.slice(33, 65)\n    if (xbuf.length !== 32 || ybuf.length !== 32 || buf.length !== 65) {\n      throw new TypeError('Length of x and y must be 32 bytes')\n    }\n    x = new BN(xbuf)\n    y = new BN(ybuf)\n    info.point = new Point(x, y)\n    info.compressed = false\n  } else if (buf[0] === 0x03) {\n    xbuf = buf.slice(1)\n    x = new BN(xbuf)\n    info = PublicKey._transformX(true, x)\n    info.compressed = true\n  } else if (buf[0] === 0x02) {\n    xbuf = buf.slice(1)\n    x = new BN(xbuf)\n    info = PublicKey._transformX(false, x)\n    info.compressed = true\n  } else {\n    throw new TypeError('Invalid DER format public key')\n  }\n  return info\n}\n\n/**\n * Internal function to transform X into a public key point\n *\n * @param {Boolean} odd - If the point is above or below the x axis\n * @param {Point} x - The x point\n * @returns {Object} An object with keys: point and compressed\n * @private\n */\nPublicKey._transformX = function (odd, x) {\n  $.checkArgument(typeof odd === 'boolean', 'Must specify whether y is odd or not (true or false)')\n  var info = {}\n  info.point = Point.fromX(odd, x)\n  return info\n}\n\n/**\n * Internal function to transform a JSON into a public key point\n *\n * @param {String|Object} json - a JSON string or plain object\n * @returns {Object} An object with keys: point and compressed\n * @private\n */\nPublicKey._transformObject = function (json) {\n  var x = new BN(json.x, 'hex')\n  var y = new BN(json.y, 'hex')\n  var point = new Point(x, y)\n  return new PublicKey(point, {\n    compressed: json.compressed\n  })\n}\n\n/**\n * Instantiate a PublicKey from a PrivateKey\n *\n * @param {PrivateKey} privkey - An instance of PrivateKey\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromPrivateKey = function (privkey) {\n  $.checkArgument(PublicKey._isPrivateKey(privkey), 'Must be an instance of PrivateKey')\n  var info = PublicKey._transformPrivateKey(privkey)\n  return new PublicKey(info.point, {\n    compressed: info.compressed,\n    network: info.network\n  })\n}\n\n/**\n * Instantiate a PublicKey from a Buffer\n * @param {Buffer} buf - A DER buffer\n * @param {bool=} strict - if set to false, will loosen some conditions\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromDER = PublicKey.fromBuffer = function (buf, strict) {\n  $.checkArgument(PublicKey._isBuffer(buf), 'Must be a buffer of DER encoded public key')\n  var info = PublicKey._transformDER(buf, strict)\n  return new PublicKey(info.point, {\n    compressed: info.compressed\n  })\n}\n\n/**\n * Instantiate a PublicKey from a Point\n *\n * @param {Point} point - A Point instance\n * @param {boolean=} compressed - whether to store this public key as compressed format\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromPoint = function (point, compressed) {\n  $.checkArgument(point instanceof Point, 'First argument must be an instance of Point.')\n  return new PublicKey(point, {\n    compressed: compressed\n  })\n}\n\n/**\n * Instantiate a PublicKey from a DER hex encoded string\n *\n * @param {string} str - A DER hex string\n * @param {String=} encoding - The type of string encoding\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromHex = PublicKey.fromString = function (str, encoding) {\n  var buf = Buffer.from(str, encoding || 'hex')\n  var info = PublicKey._transformDER(buf)\n  return new PublicKey(info.point, {\n    compressed: info.compressed\n  })\n}\n\n/**\n * Instantiate a PublicKey from an X Point\n *\n * @param {Boolean} odd - If the point is above or below the x axis\n * @param {Point} x - The x point\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromX = function (odd, x) {\n  var info = PublicKey._transformX(odd, x)\n  return new PublicKey(info.point, {\n    compressed: info.compressed\n  })\n}\n\n/**\n * Check if there would be any errors when initializing a PublicKey\n *\n * @param {string} data - The encoded data in various formats\n * @returns {null|Error} An error if exists\n */\nPublicKey.getValidationError = function (data) {\n  var error\n  try {\n    new PublicKey(data) // eslint-disable-line\n  } catch (e) {\n    error = e\n  }\n  return error\n}\n\n/**\n * Check if the parameters are valid\n *\n * @param {string} data - The encoded data in various formats\n * @returns {Boolean} If the public key would be valid\n */\nPublicKey.isValid = function (data) {\n  return !PublicKey.getValidationError(data)\n}\n\n/**\n * @returns {Object} A plain object of the PublicKey\n */\nPublicKey.prototype.toObject = PublicKey.prototype.toJSON = function toObject () {\n  return {\n    x: this.point.getX().toString('hex', 2),\n    y: this.point.getY().toString('hex', 2),\n    compressed: this.compressed\n  }\n}\n\n/**\n * Will output the PublicKey to a DER Buffer\n *\n * @returns {Buffer} A DER hex encoded buffer\n */\nPublicKey.prototype.toBuffer = PublicKey.prototype.toDER = function () {\n  var x = this.point.getX()\n  var y = this.point.getY()\n\n  var xbuf = x.toBuffer({\n    size: 32\n  })\n  var ybuf = y.toBuffer({\n    size: 32\n  })\n\n  var prefix\n  if (!this.compressed) {\n    prefix = Buffer.from([0x04])\n    return Buffer.concat([prefix, xbuf, ybuf])\n  } else {\n    var odd = ybuf[ybuf.length - 1] % 2\n    if (odd) {\n      prefix = Buffer.from([0x03])\n    } else {\n      prefix = Buffer.from([0x02])\n    }\n    return Buffer.concat([prefix, xbuf])\n  }\n}\n\n/**\n * Will return a sha256 + ripemd160 hash of the serialized public key\n * @see https://github.com/bitcoin/bitcoin/blob/master/src/pubkey.h#L141\n * @returns {Buffer}\n */\nPublicKey.prototype._getID = function _getID () {\n  return Hash.sha256ripemd160(this.toBuffer())\n}\n\n/**\n * Will return an address for the public key\n *\n * @param {String|Network=} network - Which network should the address be for\n * @returns {Address} An address generated from the public key\n */\nPublicKey.prototype.toAddress = function (network) {\n  var Address = require('./address')\n  return Address.fromPublicKey(this, network || this.network)\n}\n\n/**\n * Will output the PublicKey to a DER encoded hex string\n *\n * @returns {string} A DER hex encoded string\n */\nPublicKey.prototype.toString = PublicKey.prototype.toHex = function () {\n  return this.toDER().toString('hex')\n}\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Public key\n */\nPublicKey.prototype.inspect = function () {\n  return '<PublicKey: ' + this.toHex() +\n    (this.compressed ? '' : ', uncompressed') + '>'\n}\n\nmodule.exports = PublicKey\n","'use strict'\n\nvar BN = require('./bn')\nvar Point = require('./point')\nvar Signature = require('./signature')\nvar PublicKey = require('../publickey')\nvar Random = require('./random')\nvar Hash = require('./hash')\nvar _ = require('../util/_')\nvar $ = require('../util/preconditions')\n\nvar ECDSA = function ECDSA (obj) {\n  if (!(this instanceof ECDSA)) {\n    return new ECDSA(obj)\n  }\n  if (obj) {\n    this.set(obj)\n  }\n}\n\nECDSA.prototype.set = function (obj) {\n  this.hashbuf = obj.hashbuf || this.hashbuf\n  this.endian = obj.endian || this.endian // the endianness of hashbuf\n  this.privkey = obj.privkey || this.privkey\n  this.pubkey = obj.pubkey || (this.privkey ? this.privkey.publicKey : this.pubkey)\n  this.sig = obj.sig || this.sig\n  this.k = obj.k || this.k\n  this.verified = obj.verified || this.verified\n  return this\n}\n\nECDSA.prototype.privkey2pubkey = function () {\n  this.pubkey = this.privkey.toPublicKey()\n}\n\nECDSA.prototype.calci = function () {\n  for (var i = 0; i < 4; i++) {\n    this.sig.i = i\n    var Qprime\n    try {\n      Qprime = this.toPublicKey()\n    } catch (e) {\n      console.error(e)\n      continue\n    }\n\n    if (Qprime.point.eq(this.pubkey.point)) {\n      this.sig.compressed = this.pubkey.compressed\n      return this\n    }\n  }\n\n  this.sig.i = undefined\n  throw new Error('Unable to find valid recovery factor')\n}\n\nECDSA.fromString = function (str) {\n  var obj = JSON.parse(str)\n  return new ECDSA(obj)\n}\n\nECDSA.prototype.randomK = function () {\n  var N = Point.getN()\n  var k\n  do {\n    k = BN.fromBuffer(Random.getRandomBuffer(32))\n  } while (!(k.lt(N) && k.gt(BN.Zero)))\n  this.k = k\n  return this\n}\n\n// https://tools.ietf.org/html/rfc6979#section-3.2\nECDSA.prototype.deterministicK = function (badrs) {\n  // if r or s were invalid when this function was used in signing,\n  // we do not want to actually compute r, s here for efficiency, so,\n  // we can increment badrs. explained at end of RFC 6979 section 3.2\n  if (_.isUndefined(badrs)) {\n    badrs = 0\n  }\n  var v = Buffer.alloc(32)\n  v.fill(0x01)\n  var k = Buffer.alloc(32)\n  k.fill(0x00)\n  var x = this.privkey.bn.toBuffer({\n    size: 32\n  })\n  var hashbuf = this.endian === 'little' ? Buffer.from(this.hashbuf).reverse() : this.hashbuf\n  k = Hash.sha256hmac(Buffer.concat([v, Buffer.from([0x00]), x, hashbuf]), k)\n  v = Hash.sha256hmac(v, k)\n  k = Hash.sha256hmac(Buffer.concat([v, Buffer.from([0x01]), x, hashbuf]), k)\n  v = Hash.sha256hmac(v, k)\n  v = Hash.sha256hmac(v, k)\n  var T = BN.fromBuffer(v)\n  var N = Point.getN()\n\n  // also explained in 3.2, we must ensure T is in the proper range (0, N)\n  for (var i = 0; i < badrs || !(T.lt(N) && T.gt(BN.Zero)); i++) {\n    k = Hash.sha256hmac(Buffer.concat([v, Buffer.from([0x00])]), k)\n    v = Hash.sha256hmac(v, k)\n    v = Hash.sha256hmac(v, k)\n    T = BN.fromBuffer(v)\n  }\n\n  this.k = T\n  return this\n}\n\n// Information about public key recovery:\n// https://bitcointalk.org/index.php?topic=6430.0\n// http://stackoverflow.com/questions/19665491/how-do-i-get-an-ecdsa-public-key-from-just-a-bitcoin-signature-sec1-4-1-6-k\nECDSA.prototype.toPublicKey = function () {\n  var i = this.sig.i\n  $.checkArgument(i === 0 || i === 1 || i === 2 || i === 3, new Error('i must be equal to 0, 1, 2, or 3'))\n\n  var e = BN.fromBuffer(this.hashbuf)\n  var r = this.sig.r\n  var s = this.sig.s\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = i & 1\n\n  // The more significant bit specifies whether we should use the\n  // first or second candidate key.\n  var isSecondKey = i >> 1\n\n  var n = Point.getN()\n  var G = Point.getG()\n\n  // 1.1 Let x = r + jn\n  var x = isSecondKey ? r.add(n) : r\n  var R = Point.fromX(isYOdd, x)\n\n  // 1.4 Check that nR is at infinity\n  var nR = R.mul(n)\n\n  if (!nR.isInfinity()) {\n    throw new Error('nR is not a valid curve point')\n  }\n\n  // Compute -e from e\n  var eNeg = e.neg().umod(n)\n\n  // 1.6.1 Compute Q = r^-1 (sR - eG)\n  // Q = r^-1 (sR + -eG)\n  var rInv = r.invm(n)\n\n  // var Q = R.multiplyTwo(s, G, eNeg).mul(rInv);\n  var Q = R.mul(s).add(G.mul(eNeg)).mul(rInv)\n\n  var pubkey = PublicKey.fromPoint(Q, this.sig.compressed)\n\n  return pubkey\n}\n\nECDSA.prototype.sigError = function () {\n  if (!Buffer.isBuffer(this.hashbuf) || this.hashbuf.length !== 32) {\n    return 'hashbuf must be a 32 byte buffer'\n  }\n\n  var r = this.sig.r\n  var s = this.sig.s\n  if (!(r.gt(BN.Zero) && r.lt(Point.getN())) || !(s.gt(BN.Zero) && s.lt(Point.getN()))) {\n    return 'r and s not in range'\n  }\n\n  var e = BN.fromBuffer(this.hashbuf, this.endian ? {\n    endian: this.endian\n  } : undefined)\n  var n = Point.getN()\n  var sinv = s.invm(n)\n  var u1 = sinv.mul(e).umod(n)\n  var u2 = sinv.mul(r).umod(n)\n\n  var p = Point.getG().mulAdd(u1, this.pubkey.point, u2)\n  if (p.isInfinity()) {\n    return 'p is infinity'\n  }\n\n  if (p.getX().umod(n).cmp(r) !== 0) {\n    return 'Invalid signature'\n  } else {\n    return false\n  }\n}\n\nECDSA.toLowS = function (s) {\n  // enforce low s\n  // see BIP 62, \"low S values in signatures\"\n  if (s.gt(BN.fromBuffer(Buffer.from('7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0', 'hex')))) {\n    s = Point.getN().sub(s)\n  }\n  return s\n}\n\nECDSA.prototype._findSignature = function (d, e) {\n  var N = Point.getN()\n  var G = Point.getG()\n  // try different values of k until r, s are valid\n  var badrs = 0\n  var k, Q, r, s\n  do {\n    if (!this.k || badrs > 0) {\n      this.deterministicK(badrs)\n    }\n    badrs++\n    k = this.k\n    Q = G.mul(k)\n    r = new BN(1).mul(Q.x.umod(N))\n    s = k.invm(N).mul(e.add(d.mul(r))).umod(N)\n  } while (r.cmp(BN.Zero) <= 0 || s.cmp(BN.Zero) <= 0)\n\n  s = ECDSA.toLowS(s)\n  return {\n    s: s,\n    r: r\n  }\n}\n\nECDSA.prototype.sign = function () {\n  var hashbuf = this.hashbuf\n  var privkey = this.privkey\n  var d = privkey.bn\n\n  $.checkState(hashbuf && privkey && d, new Error('invalid parameters'))\n  $.checkState(Buffer.isBuffer(hashbuf) && hashbuf.length === 32, new Error('hashbuf must be a 32 byte buffer'))\n\n  var e = BN.fromBuffer(hashbuf, this.endian ? {\n    endian: this.endian\n  } : undefined)\n\n  var obj = this._findSignature(d, e)\n  obj.compressed = this.pubkey.compressed\n\n  this.sig = new Signature(obj)\n  return this\n}\n\nECDSA.prototype.signRandomK = function () {\n  this.randomK()\n  return this.sign()\n}\n\nECDSA.prototype.toString = function () {\n  var obj = {}\n  if (this.hashbuf) {\n    obj.hashbuf = this.hashbuf.toString('hex')\n  }\n  if (this.privkey) {\n    obj.privkey = this.privkey.toString()\n  }\n  if (this.pubkey) {\n    obj.pubkey = this.pubkey.toString()\n  }\n  if (this.sig) {\n    obj.sig = this.sig.toString()\n  }\n  if (this.k) {\n    obj.k = this.k.toString()\n  }\n  return JSON.stringify(obj)\n}\n\nECDSA.prototype.verify = function () {\n  if (!this.sigError()) {\n    this.verified = true\n  } else {\n    this.verified = false\n  }\n  return this\n}\n\nECDSA.sign = function (hashbuf, privkey, endian) {\n  return ECDSA().set({\n    hashbuf: hashbuf,\n    endian: endian,\n    privkey: privkey\n  }).sign().sig\n}\n\nECDSA.signWithCalcI = function (hashbuf, privkey, endian) {\n  return ECDSA().set({\n    hashbuf: hashbuf,\n    endian: endian,\n    privkey: privkey\n  }).sign().calci().sig\n}\n\nECDSA.signRandomK = function (hashbuf, privkey, endian) {\n  return ECDSA().set({\n    hashbuf: hashbuf,\n    endian: endian,\n    privkey: privkey\n  }).signRandomK().sig\n}\n\nECDSA.verify = function (hashbuf, sig, pubkey, endian) {\n  return ECDSA().set({\n    hashbuf: hashbuf,\n    endian: endian,\n    sig: sig,\n    pubkey: pubkey\n  }).verify().verified\n}\n\nmodule.exports = ECDSA\n","'use strict'\n\nvar _ = require('../util/_')\nvar BN = require('../crypto/bn')\nvar BufferReader = require('../encoding/bufferreader')\nvar BufferWriter = require('../encoding/bufferwriter')\nvar Hash = require('../crypto/hash')\nvar $ = require('../util/preconditions')\n\nvar GENESIS_BITS = 0x1d00ffff\n\n/**\n * Instantiate a BlockHeader from a Buffer, JSON object, or Object with\n * the properties of the BlockHeader\n *\n * @param {*} - A Buffer, JSON string, or Object\n * @returns {BlockHeader} - An instance of block header\n * @constructor\n */\nvar BlockHeader = function BlockHeader (arg) {\n  if (!(this instanceof BlockHeader)) {\n    return new BlockHeader(arg)\n  }\n  var info = BlockHeader._from(arg)\n  this.version = info.version\n  this.prevHash = info.prevHash\n  this.merkleRoot = info.merkleRoot\n  this.time = info.time\n  this.timestamp = info.time\n  this.bits = info.bits\n  this.nonce = info.nonce\n\n  if (info.hash) {\n    $.checkState(\n      this.hash === info.hash,\n      'Argument object hash property does not match block hash.'\n    )\n  }\n\n  return this\n}\n\n/**\n * @param {*} - A Buffer, JSON string or Object\n * @returns {Object} - An object representing block header data\n * @throws {TypeError} - If the argument was not recognized\n * @private\n */\nBlockHeader._from = function _from (arg) {\n  var info = {}\n  if (Buffer.isBuffer(arg)) {\n    info = BlockHeader._fromBufferReader(BufferReader(arg))\n  } else if (_.isObject(arg)) {\n    info = BlockHeader._fromObject(arg)\n  } else {\n    throw new TypeError('Unrecognized argument for BlockHeader')\n  }\n  return info\n}\n\n/**\n * @param {Object} - A JSON string\n * @returns {Object} - An object representing block header data\n * @private\n */\nBlockHeader._fromObject = function _fromObject (data) {\n  $.checkArgument(data, 'data is required')\n  var prevHash = data.prevHash\n  var merkleRoot = data.merkleRoot\n  if (_.isString(data.prevHash)) {\n    prevHash = Buffer.from(data.prevHash, 'hex').reverse()\n  }\n  if (_.isString(data.merkleRoot)) {\n    merkleRoot = Buffer.from(data.merkleRoot, 'hex').reverse()\n  }\n  var info = {\n    hash: data.hash,\n    version: data.version,\n    prevHash: prevHash,\n    merkleRoot: merkleRoot,\n    time: data.time,\n    timestamp: data.time,\n    bits: data.bits,\n    nonce: data.nonce\n  }\n  return info\n}\n\n/**\n * @param {Object} - A plain JavaScript object\n * @returns {BlockHeader} - An instance of block header\n */\nBlockHeader.fromObject = function fromObject (obj) {\n  var info = BlockHeader._fromObject(obj)\n  return new BlockHeader(info)\n}\n\n/**\n * @param {Binary} - Raw block binary data or buffer\n * @returns {BlockHeader} - An instance of block header\n */\nBlockHeader.fromRawBlock = function fromRawBlock (data) {\n  if (!Buffer.isBuffer(data)) {\n    data = Buffer.from(data, 'binary')\n  }\n  var br = BufferReader(data)\n  br.pos = BlockHeader.Constants.START_OF_HEADER\n  var info = BlockHeader._fromBufferReader(br)\n  return new BlockHeader(info)\n}\n\n/**\n * @param {Buffer} - A buffer of the block header\n * @returns {BlockHeader} - An instance of block header\n */\nBlockHeader.fromBuffer = function fromBuffer (buf) {\n  var info = BlockHeader._fromBufferReader(BufferReader(buf))\n  return new BlockHeader(info)\n}\n\n/**\n * @param {string} - A hex encoded buffer of the block header\n * @returns {BlockHeader} - An instance of block header\n */\nBlockHeader.fromString = function fromString (str) {\n  var buf = Buffer.from(str, 'hex')\n  return BlockHeader.fromBuffer(buf)\n}\n\n/**\n * @param {BufferReader} - A BufferReader of the block header\n * @returns {Object} - An object representing block header data\n * @private\n */\nBlockHeader._fromBufferReader = function _fromBufferReader (br) {\n  var info = {}\n  info.version = br.readInt32LE()\n  info.prevHash = br.read(32)\n  info.merkleRoot = br.read(32)\n  info.time = br.readUInt32LE()\n  info.bits = br.readUInt32LE()\n  info.nonce = br.readUInt32LE()\n  return info\n}\n\n/**\n * @param {BufferReader} - A BufferReader of the block header\n * @returns {BlockHeader} - An instance of block header\n */\nBlockHeader.fromBufferReader = function fromBufferReader (br) {\n  var info = BlockHeader._fromBufferReader(br)\n  return new BlockHeader(info)\n}\n\n/**\n * @returns {Object} - A plain object of the BlockHeader\n */\nBlockHeader.prototype.toObject = BlockHeader.prototype.toJSON = function toObject () {\n  return {\n    hash: this.hash,\n    version: this.version,\n    prevHash: Buffer.from(this.prevHash).reverse().toString('hex'),\n    merkleRoot: Buffer.from(this.merkleRoot).reverse().toString('hex'),\n    time: this.time,\n    bits: this.bits,\n    nonce: this.nonce\n  }\n}\n\n/**\n * @returns {Buffer} - A Buffer of the BlockHeader\n */\nBlockHeader.prototype.toBuffer = function toBuffer () {\n  return this.toBufferWriter().concat()\n}\n\n/**\n * @returns {string} - A hex encoded string of the BlockHeader\n */\nBlockHeader.prototype.toString = function toString () {\n  return this.toBuffer().toString('hex')\n}\n\n/**\n * @param {BufferWriter} - An existing instance BufferWriter\n * @returns {BufferWriter} - An instance of BufferWriter representation of the BlockHeader\n */\nBlockHeader.prototype.toBufferWriter = function toBufferWriter (bw) {\n  if (!bw) {\n    bw = new BufferWriter()\n  }\n  bw.writeInt32LE(this.version)\n  bw.write(this.prevHash)\n  bw.write(this.merkleRoot)\n  bw.writeUInt32LE(this.time)\n  bw.writeUInt32LE(this.bits)\n  bw.writeUInt32LE(this.nonce)\n  return bw\n}\n\n/**\n * Returns the target difficulty for this block\n * @param {Number} bits\n * @returns {BN} An instance of BN with the decoded difficulty bits\n */\nBlockHeader.prototype.getTargetDifficulty = function getTargetDifficulty (bits) {\n  bits = bits || this.bits\n\n  var target = new BN(bits & 0xffffff)\n  var mov = 8 * ((bits >>> 24) - 3)\n  while (mov-- > 0) {\n    target = target.mul(new BN(2))\n  }\n  return target\n}\n\n/**\n * @link https://en.bitcoin.it/wiki/Difficulty\n * @return {Number}\n */\nBlockHeader.prototype.getDifficulty = function getDifficulty () {\n  var difficulty1TargetBN = this.getTargetDifficulty(GENESIS_BITS).mul(new BN(Math.pow(10, 8)))\n  var currentTargetBN = this.getTargetDifficulty()\n\n  var difficultyString = difficulty1TargetBN.div(currentTargetBN).toString(10)\n  var decimalPos = difficultyString.length - 8\n  difficultyString = difficultyString.slice(0, decimalPos) + '.' + difficultyString.slice(decimalPos)\n\n  return parseFloat(difficultyString)\n}\n\n/**\n * @returns {Buffer} - The little endian hash buffer of the header\n */\nBlockHeader.prototype._getHash = function hash () {\n  var buf = this.toBuffer()\n  return Hash.sha256sha256(buf)\n}\n\nvar idProperty = {\n  configurable: false,\n  enumerable: true,\n  /**\n   * @returns {string} - The big endian hash buffer of the header\n   */\n  get: function () {\n    if (!this._id) {\n      this._id = BufferReader(this._getHash()).readReverse().toString('hex')\n    }\n    return this._id\n  },\n  set: _.noop\n}\nObject.defineProperty(BlockHeader.prototype, 'id', idProperty)\nObject.defineProperty(BlockHeader.prototype, 'hash', idProperty)\n\n/**\n * @returns {Boolean} - If timestamp is not too far in the future\n */\nBlockHeader.prototype.validTimestamp = function validTimestamp () {\n  var currentTime = Math.round(new Date().getTime() / 1000)\n  if (this.time > currentTime + BlockHeader.Constants.MAX_TIME_OFFSET) {\n    return false\n  }\n  return true\n}\n\n/**\n * @returns {Boolean} - If the proof-of-work hash satisfies the target difficulty\n */\nBlockHeader.prototype.validProofOfWork = function validProofOfWork () {\n  var pow = new BN(this.id, 'hex')\n  var target = this.getTargetDifficulty()\n\n  if (pow.cmp(target) > 0) {\n    return false\n  }\n  return true\n}\n\n/**\n * @returns {string} - A string formatted for the console\n */\nBlockHeader.prototype.inspect = function inspect () {\n  return '<BlockHeader ' + this.id + '>'\n}\n\nBlockHeader.Constants = {\n  START_OF_HEADER: 8, // Start buffer position in raw block data\n  MAX_TIME_OFFSET: 2 * 60 * 60, // The max a timestamp can be in the future\n  LARGEST_HASH: new BN('10000000000000000000000000000000000000000000000000000000000000000', 'hex')\n}\n\nmodule.exports = BlockHeader\n","'use strict'\n\nvar _ = require('../util/_')\nvar BlockHeader = require('./blockheader')\nvar BN = require('../crypto/bn')\nvar BufferReader = require('../encoding/bufferreader')\nvar BufferWriter = require('../encoding/bufferwriter')\nvar Hash = require('../crypto/hash')\nvar Transaction = require('../transaction')\nvar $ = require('../util/preconditions')\n\n/**\n * Instantiate a Block from a Buffer, JSON object, or Object with\n * the properties of the Block\n *\n * @param {*} - A Buffer, JSON string, or Object\n * @returns {Block}\n * @constructor\n */\nfunction Block (arg) {\n  if (!(this instanceof Block)) {\n    return new Block(arg)\n  }\n  _.extend(this, Block._from(arg))\n  return this\n}\n\nBlock.MAX_BLOCK_SIZE = 128000000\n\n/**\n * @param {*} - A Buffer, JSON string or Object\n * @returns {Object} - An object representing block data\n * @throws {TypeError} - If the argument was not recognized\n * @private\n */\nBlock._from = function _from (arg) {\n  var info = {}\n  if (Buffer.isBuffer(arg)) {\n    info = Block._fromBufferReader(BufferReader(arg))\n  } else if (_.isObject(arg)) {\n    info = Block._fromObject(arg)\n  } else {\n    throw new TypeError('Unrecognized argument for Block')\n  }\n  return info\n}\n\n/**\n * @param {Object} - A plain JavaScript object\n * @returns {Object} - An object representing block data\n * @private\n */\nBlock._fromObject = function _fromObject (data) {\n  var transactions = []\n  data.transactions.forEach(function (tx) {\n    if (tx instanceof Transaction) {\n      transactions.push(tx)\n    } else {\n      transactions.push(Transaction().fromObject(tx))\n    }\n  })\n  var info = {\n    header: BlockHeader.fromObject(data.header),\n    transactions: transactions\n  }\n  return info\n}\n\n/**\n * @param {Object} - A plain JavaScript object\n * @returns {Block} - An instance of block\n */\nBlock.fromObject = function fromObject (obj) {\n  var info = Block._fromObject(obj)\n  return new Block(info)\n}\n\n/**\n * @param {BufferReader} - Block data\n * @returns {Object} - An object representing the block data\n * @private\n */\nBlock._fromBufferReader = function _fromBufferReader (br) {\n  var info = {}\n  $.checkState(!br.finished(), 'No block data received')\n  info.header = BlockHeader.fromBufferReader(br)\n  var transactions = br.readVarintNum()\n  info.transactions = []\n  for (var i = 0; i < transactions; i++) {\n    info.transactions.push(Transaction().fromBufferReader(br))\n  }\n  return info\n}\n\n/**\n * @param {BufferReader} - A buffer reader of the block\n * @returns {Block} - An instance of block\n */\nBlock.fromBufferReader = function fromBufferReader (br) {\n  $.checkArgument(br, 'br is required')\n  var info = Block._fromBufferReader(br)\n  return new Block(info)\n}\n\n/**\n * @param {Buffer} - A buffer of the block\n * @returns {Block} - An instance of block\n */\nBlock.fromBuffer = function fromBuffer (buf) {\n  return Block.fromBufferReader(new BufferReader(buf))\n}\n\n/**\n * @param {string} - str - A hex encoded string of the block\n * @returns {Block} - A hex encoded string of the block\n */\nBlock.fromString = function fromString (str) {\n  var buf = Buffer.from(str, 'hex')\n  return Block.fromBuffer(buf)\n}\n\n/**\n * @param {Binary} - Raw block binary data or buffer\n * @returns {Block} - An instance of block\n */\nBlock.fromRawBlock = function fromRawBlock (data) {\n  if (!Buffer.isBuffer(data)) {\n    data = Buffer.from(data, 'binary')\n  }\n  var br = BufferReader(data)\n  br.pos = Block.Values.START_OF_BLOCK\n  var info = Block._fromBufferReader(br)\n  return new Block(info)\n}\n\n/**\n * @returns {Object} - A plain object with the block properties\n */\nBlock.prototype.toObject = Block.prototype.toJSON = function toObject () {\n  var transactions = []\n  this.transactions.forEach(function (tx) {\n    transactions.push(tx.toObject())\n  })\n  return {\n    header: this.header.toObject(),\n    transactions: transactions\n  }\n}\n\n/**\n * @returns {Buffer} - A buffer of the block\n */\nBlock.prototype.toBuffer = function toBuffer () {\n  return this.toBufferWriter().concat()\n}\n\n/**\n * @returns {string} - A hex encoded string of the block\n */\nBlock.prototype.toString = function toString () {\n  return this.toBuffer().toString('hex')\n}\n\n/**\n * @param {BufferWriter} - An existing instance of BufferWriter\n * @returns {BufferWriter} - An instance of BufferWriter representation of the Block\n */\nBlock.prototype.toBufferWriter = function toBufferWriter (bw) {\n  if (!bw) {\n    bw = new BufferWriter()\n  }\n  bw.write(this.header.toBuffer())\n  bw.writeVarintNum(this.transactions.length)\n  for (var i = 0; i < this.transactions.length; i++) {\n    this.transactions[i].toBufferWriter(bw)\n  }\n  return bw\n}\n\n/**\n * Will iterate through each transaction and return an array of hashes\n * @returns {Array} - An array with transaction hashes\n */\nBlock.prototype.getTransactionHashes = function getTransactionHashes () {\n  var hashes = []\n  if (this.transactions.length === 0) {\n    return [Block.Values.NULL_HASH]\n  }\n  for (var t = 0; t < this.transactions.length; t++) {\n    hashes.push(this.transactions[t]._getHash())\n  }\n  return hashes\n}\n\n/**\n * Will build a merkle tree of all the transactions, ultimately arriving at\n * a single point, the merkle root.\n * @link https://en.bitcoin.it/wiki/Protocol_specification#Merkle_Trees\n * @returns {Array} - An array with each level of the tree after the other.\n */\nBlock.prototype.getMerkleTree = function getMerkleTree () {\n  var tree = this.getTransactionHashes()\n\n  var j = 0\n  for (var size = this.transactions.length; size > 1; size = Math.floor((size + 1) / 2)) {\n    for (var i = 0; i < size; i += 2) {\n      var i2 = Math.min(i + 1, size - 1)\n      var buf = Buffer.concat([tree[j + i], tree[j + i2]])\n      tree.push(Hash.sha256sha256(buf))\n    }\n    j += size\n  }\n\n  return tree\n}\n\n/**\n * Calculates the merkleRoot from the transactions.\n * @returns {Buffer} - A buffer of the merkle root hash\n */\nBlock.prototype.getMerkleRoot = function getMerkleRoot () {\n  var tree = this.getMerkleTree()\n  return tree[tree.length - 1]\n}\n\n/**\n * Verifies that the transactions in the block match the header merkle root\n * @returns {Boolean} - If the merkle roots match\n */\nBlock.prototype.validMerkleRoot = function validMerkleRoot () {\n  var h = new BN(this.header.merkleRoot.toString('hex'), 'hex')\n  var c = new BN(this.getMerkleRoot().toString('hex'), 'hex')\n\n  if (h.cmp(c) !== 0) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @returns {Buffer} - The little endian hash buffer of the header\n */\nBlock.prototype._getHash = function () {\n  return this.header._getHash()\n}\n\nvar idProperty = {\n  configurable: false,\n  enumerable: true,\n  /**\n   * @returns {string} - The big endian hash buffer of the header\n   */\n  get: function () {\n    if (!this._id) {\n      this._id = this.header.id\n    }\n    return this._id\n  },\n  set: _.noop\n}\nObject.defineProperty(Block.prototype, 'id', idProperty)\nObject.defineProperty(Block.prototype, 'hash', idProperty)\n\n/**\n * @returns {string} - A string formatted for the console\n */\nBlock.prototype.inspect = function inspect () {\n  return '<Block ' + this.id + '>'\n}\n\nBlock.Values = {\n  START_OF_BLOCK: 8, // Start of block in raw block data\n  NULL_HASH: Buffer.from('0000000000000000000000000000000000000000000000000000000000000000', 'hex')\n}\n\nmodule.exports = Block\n","'use strict'\n\nvar _ = require('../util/_')\nvar BlockHeader = require('./blockheader')\nvar BufferReader = require('../encoding/bufferreader')\nvar BufferWriter = require('../encoding/bufferwriter')\nvar Hash = require('../crypto/hash')\nvar Transaction = require('../transaction')\nvar errors = require('../errors')\nvar $ = require('../util/preconditions')\n\n/**\n * Instantiate a MerkleBlock from a Buffer, JSON object, or Object with\n * the properties of the Block\n *\n * @param {*} - A Buffer, JSON string, or Object representing a MerkleBlock\n * @returns {MerkleBlock}\n * @constructor\n */\nfunction MerkleBlock (arg) {\n  if (!(this instanceof MerkleBlock)) {\n    return new MerkleBlock(arg)\n  }\n\n  var info = {}\n  if (Buffer.isBuffer(arg)) {\n    info = MerkleBlock._fromBufferReader(BufferReader(arg))\n  } else if (_.isObject(arg)) {\n    var header\n    if (arg.header instanceof BlockHeader) {\n      header = arg.header\n    } else {\n      header = BlockHeader.fromObject(arg.header)\n    }\n    info = {\n      /**\n       * @name MerkleBlock#header\n       * @type {BlockHeader}\n       */\n      header: header,\n      /**\n       * @name MerkleBlock#numTransactions\n       * @type {Number}\n       */\n      numTransactions: arg.numTransactions,\n      /**\n       * @name MerkleBlock#hashes\n       * @type {String[]}\n       */\n      hashes: arg.hashes,\n      /**\n       * @name MerkleBlock#flags\n       * @type {Number[]}\n       */\n      flags: arg.flags\n    }\n  } else {\n    throw new TypeError('Unrecognized argument for MerkleBlock')\n  }\n  _.extend(this, info)\n  this._flagBitsUsed = 0\n  this._hashesUsed = 0\n\n  return this\n}\n\n/**\n * @param {Buffer} - MerkleBlock data in a Buffer object\n * @returns {MerkleBlock} - A MerkleBlock object\n */\nMerkleBlock.fromBuffer = function fromBuffer (buf) {\n  return MerkleBlock.fromBufferReader(BufferReader(buf))\n}\n\n/**\n * @param {BufferReader} - MerkleBlock data in a BufferReader object\n * @returns {MerkleBlock} - A MerkleBlock object\n */\nMerkleBlock.fromBufferReader = function fromBufferReader (br) {\n  return new MerkleBlock(MerkleBlock._fromBufferReader(br))\n}\n\n/**\n * @returns {Buffer} - A buffer of the block\n */\nMerkleBlock.prototype.toBuffer = function toBuffer () {\n  return this.toBufferWriter().concat()\n}\n\n/**\n * @param {BufferWriter} - An existing instance of BufferWriter\n * @returns {BufferWriter} - An instance of BufferWriter representation of the MerkleBlock\n */\nMerkleBlock.prototype.toBufferWriter = function toBufferWriter (bw) {\n  if (!bw) {\n    bw = new BufferWriter()\n  }\n  bw.write(this.header.toBuffer())\n  bw.writeUInt32LE(this.numTransactions)\n  bw.writeVarintNum(this.hashes.length)\n  for (var i = 0; i < this.hashes.length; i++) {\n    bw.write(Buffer.from(this.hashes[i], 'hex'))\n  }\n  bw.writeVarintNum(this.flags.length)\n  for (i = 0; i < this.flags.length; i++) {\n    bw.writeUInt8(this.flags[i])\n  }\n  return bw\n}\n\n/**\n * @returns {Object} - A plain object with the MerkleBlock properties\n */\nMerkleBlock.prototype.toObject = MerkleBlock.prototype.toJSON = function toObject () {\n  return {\n    header: this.header.toObject(),\n    numTransactions: this.numTransactions,\n    hashes: this.hashes,\n    flags: this.flags\n  }\n}\n\n/**\n * Verify that the MerkleBlock is valid\n * @returns {Boolean} - True/False whether this MerkleBlock is Valid\n */\nMerkleBlock.prototype.validMerkleTree = function validMerkleTree () {\n  $.checkState(_.isArray(this.flags), 'MerkleBlock flags is not an array')\n  $.checkState(_.isArray(this.hashes), 'MerkleBlock hashes is not an array')\n\n  // Can't have more hashes than numTransactions\n  if (this.hashes.length > this.numTransactions) {\n    return false\n  }\n\n  // Can't have more flag bits than num hashes\n  if (this.flags.length * 8 < this.hashes.length) {\n    return false\n  }\n\n  var height = this._calcTreeHeight()\n  var opts = { hashesUsed: 0, flagBitsUsed: 0 }\n  var root = this._traverseMerkleTree(height, 0, opts)\n  if (opts.hashesUsed !== this.hashes.length) {\n    return false\n  }\n  return root.equals(this.header.merkleRoot)\n}\n\n/**\n * WARNING: This method is deprecated. Use filteredTxsHash instead.\n *\n * Return a list of all the txs hash that match the filter\n * @returns {Array} - txs hash that match the filter\n */\nMerkleBlock.prototype.filterdTxsHash = function filterdTxsHash () {\n  throw new Error('filterdTxsHash has been deprecated. use filteredTxsHash.')\n}\n\n/**\n * Return a list of all the txs hash that match the filter\n * @returns {Array} - txs hash that match the filter\n */\nMerkleBlock.prototype.filteredTxsHash = function filteredTxsHash () {\n  $.checkState(_.isArray(this.flags), 'MerkleBlock flags is not an array')\n  $.checkState(_.isArray(this.hashes), 'MerkleBlock hashes is not an array')\n\n  // Can't have more hashes than numTransactions\n  if (this.hashes.length > this.numTransactions) {\n    throw new errors.MerkleBlock.InvalidMerkleTree()\n  }\n\n  // Can't have more flag bits than num hashes\n  if (this.flags.length * 8 < this.hashes.length) {\n    throw new errors.MerkleBlock.InvalidMerkleTree()\n  }\n\n  // If there is only one hash the filter do not match any txs in the block\n  if (this.hashes.length === 1) {\n    return []\n  };\n\n  var height = this._calcTreeHeight()\n  var opts = { hashesUsed: 0, flagBitsUsed: 0 }\n  var txs = this._traverseMerkleTree(height, 0, opts, true)\n  if (opts.hashesUsed !== this.hashes.length) {\n    throw new errors.MerkleBlock.InvalidMerkleTree()\n  }\n  return txs\n}\n\n/**\n * Traverse a the tree in this MerkleBlock, validating it along the way\n * Modeled after Bitcoin Core merkleblock.cpp TraverseAndExtract()\n * @param {Number} - depth - Current height\n * @param {Number} - pos - Current position in the tree\n * @param {Object} - opts - Object with values that need to be mutated throughout the traversal\n * @param {Boolean} - checkForTxs - if true return opts.txs else return the Merkle Hash\n * @param {Number} - opts.flagBitsUsed - Number of flag bits used, should start at 0\n * @param {Number} - opts.hashesUsed - Number of hashes used, should start at 0\n * @param {Array} - opts.txs - Will finish populated by transactions found during traversal that match the filter\n * @returns {Buffer|null} - Buffer containing the Merkle Hash for that height\n * @returns {Array} - transactions found during traversal that match the filter\n * @private\n */\nMerkleBlock.prototype._traverseMerkleTree = function traverseMerkleTree (depth, pos, opts, checkForTxs) {\n  opts = opts || {}\n  opts.txs = opts.txs || []\n  opts.flagBitsUsed = opts.flagBitsUsed || 0\n  opts.hashesUsed = opts.hashesUsed || 0\n  checkForTxs = checkForTxs || false\n\n  if (opts.flagBitsUsed > this.flags.length * 8) {\n    return null\n  }\n  var isParentOfMatch = (this.flags[opts.flagBitsUsed >> 3] >>> (opts.flagBitsUsed++ & 7)) & 1\n  if (depth === 0 || !isParentOfMatch) {\n    if (opts.hashesUsed >= this.hashes.length) {\n      return null\n    }\n    var hash = this.hashes[opts.hashesUsed++]\n    if (depth === 0 && isParentOfMatch) {\n      opts.txs.push(hash)\n    }\n    return Buffer.from(hash, 'hex')\n  } else {\n    var left = this._traverseMerkleTree(depth - 1, pos * 2, opts)\n    var right = left\n    if (pos * 2 + 1 < this._calcTreeWidth(depth - 1)) {\n      right = this._traverseMerkleTree(depth - 1, pos * 2 + 1, opts)\n    }\n    if (checkForTxs) {\n      return opts.txs\n    } else {\n      return Hash.sha256sha256(Buffer.concat([left, right]))\n    }\n  }\n}\n\n/** Calculates the width of a merkle tree at a given height.\n *  Modeled after Bitcoin Core merkleblock.h CalcTreeWidth()\n * @param {Number} - Height at which we want the tree width\n * @returns {Number} - Width of the tree at a given height\n * @private\n */\nMerkleBlock.prototype._calcTreeWidth = function calcTreeWidth (height) {\n  return (this.numTransactions + (1 << height) - 1) >> height\n}\n\n/** Calculates the height of the merkle tree in this MerkleBlock\n * @param {Number} - Height at which we want the tree width\n * @returns {Number} - Height of the merkle tree in this MerkleBlock\n * @private\n */\nMerkleBlock.prototype._calcTreeHeight = function calcTreeHeight () {\n  var height = 0\n  while (this._calcTreeWidth(height) > 1) {\n    height++\n  }\n  return height\n}\n\n/**\n * @param {Transaction|String} - Transaction or Transaction ID Hash\n * @returns {Boolean} - return true/false if this MerkleBlock has the TX or not\n * @private\n */\nMerkleBlock.prototype.hasTransaction = function hasTransaction (tx) {\n  $.checkArgument(!_.isUndefined(tx), 'tx cannot be undefined')\n  $.checkArgument(tx instanceof Transaction || typeof tx === 'string',\n    'Invalid tx given, tx must be a \"string\" or \"Transaction\"')\n\n  var hash = tx\n  if (tx instanceof Transaction) {\n    // We need to reverse the id hash for the lookup\n    hash = Buffer.from(tx.id, 'hex').reverse().toString('hex')\n  }\n\n  var txs = []\n  var height = this._calcTreeHeight()\n  this._traverseMerkleTree(height, 0, { txs: txs })\n  return txs.indexOf(hash) !== -1\n}\n\n/**\n * @param {Buffer} - MerkleBlock data\n * @returns {Object} - An Object representing merkleblock data\n * @private\n */\nMerkleBlock._fromBufferReader = function _fromBufferReader (br) {\n  $.checkState(!br.finished(), 'No merkleblock data received')\n  var info = {}\n  info.header = BlockHeader.fromBufferReader(br)\n  info.numTransactions = br.readUInt32LE()\n  var numHashes = br.readVarintNum()\n  info.hashes = []\n  for (var i = 0; i < numHashes; i++) {\n    info.hashes.push(br.read(32).toString('hex'))\n  }\n  var numFlags = br.readVarintNum()\n  info.flags = []\n  for (i = 0; i < numFlags; i++) {\n    info.flags.push(br.readUInt8())\n  }\n  return info\n}\n\n/**\n * @param {Object} - A plain JavaScript object\n * @returns {Block} - An instance of block\n */\nMerkleBlock.fromObject = function fromObject (obj) {\n  return new MerkleBlock(obj)\n}\n\nmodule.exports = MerkleBlock\n","module.exports = require('./block')\n\nmodule.exports.BlockHeader = require('./blockheader')\nmodule.exports.MerkleBlock = require('./merkleblock')\n","'use strict'\n\nvar _ = require('./util/_')\nvar $ = require('./util/preconditions')\n\nvar BN = require('./crypto/bn')\nvar Base58 = require('./encoding/base58')\nvar Base58Check = require('./encoding/base58check')\nvar Hash = require('./crypto/hash')\nvar HDPrivateKey = require('./hdprivatekey')\nvar Network = require('./networks')\nvar Point = require('./crypto/point')\nvar PublicKey = require('./publickey')\n\nvar bsvErrors = require('./errors')\nvar errors = bsvErrors\nvar hdErrors = bsvErrors.HDPublicKey\nvar assert = require('assert')\n\nvar JSUtil = require('./util/js')\n\n/**\n * The representation of an hierarchically derived public key.\n *\n * See https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\n *\n * @constructor\n * @param {Object|string|Buffer} arg\n */\nfunction HDPublicKey (arg) {\n  if (arg instanceof HDPublicKey) {\n    return arg\n  }\n  if (!(this instanceof HDPublicKey)) {\n    return new HDPublicKey(arg)\n  }\n  if (arg) {\n    if (_.isString(arg) || Buffer.isBuffer(arg)) {\n      var error = HDPublicKey.getSerializedError(arg)\n      if (!error) {\n        return this._buildFromSerialized(arg)\n      } else if (Buffer.isBuffer(arg) && !HDPublicKey.getSerializedError(arg.toString())) {\n        return this._buildFromSerialized(arg.toString())\n      } else {\n        if (error instanceof hdErrors.ArgumentIsPrivateExtended) {\n          return new HDPrivateKey(arg).hdPublicKey\n        }\n        throw error\n      }\n    } else {\n      if (_.isObject(arg)) {\n        if (arg instanceof HDPrivateKey) {\n          return this._buildFromPrivate(arg)\n        } else {\n          return this._buildFromObject(arg)\n        }\n      } else {\n        throw new hdErrors.UnrecognizedArgument(arg)\n      }\n    }\n  } else {\n    throw new hdErrors.MustSupplyArgument()\n  }\n}\n\nHDPublicKey.fromHDPrivateKey = function (hdPrivateKey) {\n  return new HDPublicKey(hdPrivateKey)\n}\n\n/**\n * Verifies that a given path is valid.\n *\n * @param {string|number} arg\n * @return {boolean}\n */\nHDPublicKey.isValidPath = function (arg) {\n  if (_.isString(arg)) {\n    var indexes = HDPrivateKey._getDerivationIndexes(arg)\n    return indexes !== null && _.every(indexes, HDPublicKey.isValidPath)\n  }\n\n  if (_.isNumber(arg)) {\n    return arg >= 0 && arg < HDPublicKey.Hardened\n  }\n\n  return false\n}\n\n/**\n * WARNING: This method is deprecated. Use deriveChild instead.\n *\n *\n * Get a derivated child based on a string or number.\n *\n * If the first argument is a string, it's parsed as the full path of\n * derivation. Valid values for this argument include \"m\" (which returns the\n * same public key), \"m/0/1/40/2/1000\".\n *\n * Note that hardened keys can't be derived from a public extended key.\n *\n * If the first argument is a number, the child with that index will be\n * derived. See the example usage for clarification.\n *\n * @example\n * ```javascript\n * var parent = new HDPublicKey('xpub...');\n * var child_0_1_2 = parent.derive(0).derive(1).derive(2);\n * var copy_of_child_0_1_2 = parent.derive(\"m/0/1/2\");\n * assert(child_0_1_2.xprivkey === copy_of_child_0_1_2);\n * ```\n *\n * @param {string|number} arg\n */\nHDPublicKey.prototype.derive = function () {\n  throw new Error('derive has been deprecated. use deriveChild or, for the old way, deriveNonCompliantChild.')\n}\n\n/**\n * WARNING: This method will not be officially supported until v1.0.0.\n *\n *\n * Get a derivated child based on a string or number.\n *\n * If the first argument is a string, it's parsed as the full path of\n * derivation. Valid values for this argument include \"m\" (which returns the\n * same public key), \"m/0/1/40/2/1000\".\n *\n * Note that hardened keys can't be derived from a public extended key.\n *\n * If the first argument is a number, the child with that index will be\n * derived. See the example usage for clarification.\n *\n * @example\n * ```javascript\n * var parent = new HDPublicKey('xpub...');\n * var child_0_1_2 = parent.deriveChild(0).deriveChild(1).deriveChild(2);\n * var copy_of_child_0_1_2 = parent.deriveChild(\"m/0/1/2\");\n * assert(child_0_1_2.xprivkey === copy_of_child_0_1_2);\n * ```\n *\n * @param {string|number} arg\n */\nHDPublicKey.prototype.deriveChild = function (arg, hardened) {\n  if (_.isNumber(arg)) {\n    return this._deriveWithNumber(arg, hardened)\n  } else if (_.isString(arg)) {\n    return this._deriveFromString(arg)\n  } else {\n    throw new hdErrors.InvalidDerivationArgument(arg)\n  }\n}\n\nHDPublicKey.prototype._deriveWithNumber = function (index, hardened) {\n  if (index >= HDPublicKey.Hardened || hardened) {\n    throw new hdErrors.InvalidIndexCantDeriveHardened()\n  }\n  if (index < 0) {\n    throw new hdErrors.InvalidPath(index)\n  }\n\n  var indexBuffer = JSUtil.integerAsBuffer(index)\n  var data = Buffer.concat([this.publicKey.toBuffer(), indexBuffer])\n  var hash = Hash.sha512hmac(data, this._buffers.chainCode)\n  var leftPart = BN.fromBuffer(hash.slice(0, 32), { size: 32 })\n  var chainCode = hash.slice(32, 64)\n\n  var publicKey\n  try {\n    publicKey = PublicKey.fromPoint(Point.getG().mul(leftPart).add(this.publicKey.point))\n  } catch (e) {\n    return this._deriveWithNumber(index + 1)\n  }\n\n  var derived = new HDPublicKey({\n    network: this.network,\n    depth: this.depth + 1,\n    parentFingerPrint: this.fingerPrint,\n    childIndex: index,\n    chainCode: chainCode,\n    publicKey: publicKey\n  })\n\n  return derived\n}\n\nHDPublicKey.prototype._deriveFromString = function (path) {\n  if (_.includes(path, \"'\")) {\n    throw new hdErrors.InvalidIndexCantDeriveHardened()\n  } else if (!HDPublicKey.isValidPath(path)) {\n    throw new hdErrors.InvalidPath(path)\n  }\n\n  var indexes = HDPrivateKey._getDerivationIndexes(path)\n  var derived = indexes.reduce(function (prev, index) {\n    return prev._deriveWithNumber(index)\n  }, this)\n\n  return derived\n}\n\n/**\n * Verifies that a given serialized public key in base58 with checksum format\n * is valid.\n *\n * @param {string|Buffer} data - the serialized public key\n * @param {string|Network=} network - optional, if present, checks that the\n *     network provided matches the network serialized.\n * @return {boolean}\n */\nHDPublicKey.isValidSerialized = function (data, network) {\n  return _.isNull(HDPublicKey.getSerializedError(data, network))\n}\n\n/**\n * Checks what's the error that causes the validation of a serialized public key\n * in base58 with checksum to fail.\n *\n * @param {string|Buffer} data - the serialized public key\n * @param {string|Network=} network - optional, if present, checks that the\n *     network provided matches the network serialized.\n * @return {errors|null}\n */\nHDPublicKey.getSerializedError = function (data, network) {\n  if (!(_.isString(data) || Buffer.isBuffer(data))) {\n    return new hdErrors.UnrecognizedArgument('expected buffer or string')\n  }\n  if (!Base58.validCharacters(data)) {\n    return new errors.InvalidB58Char('(unknown)', data)\n  }\n  try {\n    data = Base58Check.decode(data)\n  } catch (e) {\n    return new errors.InvalidB58Checksum(data)\n  }\n  if (data.length !== HDPublicKey.DataSize) {\n    return new hdErrors.InvalidLength(data)\n  }\n  if (!_.isUndefined(network)) {\n    var error = HDPublicKey._validateNetwork(data, network)\n    if (error) {\n      return error\n    }\n  }\n  var version = data.readUInt32BE(0)\n  if (version === Network.livenet.xprivkey || version === Network.testnet.xprivkey) {\n    return new hdErrors.ArgumentIsPrivateExtended()\n  }\n  return null\n}\n\nHDPublicKey._validateNetwork = function (data, networkArg) {\n  var network = Network.get(networkArg)\n  if (!network) {\n    return new errors.InvalidNetworkArgument(networkArg)\n  }\n  var version = data.slice(HDPublicKey.VersionStart, HDPublicKey.VersionEnd)\n  if (version.readUInt32BE(0) !== network.xpubkey) {\n    return new errors.InvalidNetwork(version)\n  }\n  return null\n}\n\nHDPublicKey.prototype._buildFromPrivate = function (arg) {\n  var args = _.clone(arg._buffers)\n  var point = Point.getG().mul(BN.fromBuffer(args.privateKey))\n  args.publicKey = Point.pointToCompressed(point)\n  args.version = JSUtil.integerAsBuffer(Network.get(args.version.readUInt32BE(0)).xpubkey)\n  args.privateKey = undefined\n  args.checksum = undefined\n  args.xprivkey = undefined\n  return this._buildFromBuffers(args)\n}\n\nHDPublicKey.prototype._buildFromObject = function (arg) {\n  // TODO: Type validation\n  var buffers = {\n    version: arg.network ? JSUtil.integerAsBuffer(Network.get(arg.network).xpubkey) : arg.version,\n    depth: _.isNumber(arg.depth) ? Buffer.from([arg.depth & 0xff]) : arg.depth,\n    parentFingerPrint: _.isNumber(arg.parentFingerPrint) ? JSUtil.integerAsBuffer(arg.parentFingerPrint) : arg.parentFingerPrint,\n    childIndex: _.isNumber(arg.childIndex) ? JSUtil.integerAsBuffer(arg.childIndex) : arg.childIndex,\n    chainCode: _.isString(arg.chainCode) ? Buffer.from(arg.chainCode, 'hex') : arg.chainCode,\n    publicKey: _.isString(arg.publicKey) ? Buffer.from(arg.publicKey, 'hex')\n      : Buffer.isBuffer(arg.publicKey) ? arg.publicKey : arg.publicKey.toBuffer(),\n    checksum: _.isNumber(arg.checksum) ? JSUtil.integerAsBuffer(arg.checksum) : arg.checksum\n  }\n  return this._buildFromBuffers(buffers)\n}\n\nHDPublicKey.prototype._buildFromSerialized = function (arg) {\n  var decoded = Base58Check.decode(arg)\n  var buffers = {\n    version: decoded.slice(HDPublicKey.VersionStart, HDPublicKey.VersionEnd),\n    depth: decoded.slice(HDPublicKey.DepthStart, HDPublicKey.DepthEnd),\n    parentFingerPrint: decoded.slice(HDPublicKey.ParentFingerPrintStart,\n      HDPublicKey.ParentFingerPrintEnd),\n    childIndex: decoded.slice(HDPublicKey.ChildIndexStart, HDPublicKey.ChildIndexEnd),\n    chainCode: decoded.slice(HDPublicKey.ChainCodeStart, HDPublicKey.ChainCodeEnd),\n    publicKey: decoded.slice(HDPublicKey.PublicKeyStart, HDPublicKey.PublicKeyEnd),\n    checksum: decoded.slice(HDPublicKey.ChecksumStart, HDPublicKey.ChecksumEnd),\n    xpubkey: arg\n  }\n  return this._buildFromBuffers(buffers)\n}\n\n/**\n * Receives a object with buffers in all the properties and populates the\n * internal structure\n *\n * @param {Object} arg\n * @param {buffer.Buffer} arg.version\n * @param {buffer.Buffer} arg.depth\n * @param {buffer.Buffer} arg.parentFingerPrint\n * @param {buffer.Buffer} arg.childIndex\n * @param {buffer.Buffer} arg.chainCode\n * @param {buffer.Buffer} arg.publicKey\n * @param {buffer.Buffer} arg.checksum\n * @param {string=} arg.xpubkey - if set, don't recalculate the base58\n *      representation\n * @return {HDPublicKey} this\n */\nHDPublicKey.prototype._buildFromBuffers = function (arg) {\n  HDPublicKey._validateBufferArguments(arg)\n\n  JSUtil.defineImmutable(this, {\n    _buffers: arg\n  })\n\n  var sequence = [\n    arg.version, arg.depth, arg.parentFingerPrint, arg.childIndex, arg.chainCode,\n    arg.publicKey\n  ]\n  var concat = Buffer.concat(sequence)\n  var checksum = Base58Check.checksum(concat)\n  if (!arg.checksum || !arg.checksum.length) {\n    arg.checksum = checksum\n  } else {\n    if (arg.checksum.toString('hex') !== checksum.toString('hex')) {\n      throw new errors.InvalidB58Checksum(concat, checksum)\n    }\n  }\n  var network = Network.get(arg.version.readUInt32BE(0))\n\n  var xpubkey\n  xpubkey = Base58Check.encode(Buffer.concat(sequence))\n  arg.xpubkey = Buffer.from(xpubkey)\n\n  var publicKey = new PublicKey(arg.publicKey, { network: network })\n  var size = HDPublicKey.ParentFingerPrintSize\n  var fingerPrint = Hash.sha256ripemd160(publicKey.toBuffer()).slice(0, size)\n\n  JSUtil.defineImmutable(this, {\n    xpubkey: xpubkey,\n    network: network,\n    depth: arg.depth[0],\n    publicKey: publicKey,\n    fingerPrint: fingerPrint\n  })\n\n  return this\n}\n\nHDPublicKey._validateBufferArguments = function (arg) {\n  var checkBuffer = function (name, size) {\n    var buff = arg[name]\n    assert(Buffer.isBuffer(buff), name + ' argument is not a buffer, it\\'s ' + typeof buff)\n    assert(\n      buff.length === size,\n      name + ' has not the expected size: found ' + buff.length + ', expected ' + size\n    )\n  }\n  checkBuffer('version', HDPublicKey.VersionSize)\n  checkBuffer('depth', HDPublicKey.DepthSize)\n  checkBuffer('parentFingerPrint', HDPublicKey.ParentFingerPrintSize)\n  checkBuffer('childIndex', HDPublicKey.ChildIndexSize)\n  checkBuffer('chainCode', HDPublicKey.ChainCodeSize)\n  checkBuffer('publicKey', HDPublicKey.PublicKeySize)\n  if (arg.checksum && arg.checksum.length) {\n    checkBuffer('checksum', HDPublicKey.CheckSumSize)\n  }\n}\n\nHDPublicKey.fromString = function (arg) {\n  $.checkArgument(_.isString(arg), 'No valid string was provided')\n  return new HDPublicKey(arg)\n}\n\nHDPublicKey.fromObject = function (arg) {\n  $.checkArgument(_.isObject(arg), 'No valid argument was provided')\n  return new HDPublicKey(arg)\n}\n\n/**\n * Returns the base58 checked representation of the public key\n * @return {string} a string starting with \"xpub...\" in livenet\n */\nHDPublicKey.prototype.toString = function () {\n  return this.xpubkey\n}\n\n/**\n * Returns the console representation of this extended public key.\n * @return string\n */\nHDPublicKey.prototype.inspect = function () {\n  return '<HDPublicKey: ' + this.xpubkey + '>'\n}\n\n/**\n * Returns a plain JavaScript object with information to reconstruct a key.\n *\n * Fields are: <ul>\n *  <li> network: 'livenet' or 'testnet'\n *  <li> depth: a number from 0 to 255, the depth to the master extended key\n *  <li> fingerPrint: a number of 32 bits taken from the hash of the public key\n *  <li> fingerPrint: a number of 32 bits taken from the hash of this key's\n *  <li>     parent's public key\n *  <li> childIndex: index with which this key was derived\n *  <li> chainCode: string in hexa encoding used for derivation\n *  <li> publicKey: string, hexa encoded, in compressed key format\n *  <li> checksum: this._buffers.checksum.readUInt32BE(0),\n *  <li> xpubkey: the string with the base58 representation of this extended key\n *  <li> checksum: the base58 checksum of xpubkey\n * </ul>\n */\nHDPublicKey.prototype.toObject = HDPublicKey.prototype.toJSON = function toObject () {\n  return {\n    network: Network.get(this._buffers.version.readUInt32BE(0)).name,\n    depth: this._buffers.depth[0],\n    fingerPrint: this.fingerPrint.readUInt32BE(0),\n    parentFingerPrint: this._buffers.parentFingerPrint.readUInt32BE(0),\n    childIndex: this._buffers.childIndex.readUInt32BE(0),\n    chainCode: this._buffers.chainCode.toString('hex'),\n    publicKey: this.publicKey.toString(),\n    checksum: this._buffers.checksum.readUInt32BE(0),\n    xpubkey: this.xpubkey\n  }\n}\n\n/**\n * Create a HDPublicKey from a buffer argument\n *\n * @param {Buffer} arg\n * @return {HDPublicKey}\n */\nHDPublicKey.fromBuffer = function (arg) {\n  return new HDPublicKey(arg)\n}\n\n/**\n * Create a HDPublicKey from a hex string argument\n *\n * @param {Buffer} arg\n * @return {HDPublicKey}\n */\nHDPublicKey.fromHex = function (hex) {\n  return HDPublicKey.fromBuffer(Buffer.from(hex, 'hex'))\n}\n\n/**\n * Return a buffer representation of the xpubkey\n *\n * @return {Buffer}\n */\nHDPublicKey.prototype.toBuffer = function () {\n  return Buffer.from(this._buffers.xpubkey)\n}\n\n/**\n * Return a hex string representation of the xpubkey\n *\n * @return {Buffer}\n */\nHDPublicKey.prototype.toHex = function () {\n  return this.toBuffer().toString('hex')\n}\n\nHDPublicKey.Hardened = 0x80000000\nHDPublicKey.RootElementAlias = ['m', 'M']\n\nHDPublicKey.VersionSize = 4\nHDPublicKey.DepthSize = 1\nHDPublicKey.ParentFingerPrintSize = 4\nHDPublicKey.ChildIndexSize = 4\nHDPublicKey.ChainCodeSize = 32\nHDPublicKey.PublicKeySize = 33\nHDPublicKey.CheckSumSize = 4\n\nHDPublicKey.DataSize = 78\nHDPublicKey.SerializedByteSize = 82\n\nHDPublicKey.VersionStart = 0\nHDPublicKey.VersionEnd = HDPublicKey.VersionStart + HDPublicKey.VersionSize\nHDPublicKey.DepthStart = HDPublicKey.VersionEnd\nHDPublicKey.DepthEnd = HDPublicKey.DepthStart + HDPublicKey.DepthSize\nHDPublicKey.ParentFingerPrintStart = HDPublicKey.DepthEnd\nHDPublicKey.ParentFingerPrintEnd = HDPublicKey.ParentFingerPrintStart + HDPublicKey.ParentFingerPrintSize\nHDPublicKey.ChildIndexStart = HDPublicKey.ParentFingerPrintEnd\nHDPublicKey.ChildIndexEnd = HDPublicKey.ChildIndexStart + HDPublicKey.ChildIndexSize\nHDPublicKey.ChainCodeStart = HDPublicKey.ChildIndexEnd\nHDPublicKey.ChainCodeEnd = HDPublicKey.ChainCodeStart + HDPublicKey.ChainCodeSize\nHDPublicKey.PublicKeyStart = HDPublicKey.ChainCodeEnd\nHDPublicKey.PublicKeyEnd = HDPublicKey.PublicKeyStart + HDPublicKey.PublicKeySize\nHDPublicKey.ChecksumStart = HDPublicKey.PublicKeyEnd\nHDPublicKey.ChecksumEnd = HDPublicKey.ChecksumStart + HDPublicKey.CheckSumSize\n\nassert(HDPublicKey.PublicKeyEnd === HDPublicKey.DataSize)\nassert(HDPublicKey.ChecksumEnd === HDPublicKey.SerializedByteSize)\n\nmodule.exports = HDPublicKey\n","'use strict'\n\nvar assert = require('assert')\nvar buffer = require('buffer')\nvar _ = require('./util/_')\nvar $ = require('./util/preconditions')\n\nvar BN = require('./crypto/bn')\nvar Base58 = require('./encoding/base58')\nvar Base58Check = require('./encoding/base58check')\nvar Hash = require('./crypto/hash')\nvar Network = require('./networks')\nvar Point = require('./crypto/point')\nvar PrivateKey = require('./privatekey')\nvar Random = require('./crypto/random')\n\nvar errors = require('./errors')\nvar hdErrors = errors.HDPrivateKey\nvar JSUtil = require('./util/js')\n\nvar MINIMUM_ENTROPY_BITS = 128\nvar BITS_TO_BYTES = 1 / 8\nvar MAXIMUM_ENTROPY_BITS = 512\n\n/**\n * Represents an instance of an hierarchically derived private key.\n *\n * More info on https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\n *\n * @constructor\n * @param {string|Buffer|Object} arg\n */\nfunction HDPrivateKey (arg) {\n  if (arg instanceof HDPrivateKey) {\n    return arg\n  }\n  if (!(this instanceof HDPrivateKey)) {\n    return new HDPrivateKey(arg)\n  }\n  if (!arg) {\n    return this._generateRandomly()\n  }\n\n  if (Network.get(arg)) {\n    return this._generateRandomly(arg)\n  } else if (_.isString(arg) || Buffer.isBuffer(arg)) {\n    if (HDPrivateKey.isValidSerialized(arg)) {\n      this._buildFromSerialized(arg)\n    } else if (JSUtil.isValidJSON(arg)) {\n      this._buildFromJSON(arg)\n    } else if (Buffer.isBuffer(arg) && HDPrivateKey.isValidSerialized(arg.toString())) {\n      this._buildFromSerialized(arg.toString())\n    } else {\n      throw HDPrivateKey.getSerializedError(arg)\n    }\n  } else if (_.isObject(arg)) {\n    this._buildFromObject(arg)\n  } else {\n    throw new hdErrors.UnrecognizedArgument(arg)\n  }\n}\n\nHDPrivateKey.fromRandom = function () {\n  return new HDPrivateKey()\n}\n\n/**\n * Verifies that a given path is valid.\n *\n * @param {string|number} arg\n * @param {boolean?} hardened\n * @return {boolean}\n */\nHDPrivateKey.isValidPath = function (arg, hardened) {\n  if (_.isString(arg)) {\n    var indexes = HDPrivateKey._getDerivationIndexes(arg)\n    return indexes !== null && _.every(indexes, HDPrivateKey.isValidPath)\n  }\n\n  if (_.isNumber(arg)) {\n    if (arg < HDPrivateKey.Hardened && hardened === true) {\n      arg += HDPrivateKey.Hardened\n    }\n    return arg >= 0 && arg < HDPrivateKey.MaxIndex\n  }\n\n  return false\n}\n\n/**\n * Internal function that splits a string path into a derivation index array.\n * It will return null if the string path is malformed.\n * It does not validate if indexes are in bounds.\n *\n * @param {string} path\n * @return {Array}\n */\nHDPrivateKey._getDerivationIndexes = function (path) {\n  var steps = path.split('/')\n\n  // Special cases:\n  if (_.includes(HDPrivateKey.RootElementAlias, path)) {\n    return []\n  }\n\n  if (!_.includes(HDPrivateKey.RootElementAlias, steps[0])) {\n    return null\n  }\n\n  var indexes = steps.slice(1).map(function (step) {\n    var isHardened = step.slice(-1) === '\\''\n    if (isHardened) {\n      step = step.slice(0, -1)\n    }\n    if (!step || step[0] === '-') {\n      return NaN\n    }\n    var index = +step // cast to number\n    if (isHardened) {\n      index += HDPrivateKey.Hardened\n    }\n\n    return index\n  })\n\n  return _.some(indexes, isNaN) ? null : indexes\n}\n\n/**\n * WARNING: This method is deprecated. Use deriveChild or deriveNonCompliantChild instead. This is not BIP32 compliant\n *\n *\n * Get a derived child based on a string or number.\n *\n * If the first argument is a string, it's parsed as the full path of\n * derivation. Valid values for this argument include \"m\" (which returns the\n * same private key), \"m/0/1/40/2'/1000\", where the ' quote means a hardened\n * derivation.\n *\n * If the first argument is a number, the child with that index will be\n * derived. If the second argument is truthy, the hardened version will be\n * derived. See the example usage for clarification.\n *\n * @example\n * ```javascript\n * var parent = new HDPrivateKey('xprv...');\n * var child_0_1_2h = parent.derive(0).derive(1).derive(2, true);\n * var copy_of_child_0_1_2h = parent.derive(\"m/0/1/2'\");\n * assert(child_0_1_2h.xprivkey === copy_of_child_0_1_2h);\n * ```\n *\n * @param {string|number} arg\n * @param {boolean?} hardened\n */\nHDPrivateKey.prototype.derive = function () {\n  throw new Error('derive has been deprecated. use deriveChild or, for the old way, deriveNonCompliantChild.')\n}\n\n/**\n * WARNING: This method will not be officially supported until v1.0.0.\n *\n *\n * Get a derived child based on a string or number.\n *\n * If the first argument is a string, it's parsed as the full path of\n * derivation. Valid values for this argument include \"m\" (which returns the\n * same private key), \"m/0/1/40/2'/1000\", where the ' quote means a hardened\n * derivation.\n *\n * If the first argument is a number, the child with that index will be\n * derived. If the second argument is truthy, the hardened version will be\n * derived. See the example usage for clarification.\n *\n * WARNING: The `nonCompliant` option should NOT be used, except for older implementation\n * that used a derivation strategy that used a non-zero padded private key.\n *\n * @example\n * ```javascript\n * var parent = new HDPrivateKey('xprv...');\n * var child_0_1_2h = parent.deriveChild(0).deriveChild(1).deriveChild(2, true);\n * var copy_of_child_0_1_2h = parent.deriveChild(\"m/0/1/2'\");\n * assert(child_0_1_2h.xprivkey === copy_of_child_0_1_2h);\n * ```\n *\n * @param {string|number} arg\n * @param {boolean?} hardened\n */\nHDPrivateKey.prototype.deriveChild = function (arg, hardened) {\n  if (_.isNumber(arg)) {\n    return this._deriveWithNumber(arg, hardened)\n  } else if (_.isString(arg)) {\n    return this._deriveFromString(arg)\n  } else {\n    throw new hdErrors.InvalidDerivationArgument(arg)\n  }\n}\n\n/**\n * WARNING: This method will not be officially supported until v1.0.0\n *\n *\n * WARNING: If this is a new implementation you should NOT use this method, you should be using\n * `derive` instead.\n *\n * This method is explicitly for use and compatibility with an implementation that\n * was not compliant with BIP32 regarding the derivation algorithm. The private key\n * must be 32 bytes hashing, and this implementation will use the non-zero padded\n * serialization of a private key, such that it's still possible to derive the privateKey\n * to recover those funds.\n *\n * @param {string|number} arg\n * @param {boolean?} hardened\n */\nHDPrivateKey.prototype.deriveNonCompliantChild = function (arg, hardened) {\n  if (_.isNumber(arg)) {\n    return this._deriveWithNumber(arg, hardened, true)\n  } else if (_.isString(arg)) {\n    return this._deriveFromString(arg, true)\n  } else {\n    throw new hdErrors.InvalidDerivationArgument(arg)\n  }\n}\n\nHDPrivateKey.prototype._deriveWithNumber = function (index, hardened, nonCompliant) {\n  if (!HDPrivateKey.isValidPath(index, hardened)) {\n    throw new hdErrors.InvalidPath(index)\n  }\n\n  hardened = index >= HDPrivateKey.Hardened ? true : hardened\n  if (index < HDPrivateKey.Hardened && hardened === true) {\n    index += HDPrivateKey.Hardened\n  }\n\n  var indexBuffer = JSUtil.integerAsBuffer(index)\n  var data\n  if (hardened && nonCompliant) {\n    // The private key serialization in this case will not be exactly 32 bytes and can be\n    // any value less, and the value is not zero-padded.\n    var nonZeroPadded = this.privateKey.bn.toBuffer()\n    data = Buffer.concat([buffer.Buffer.from([0]), nonZeroPadded, indexBuffer])\n  } else if (hardened) {\n    // This will use a 32 byte zero padded serialization of the private key\n    var privateKeyBuffer = this.privateKey.bn.toBuffer({ size: 32 })\n    assert(privateKeyBuffer.length === 32, 'length of private key buffer is expected to be 32 bytes')\n    data = Buffer.concat([buffer.Buffer.from([0]), privateKeyBuffer, indexBuffer])\n  } else {\n    data = Buffer.concat([this.publicKey.toBuffer(), indexBuffer])\n  }\n  var hash = Hash.sha512hmac(data, this._buffers.chainCode)\n  var leftPart = BN.fromBuffer(hash.slice(0, 32), {\n    size: 32\n  })\n  var chainCode = hash.slice(32, 64)\n\n  var privateKey = leftPart.add(this.privateKey.toBigNumber()).umod(Point.getN()).toBuffer({\n    size: 32\n  })\n\n  if (!PrivateKey.isValid(privateKey)) {\n    // Index at this point is already hardened, we can pass null as the hardened arg\n    return this._deriveWithNumber(index + 1, null, nonCompliant)\n  }\n\n  var derived = new HDPrivateKey({\n    network: this.network,\n    depth: this.depth + 1,\n    parentFingerPrint: this.fingerPrint,\n    childIndex: index,\n    chainCode: chainCode,\n    privateKey: privateKey\n  })\n\n  return derived\n}\n\nHDPrivateKey.prototype._deriveFromString = function (path, nonCompliant) {\n  if (!HDPrivateKey.isValidPath(path)) {\n    throw new hdErrors.InvalidPath(path)\n  }\n\n  var indexes = HDPrivateKey._getDerivationIndexes(path)\n  var derived = indexes.reduce(function (prev, index) {\n    return prev._deriveWithNumber(index, null, nonCompliant)\n  }, this)\n\n  return derived\n}\n\n/**\n * Verifies that a given serialized private key in base58 with checksum format\n * is valid.\n *\n * @param {string|Buffer} data - the serialized private key\n * @param {string|Network=} network - optional, if present, checks that the\n *     network provided matches the network serialized.\n * @return {boolean}\n */\nHDPrivateKey.isValidSerialized = function (data, network) {\n  return !HDPrivateKey.getSerializedError(data, network)\n}\n\n/**\n * Checks what's the error that causes the validation of a serialized private key\n * in base58 with checksum to fail.\n *\n * @param {string|Buffer} data - the serialized private key\n * @param {string|Network=} network - optional, if present, checks that the\n *     network provided matches the network serialized.\n * @return {errors.InvalidArgument|null}\n */\nHDPrivateKey.getSerializedError = function (data, network) {\n  if (!(_.isString(data) || Buffer.isBuffer(data))) {\n    return new hdErrors.UnrecognizedArgument('Expected string or buffer')\n  }\n  if (!Base58.validCharacters(data)) {\n    return new errors.InvalidB58Char('(unknown)', data)\n  }\n  try {\n    data = Base58Check.decode(data)\n  } catch (e) {\n    return new errors.InvalidB58Checksum(data)\n  }\n  if (data.length !== HDPrivateKey.DataLength) {\n    return new hdErrors.InvalidLength(data)\n  }\n  if (!_.isUndefined(network)) {\n    var error = HDPrivateKey._validateNetwork(data, network)\n    if (error) {\n      return error\n    }\n  }\n  return null\n}\n\nHDPrivateKey._validateNetwork = function (data, networkArg) {\n  var network = Network.get(networkArg)\n  if (!network) {\n    return new errors.InvalidNetworkArgument(networkArg)\n  }\n  var version = data.slice(0, 4)\n  if (version.readUInt32BE(0) !== network.xprivkey) {\n    return new errors.InvalidNetwork(version)\n  }\n  return null\n}\n\nHDPrivateKey.fromString = function (arg) {\n  $.checkArgument(_.isString(arg), 'No valid string was provided')\n  return new HDPrivateKey(arg)\n}\n\nHDPrivateKey.fromObject = function (arg) {\n  $.checkArgument(_.isObject(arg), 'No valid argument was provided')\n  return new HDPrivateKey(arg)\n}\n\nHDPrivateKey.prototype._buildFromJSON = function (arg) {\n  return this._buildFromObject(JSON.parse(arg))\n}\n\nHDPrivateKey.prototype._buildFromObject = function (arg) {\n  // TODO: Type validation\n  var buffers = {\n    version: arg.network ? JSUtil.integerAsBuffer(Network.get(arg.network).xprivkey) : arg.version,\n    depth: _.isNumber(arg.depth) ? Buffer.from([arg.depth & 0xff]) : arg.depth,\n    parentFingerPrint: _.isNumber(arg.parentFingerPrint) ? JSUtil.integerAsBuffer(arg.parentFingerPrint) : arg.parentFingerPrint,\n    childIndex: _.isNumber(arg.childIndex) ? JSUtil.integerAsBuffer(arg.childIndex) : arg.childIndex,\n    chainCode: _.isString(arg.chainCode) ? Buffer.from(arg.chainCode, 'hex') : arg.chainCode,\n    privateKey: (_.isString(arg.privateKey) && JSUtil.isHexa(arg.privateKey)) ? Buffer.from(arg.privateKey, 'hex') : arg.privateKey,\n    checksum: arg.checksum ? (arg.checksum.length ? arg.checksum : JSUtil.integerAsBuffer(arg.checksum)) : undefined\n  }\n  return this._buildFromBuffers(buffers)\n}\n\nHDPrivateKey.prototype._buildFromSerialized = function (arg) {\n  var decoded = Base58Check.decode(arg)\n  var buffers = {\n    version: decoded.slice(HDPrivateKey.VersionStart, HDPrivateKey.VersionEnd),\n    depth: decoded.slice(HDPrivateKey.DepthStart, HDPrivateKey.DepthEnd),\n    parentFingerPrint: decoded.slice(HDPrivateKey.ParentFingerPrintStart,\n      HDPrivateKey.ParentFingerPrintEnd),\n    childIndex: decoded.slice(HDPrivateKey.ChildIndexStart, HDPrivateKey.ChildIndexEnd),\n    chainCode: decoded.slice(HDPrivateKey.ChainCodeStart, HDPrivateKey.ChainCodeEnd),\n    privateKey: decoded.slice(HDPrivateKey.PrivateKeyStart, HDPrivateKey.PrivateKeyEnd),\n    checksum: decoded.slice(HDPrivateKey.ChecksumStart, HDPrivateKey.ChecksumEnd),\n    xprivkey: arg\n  }\n  return this._buildFromBuffers(buffers)\n}\n\nHDPrivateKey.prototype._generateRandomly = function (network) {\n  return HDPrivateKey.fromSeed(Random.getRandomBuffer(64), network)\n}\n\n/**\n * Generate a private key from a seed, as described in BIP32\n *\n * @param {string|Buffer} hexa\n * @param {*} network\n * @return HDPrivateKey\n */\nHDPrivateKey.fromSeed = function (hexa, network) {\n  if (JSUtil.isHexaString(hexa)) {\n    hexa = Buffer.from(hexa, 'hex')\n  }\n  if (!Buffer.isBuffer(hexa)) {\n    throw new hdErrors.InvalidEntropyArgument(hexa)\n  }\n  if (hexa.length < MINIMUM_ENTROPY_BITS * BITS_TO_BYTES) {\n    throw new hdErrors.InvalidEntropyArgument.NotEnoughEntropy(hexa)\n  }\n  if (hexa.length > MAXIMUM_ENTROPY_BITS * BITS_TO_BYTES) {\n    throw new hdErrors.InvalidEntropyArgument.TooMuchEntropy(hexa)\n  }\n  var hash = Hash.sha512hmac(hexa, buffer.Buffer.from('Bitcoin seed'))\n\n  return new HDPrivateKey({\n    network: Network.get(network) || Network.defaultNetwork,\n    depth: 0,\n    parentFingerPrint: 0,\n    childIndex: 0,\n    privateKey: hash.slice(0, 32),\n    chainCode: hash.slice(32, 64)\n  })\n}\n\nHDPrivateKey.prototype._calcHDPublicKey = function () {\n  if (!this._hdPublicKey) {\n    var HDPublicKey = require('./hdpublickey')\n    this._hdPublicKey = new HDPublicKey(this)\n  }\n}\n\n/**\n * Receives a object with buffers in all the properties and populates the\n * internal structure\n *\n * @param {Object} arg\n * @param {buffer.Buffer} arg.version\n * @param {buffer.Buffer} arg.depth\n * @param {buffer.Buffer} arg.parentFingerPrint\n * @param {buffer.Buffer} arg.childIndex\n * @param {buffer.Buffer} arg.chainCode\n * @param {buffer.Buffer} arg.privateKey\n * @param {buffer.Buffer} arg.checksum\n * @param {string=} arg.xprivkey - if set, don't recalculate the base58\n *      representation\n * @return {HDPrivateKey} this\n */\nHDPrivateKey.prototype._buildFromBuffers = function (arg) {\n  HDPrivateKey._validateBufferArguments(arg)\n\n  JSUtil.defineImmutable(this, {\n    _buffers: arg\n  })\n\n  var sequence = [\n    arg.version, arg.depth, arg.parentFingerPrint, arg.childIndex, arg.chainCode,\n    Buffer.alloc(1), arg.privateKey\n  ]\n  var concat = buffer.Buffer.concat(sequence)\n  if (!arg.checksum || !arg.checksum.length) {\n    arg.checksum = Base58Check.checksum(concat)\n  } else {\n    if (arg.checksum.toString() !== Base58Check.checksum(concat).toString()) {\n      throw new errors.InvalidB58Checksum(concat)\n    }\n  }\n\n  var network = Network.get(arg.version.readUInt32BE(0))\n  var xprivkey\n  xprivkey = Base58Check.encode(buffer.Buffer.concat(sequence))\n  arg.xprivkey = Buffer.from(xprivkey)\n\n  var privateKey = new PrivateKey(BN.fromBuffer(arg.privateKey), network)\n  var publicKey = privateKey.toPublicKey()\n  var size = HDPrivateKey.ParentFingerPrintSize\n  var fingerPrint = Hash.sha256ripemd160(publicKey.toBuffer()).slice(0, size)\n\n  JSUtil.defineImmutable(this, {\n    xprivkey: xprivkey,\n    network: network,\n    depth: arg.depth[0],\n    privateKey: privateKey,\n    publicKey: publicKey,\n    fingerPrint: fingerPrint\n  })\n\n  this._hdPublicKey = null\n\n  Object.defineProperty(this, 'hdPublicKey', {\n    configurable: false,\n    enumerable: true,\n    get: function () {\n      this._calcHDPublicKey()\n      return this._hdPublicKey\n    }\n  })\n  Object.defineProperty(this, 'xpubkey', {\n    configurable: false,\n    enumerable: true,\n    get: function () {\n      this._calcHDPublicKey()\n      return this._hdPublicKey.xpubkey\n    }\n  })\n  return this\n}\n\nHDPrivateKey._validateBufferArguments = function (arg) {\n  var checkBuffer = function (name, size) {\n    var buff = arg[name]\n    assert(Buffer.isBuffer(buff), name + ' argument is not a buffer')\n    assert(\n      buff.length === size,\n      name + ' has not the expected size: found ' + buff.length + ', expected ' + size\n    )\n  }\n  checkBuffer('version', HDPrivateKey.VersionSize)\n  checkBuffer('depth', HDPrivateKey.DepthSize)\n  checkBuffer('parentFingerPrint', HDPrivateKey.ParentFingerPrintSize)\n  checkBuffer('childIndex', HDPrivateKey.ChildIndexSize)\n  checkBuffer('chainCode', HDPrivateKey.ChainCodeSize)\n  checkBuffer('privateKey', HDPrivateKey.PrivateKeySize)\n  if (arg.checksum && arg.checksum.length) {\n    checkBuffer('checksum', HDPrivateKey.CheckSumSize)\n  }\n}\n\n/**\n * Returns the string representation of this private key (a string starting\n * with \"xprv...\"\n *\n * @return string\n */\nHDPrivateKey.prototype.toString = function () {\n  return this.xprivkey\n}\n\n/**\n * Returns the console representation of this extended private key.\n * @return string\n */\nHDPrivateKey.prototype.inspect = function () {\n  return '<HDPrivateKey: ' + this.xprivkey + '>'\n}\n\n/**\n * Returns a plain object with a representation of this private key.\n *\n * Fields include:<ul>\n * <li> network: either 'livenet' or 'testnet'\n * <li> depth: a number ranging from 0 to 255\n * <li> fingerPrint: a number ranging from 0 to 2^32-1, taken from the hash of the\n * <li>     associated public key\n * <li> parentFingerPrint: a number ranging from 0 to 2^32-1, taken from the hash\n * <li>     of this parent's associated public key or zero.\n * <li> childIndex: the index from which this child was derived (or zero)\n * <li> chainCode: an hexa string representing a number used in the derivation\n * <li> privateKey: the private key associated, in hexa representation\n * <li> xprivkey: the representation of this extended private key in checksum\n * <li>     base58 format\n * <li> checksum: the base58 checksum of xprivkey\n * </ul>\n *  @return {Object}\n */\nHDPrivateKey.prototype.toObject = HDPrivateKey.prototype.toJSON = function toObject () {\n  return {\n    network: Network.get(this._buffers.version.readUInt32BE(0), 'xprivkey').name,\n    depth: this._buffers.depth[0],\n    fingerPrint: this.fingerPrint.readUInt32BE(0),\n    parentFingerPrint: this._buffers.parentFingerPrint.readUInt32BE(0),\n    childIndex: this._buffers.childIndex.readUInt32BE(0),\n    chainCode: this._buffers.chainCode.toString('hex'),\n    privateKey: this.privateKey.toBuffer().toString('hex'),\n    checksum: this._buffers.checksum.readUInt32BE(0),\n    xprivkey: this.xprivkey\n  }\n}\n\n/**\n * Build a HDPrivateKey from a buffer\n *\n * @param {Buffer} arg\n * @return {HDPrivateKey}\n */\nHDPrivateKey.fromBuffer = function (buf) {\n  return new HDPrivateKey(buf.toString())\n}\n\n/**\n * Build a HDPrivateKey from a hex string\n *\n * @param {string} hex\n * @return {HDPrivateKey}\n */\nHDPrivateKey.fromHex = function (hex) {\n  return HDPrivateKey.fromBuffer(Buffer.from(hex, 'hex'))\n}\n\n/**\n * Returns a buffer representation of the HDPrivateKey\n *\n * @return {string}\n */\nHDPrivateKey.prototype.toBuffer = function () {\n  return Buffer.from(this.toString())\n}\n\n/**\n * Returns a hex string representation of the HDPrivateKey\n *\n * @return {string}\n */\nHDPrivateKey.prototype.toHex = function () {\n  return this.toBuffer().toString('hex')\n}\n\nHDPrivateKey.DefaultDepth = 0\nHDPrivateKey.DefaultFingerprint = 0\nHDPrivateKey.DefaultChildIndex = 0\nHDPrivateKey.Hardened = 0x80000000\nHDPrivateKey.MaxIndex = 2 * HDPrivateKey.Hardened\n\nHDPrivateKey.RootElementAlias = ['m', 'M', 'm\\'', 'M\\'']\n\nHDPrivateKey.VersionSize = 4\nHDPrivateKey.DepthSize = 1\nHDPrivateKey.ParentFingerPrintSize = 4\nHDPrivateKey.ChildIndexSize = 4\nHDPrivateKey.ChainCodeSize = 32\nHDPrivateKey.PrivateKeySize = 32\nHDPrivateKey.CheckSumSize = 4\n\nHDPrivateKey.DataLength = 78\nHDPrivateKey.SerializedByteSize = 82\n\nHDPrivateKey.VersionStart = 0\nHDPrivateKey.VersionEnd = HDPrivateKey.VersionStart + HDPrivateKey.VersionSize\nHDPrivateKey.DepthStart = HDPrivateKey.VersionEnd\nHDPrivateKey.DepthEnd = HDPrivateKey.DepthStart + HDPrivateKey.DepthSize\nHDPrivateKey.ParentFingerPrintStart = HDPrivateKey.DepthEnd\nHDPrivateKey.ParentFingerPrintEnd = HDPrivateKey.ParentFingerPrintStart + HDPrivateKey.ParentFingerPrintSize\nHDPrivateKey.ChildIndexStart = HDPrivateKey.ParentFingerPrintEnd\nHDPrivateKey.ChildIndexEnd = HDPrivateKey.ChildIndexStart + HDPrivateKey.ChildIndexSize\nHDPrivateKey.ChainCodeStart = HDPrivateKey.ChildIndexEnd\nHDPrivateKey.ChainCodeEnd = HDPrivateKey.ChainCodeStart + HDPrivateKey.ChainCodeSize\nHDPrivateKey.PrivateKeyStart = HDPrivateKey.ChainCodeEnd + 1\nHDPrivateKey.PrivateKeyEnd = HDPrivateKey.PrivateKeyStart + HDPrivateKey.PrivateKeySize\nHDPrivateKey.ChecksumStart = HDPrivateKey.PrivateKeyEnd\nHDPrivateKey.ChecksumEnd = HDPrivateKey.ChecksumStart + HDPrivateKey.CheckSumSize\n\nassert(HDPrivateKey.ChecksumEnd === HDPrivateKey.SerializedByteSize)\n\nmodule.exports = HDPrivateKey\n","'use strict'\n\nvar bsv = module.exports\n\n// module information\nbsv.version = 'v' + require('./package.json').version\nbsv.versionGuard = function (version) {\n  if (version !== undefined) {\n    var message = `\n      More than one instance of bsv found.\n      Please make sure to require bsv and check that submodules do\n      not also include their own bsv dependency.`\n    console.warn(message)\n  }\n}\nbsv.versionGuard(global._bsv)\nglobal._bsv = bsv.version\n\n// crypto\nbsv.crypto = {}\nbsv.crypto.BN = require('./lib/crypto/bn')\nbsv.crypto.ECDSA = require('./lib/crypto/ecdsa')\nbsv.crypto.Hash = require('./lib/crypto/hash')\nbsv.crypto.Random = require('./lib/crypto/random')\nbsv.crypto.Point = require('./lib/crypto/point')\nbsv.crypto.Signature = require('./lib/crypto/signature')\n\n// encoding\nbsv.encoding = {}\nbsv.encoding.Base58 = require('./lib/encoding/base58')\nbsv.encoding.Base58Check = require('./lib/encoding/base58check')\nbsv.encoding.BufferReader = require('./lib/encoding/bufferreader')\nbsv.encoding.BufferWriter = require('./lib/encoding/bufferwriter')\nbsv.encoding.Varint = require('./lib/encoding/varint')\n\n// utilities\nbsv.util = {}\nbsv.util.js = require('./lib/util/js')\nbsv.util.preconditions = require('./lib/util/preconditions')\n\n// errors thrown by the library\nbsv.errors = require('./lib/errors')\n\n// main bitcoin library\nbsv.Address = require('./lib/address')\nbsv.Block = require('./lib/block')\nbsv.MerkleBlock = require('./lib/block/merkleblock')\nbsv.BlockHeader = require('./lib/block/blockheader')\nbsv.HDPrivateKey = require('./lib/hdprivatekey.js')\nbsv.HDPublicKey = require('./lib/hdpublickey.js')\nbsv.Networks = require('./lib/networks')\nbsv.Opcode = require('./lib/opcode')\nbsv.PrivateKey = require('./lib/privatekey')\nbsv.PublicKey = require('./lib/publickey')\nbsv.Script = require('./lib/script')\nbsv.Transaction = require('./lib/transaction')\n\n// dependencies, subject to change\nbsv.deps = {}\nbsv.deps.bnjs = require('bn.js')\nbsv.deps.bs58 = require('bs58')\nbsv.deps.Buffer = Buffer\nbsv.deps.elliptic = require('elliptic')\nbsv.deps._ = require('./lib/util/_')\n\n// Internal usage, exposed for testing/advanced tweaking\nbsv.Transaction.sighash = require('./lib/transaction/sighash')\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n",null,null,null,null,null],"names":["require$$0","this","_","format","bsv","require$$1","errorsModule","errors","require$$2","BN","$","Buffer","bn","assert","r","brorandModule","brorand","utils","base","inherits_browserModule","inherits","Base","require$$3","Point","rotr32","rotl32","sum32","sum32_3","sum32_4","sum32_5","sum64","sum64_hi","sum64_lo","sum64_4_hi","sum64_4_lo","sum64_5_hi","sum64_5_lo","rotr64_hi","rotr64_lo","shr64_hi","shr64_lo","BlockHash","common","ft_1","ch32","maj32","s0_256","s1_256","g0_256","g1_256","shaCommon","SHA256","SHA512","require$$4","curve","hash","HmacDRBG","KeyPair","key","Signature","signature","curves","require$$5","require$$6","EC","ec","parseBytes","cachedProperty","JSUtil","process","ALPHABET","bs58","buffer","Base58","BufferReader","BufferWriter","require$$7","require$$8","require$$9","require$$10","require$$11","require$$12","publickey","require$$13","require$$14","require$$15","require$$16","require$$17","Hash","BlockHeader","idProperty","Transaction","global","require$$18","require$$19","require$$20","require$$21","require$$22","require$$23","require$$24","require$$25","require$$26","require$$27","require$$28","require$$29","require$$30","require$$31"],"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AG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;OACpC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;OACvD,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;OAClD,EAAE,IAAI,SAAS,CAAC;EACpB;OACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;OACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAC9B,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;OACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAC7B,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;OACpC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;OACvD,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;OAClD,EAAE,IAAI,SAAS,CAAC;EACpB;OACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;OACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAC9B,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;OACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAC7B,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;OACpC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;OACvD,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;OAClD,EAAE,IAAI,SAAS,CAAC;EACpB;OACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;OACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAC9B,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;OACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAC7B,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CA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,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,E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G,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;OACpC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;OACvD,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;OAClD,EAAE,IAAI,SAAS,CAAC;EACpB;OACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;OACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAC9B,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;OACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAC7B,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI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AG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;OACpC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;OACxD,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;OACnD,GAAG,IAAI,SAAS,CAAC;EACrB;OACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;OACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAC9B,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;OACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAC7B,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;OACpC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;OACxD,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;OACnD,GAAG,IAAI,SAAS,CAAC;EACrB;OACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;OACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAC9B,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;OACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAC7B,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;OACpC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;OACxD,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;OACnD,GAAG,IAAI,SAAS,CAAC;EACrB;OACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;OACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAC9B,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;OACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAC7B,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,I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,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE;EACxD,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC;EACxD,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;EACxD,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;EACxD,CAAC,CAAC;AACF;EACA,IAAI,EAAE,GAAG;EACT,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EACxD,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;EACxD,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC;EACxD,EAAE,EAAE,EAAE,CAAC,EA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N,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,iEAAiE;UAClE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,iEAAiE;UAClE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,iEAAiE;UAClE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,iEAAiE;UAClE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,iEAAiE;EACzE,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,iEAAiE;UAClE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,iEAAiE;UAClE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,iEAAiE;UAClE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,iEAAiE;UAClE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,iEAAiE;EACzE,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,iEAAiE;UAClE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,iEAAiE;UAClE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,iEAAiE;EACzE,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,iEAAiE;UAClE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,iEAAiE;UAClE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,iEAAiE;EACzE,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,gEAAgE;EACxE,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,iEAAiE;EACzE,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,iEAAiE;UAClE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,iEAAiE;UAClE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,kEAAkE;UACnE;SACD;EACN,SAAQ,kEAAkE;EAC1E,SAAQ,iEAAiE;UAClE;SACD;EACN,SAAQ,kEAAkE;EA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AG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;OACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAC7B,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC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GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;OACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAC7B,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;OACpC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;OACvD,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;OAClD,EAAE,IAAI,SAAS,CAAC;EACpB;OACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;OACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAC9B,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;OACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAC7B,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG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AG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;OACpC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;OACvD,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;OAClD,EAAE,IAAI,SAAS,CAAC;EACpB;OACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;OACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAC9B,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;OACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAC7B,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;OACpC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;OACvD,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;OAClD,EAAE,IAAI,SAAS,CAAC;EACpB;OACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;OACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAC9B,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;OACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAC7B,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;OACpC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;OACvD,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;OAClD,EAAE,IAAI,SAAS,CAAC;EACpB;OACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;OACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAC9B,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;OACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAC7B,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;OACpC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;OACxD,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;OACnD,GAAG,IAAI,SAAS,CAAC;EACrB;OACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;OACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAC9B,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;OACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAC7B,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;OACpC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;OACxD,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;OACnD,GAAG,IAAI,SAAS,CAAC;EACrB;OACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;OACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAC9B,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;OACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAC7B,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;OACpC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;OACxD,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;OACnD,GAAG,IAAI,SAAS,CAAC;EACrB;OACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;OACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAC9B,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;OACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAC7B,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,I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"}